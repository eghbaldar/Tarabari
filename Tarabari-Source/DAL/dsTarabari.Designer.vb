'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTarabari"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTarabari
    Inherits Global.System.Data.DataSet
    
    Private tabletbl_MahalBargiri As tbl_MahalBargiriDataTable
    
    Private tabletbl_Mabda As tbl_MabdaDataTable
    
    Private tabletbl_Maghsad As tbl_MaghsadDataTable
    
    Private tabletbl_MashinRanande As tbl_MashinRanandeDataTable
    
    Private tabletbl_EzamNavgan As tbl_EzamNavganDataTable
    
    Private tablevSelectNavgan As vSelectNavganDataTable
    
    Private tabletbl_Tamirat As tbl_TamiratDataTable
    
    Private tabletbl_TamiratJoziyat As tbl_TamiratJoziyatDataTable
    
    Private tableSelectYears As SelectYearsDataTable
    
    Private tableusp_GetFactorPriceByMonths As usp_GetFactorPriceByMonthsDataTable
    
    Private tabletbl_Setting As tbl_SettingDataTable
    
    Private tabletbl_Mashin As tbl_MashinDataTable
    
    Private tabletbl_Kafi As tbl_KafiDataTable
    
    Private tabletbl_Ranandegan As tbl_RanandeganDataTable
    
    Private tablevSelectRanandeganMashin As vSelectRanandeganMashinDataTable
    
    Private tabletbl_NavganStatus As tbl_NavganStatusDataTable
    
    Private tableusp_KarkardeRoozane4Print As usp_KarkardeRoozane4PrintDataTable
    
    Private tableusp_KarkardeRoozane4Show As usp_KarkardeRoozane4ShowDataTable
    
    Private tabletbl_Sanad As tbl_SanadDataTable
    
    Private tabletbl_Tankhah As tbl_TankhahDataTable
    
    Private tabletbl_TankhahDetail_Factor As tbl_TankhahDetail_FactorDataTable
    
    Private tabletbl_TankhahDetail_Sanad As tbl_TankhahDetail_SanadDataTable
    
    Private tableusp_GetTankhahDetailByTankhahID As usp_GetTankhahDetailByTankhahIDDataTable
    
    Private tablevSanadList As vSanadListDataTable
    
    Private tablevFactorList As vFactorListDataTable
    
    Private tablevFactorSanad As vFactorSanadDataTable
    
    Private relationFK_tbl_EzamNavgan_tbl_Mabda As Global.System.Data.DataRelation
    
    Private relationFK_tbl_EzamNavgan_tbl_Maghsad As Global.System.Data.DataRelation
    
    Private relationFK_tbl_EzamNavgan_tbl_MahalBargiri As Global.System.Data.DataRelation
    
    Private relationFK_tbl_TamirgahJoziyat_tbl_Tamirat As Global.System.Data.DataRelation
    
    Private relationFK_tbl_MashinRanande_tbl_Mashin1 As Global.System.Data.DataRelation
    
    Private relationFK_tbl_EzamNavgan_tbl_Mashin1 As Global.System.Data.DataRelation
    
    Private relationFK_tbl_Tamirat_tbl_Mashin1 As Global.System.Data.DataRelation
    
    Private relationFK_tbl_Mashin_tbl_Kafi As Global.System.Data.DataRelation
    
    Private relationFK_tbl_MashinRanande_tbl_Ranandegan1 As Global.System.Data.DataRelation
    
    Private relationFK_tbl_EzamNavgan_tbl_Ranandegan1 As Global.System.Data.DataRelation
    
    Private relationFK_tbl_Tamirat_tbl_Ranandegan1 As Global.System.Data.DataRelation
    
    Private relationFK_tbl_NavganStatus_tbl_Ranandegan As Global.System.Data.DataRelation
    
    Private relationFK_tbl_Sanad_tbl_EzamNavgan As Global.System.Data.DataRelation
    
    Private relationFK_tbl_Sanad_tbl_Mabda As Global.System.Data.DataRelation
    
    Private relationFK_tbl_Sanad_tbl_Maghsad As Global.System.Data.DataRelation
    
    Private relationFK_tbl_TankhahDetail_tbl_Tamirat As Global.System.Data.DataRelation
    
    Private relationFK_tbl_TankhahDetail_tbl_Tankhah As Global.System.Data.DataRelation
    
    Private relationFK_tbl_TankhahDetail_Sanad_tbl_Tankhah As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tbl_MahalBargiri")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MahalBargiriDataTable(ds.Tables("tbl_MahalBargiri")))
            End If
            If (Not (ds.Tables("tbl_Mabda")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MabdaDataTable(ds.Tables("tbl_Mabda")))
            End If
            If (Not (ds.Tables("tbl_Maghsad")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MaghsadDataTable(ds.Tables("tbl_Maghsad")))
            End If
            If (Not (ds.Tables("tbl_MashinRanande")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MashinRanandeDataTable(ds.Tables("tbl_MashinRanande")))
            End If
            If (Not (ds.Tables("tbl_EzamNavgan")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_EzamNavganDataTable(ds.Tables("tbl_EzamNavgan")))
            End If
            If (Not (ds.Tables("vSelectNavgan")) Is Nothing) Then
                MyBase.Tables.Add(New vSelectNavganDataTable(ds.Tables("vSelectNavgan")))
            End If
            If (Not (ds.Tables("tbl_Tamirat")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TamiratDataTable(ds.Tables("tbl_Tamirat")))
            End If
            If (Not (ds.Tables("tbl_TamiratJoziyat")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TamiratJoziyatDataTable(ds.Tables("tbl_TamiratJoziyat")))
            End If
            If (Not (ds.Tables("SelectYears")) Is Nothing) Then
                MyBase.Tables.Add(New SelectYearsDataTable(ds.Tables("SelectYears")))
            End If
            If (Not (ds.Tables("usp_GetFactorPriceByMonths")) Is Nothing) Then
                MyBase.Tables.Add(New usp_GetFactorPriceByMonthsDataTable(ds.Tables("usp_GetFactorPriceByMonths")))
            End If
            If (Not (ds.Tables("tbl_Setting")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_SettingDataTable(ds.Tables("tbl_Setting")))
            End If
            If (Not (ds.Tables("tbl_Mashin")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MashinDataTable(ds.Tables("tbl_Mashin")))
            End If
            If (Not (ds.Tables("tbl_Kafi")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_KafiDataTable(ds.Tables("tbl_Kafi")))
            End If
            If (Not (ds.Tables("tbl_Ranandegan")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_RanandeganDataTable(ds.Tables("tbl_Ranandegan")))
            End If
            If (Not (ds.Tables("vSelectRanandeganMashin")) Is Nothing) Then
                MyBase.Tables.Add(New vSelectRanandeganMashinDataTable(ds.Tables("vSelectRanandeganMashin")))
            End If
            If (Not (ds.Tables("tbl_NavganStatus")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_NavganStatusDataTable(ds.Tables("tbl_NavganStatus")))
            End If
            If (Not (ds.Tables("usp_KarkardeRoozane4Print")) Is Nothing) Then
                MyBase.Tables.Add(New usp_KarkardeRoozane4PrintDataTable(ds.Tables("usp_KarkardeRoozane4Print")))
            End If
            If (Not (ds.Tables("usp_KarkardeRoozane4Show")) Is Nothing) Then
                MyBase.Tables.Add(New usp_KarkardeRoozane4ShowDataTable(ds.Tables("usp_KarkardeRoozane4Show")))
            End If
            If (Not (ds.Tables("tbl_Sanad")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_SanadDataTable(ds.Tables("tbl_Sanad")))
            End If
            If (Not (ds.Tables("tbl_Tankhah")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TankhahDataTable(ds.Tables("tbl_Tankhah")))
            End If
            If (Not (ds.Tables("tbl_TankhahDetail_Factor")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TankhahDetail_FactorDataTable(ds.Tables("tbl_TankhahDetail_Factor")))
            End If
            If (Not (ds.Tables("tbl_TankhahDetail_Sanad")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TankhahDetail_SanadDataTable(ds.Tables("tbl_TankhahDetail_Sanad")))
            End If
            If (Not (ds.Tables("usp_GetTankhahDetailByTankhahID")) Is Nothing) Then
                MyBase.Tables.Add(New usp_GetTankhahDetailByTankhahIDDataTable(ds.Tables("usp_GetTankhahDetailByTankhahID")))
            End If
            If (Not (ds.Tables("vSanadList")) Is Nothing) Then
                MyBase.Tables.Add(New vSanadListDataTable(ds.Tables("vSanadList")))
            End If
            If (Not (ds.Tables("vFactorList")) Is Nothing) Then
                MyBase.Tables.Add(New vFactorListDataTable(ds.Tables("vFactorList")))
            End If
            If (Not (ds.Tables("vFactorSanad")) Is Nothing) Then
                MyBase.Tables.Add(New vFactorSanadDataTable(ds.Tables("vFactorSanad")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_MahalBargiri() As tbl_MahalBargiriDataTable
        Get
            Return Me.tabletbl_MahalBargiri
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Mabda() As tbl_MabdaDataTable
        Get
            Return Me.tabletbl_Mabda
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Maghsad() As tbl_MaghsadDataTable
        Get
            Return Me.tabletbl_Maghsad
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_MashinRanande() As tbl_MashinRanandeDataTable
        Get
            Return Me.tabletbl_MashinRanande
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_EzamNavgan() As tbl_EzamNavganDataTable
        Get
            Return Me.tabletbl_EzamNavgan
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vSelectNavgan() As vSelectNavganDataTable
        Get
            Return Me.tablevSelectNavgan
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Tamirat() As tbl_TamiratDataTable
        Get
            Return Me.tabletbl_Tamirat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_TamiratJoziyat() As tbl_TamiratJoziyatDataTable
        Get
            Return Me.tabletbl_TamiratJoziyat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SelectYears() As SelectYearsDataTable
        Get
            Return Me.tableSelectYears
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property usp_GetFactorPriceByMonths() As usp_GetFactorPriceByMonthsDataTable
        Get
            Return Me.tableusp_GetFactorPriceByMonths
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Setting() As tbl_SettingDataTable
        Get
            Return Me.tabletbl_Setting
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Mashin() As tbl_MashinDataTable
        Get
            Return Me.tabletbl_Mashin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Kafi() As tbl_KafiDataTable
        Get
            Return Me.tabletbl_Kafi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Ranandegan() As tbl_RanandeganDataTable
        Get
            Return Me.tabletbl_Ranandegan
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vSelectRanandeganMashin() As vSelectRanandeganMashinDataTable
        Get
            Return Me.tablevSelectRanandeganMashin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_NavganStatus() As tbl_NavganStatusDataTable
        Get
            Return Me.tabletbl_NavganStatus
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property usp_KarkardeRoozane4Print() As usp_KarkardeRoozane4PrintDataTable
        Get
            Return Me.tableusp_KarkardeRoozane4Print
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property usp_KarkardeRoozane4Show() As usp_KarkardeRoozane4ShowDataTable
        Get
            Return Me.tableusp_KarkardeRoozane4Show
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Sanad() As tbl_SanadDataTable
        Get
            Return Me.tabletbl_Sanad
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Tankhah() As tbl_TankhahDataTable
        Get
            Return Me.tabletbl_Tankhah
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_TankhahDetail_Factor() As tbl_TankhahDetail_FactorDataTable
        Get
            Return Me.tabletbl_TankhahDetail_Factor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_TankhahDetail_Sanad() As tbl_TankhahDetail_SanadDataTable
        Get
            Return Me.tabletbl_TankhahDetail_Sanad
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property usp_GetTankhahDetailByTankhahID() As usp_GetTankhahDetailByTankhahIDDataTable
        Get
            Return Me.tableusp_GetTankhahDetailByTankhahID
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vSanadList() As vSanadListDataTable
        Get
            Return Me.tablevSanadList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vFactorList() As vFactorListDataTable
        Get
            Return Me.tablevFactorList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vFactorSanad() As vFactorSanadDataTable
        Get
            Return Me.tablevFactorSanad
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTarabari = CType(MyBase.Clone,dsTarabari)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("tbl_MahalBargiri")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MahalBargiriDataTable(ds.Tables("tbl_MahalBargiri")))
            End If
            If (Not (ds.Tables("tbl_Mabda")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MabdaDataTable(ds.Tables("tbl_Mabda")))
            End If
            If (Not (ds.Tables("tbl_Maghsad")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MaghsadDataTable(ds.Tables("tbl_Maghsad")))
            End If
            If (Not (ds.Tables("tbl_MashinRanande")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MashinRanandeDataTable(ds.Tables("tbl_MashinRanande")))
            End If
            If (Not (ds.Tables("tbl_EzamNavgan")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_EzamNavganDataTable(ds.Tables("tbl_EzamNavgan")))
            End If
            If (Not (ds.Tables("vSelectNavgan")) Is Nothing) Then
                MyBase.Tables.Add(New vSelectNavganDataTable(ds.Tables("vSelectNavgan")))
            End If
            If (Not (ds.Tables("tbl_Tamirat")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TamiratDataTable(ds.Tables("tbl_Tamirat")))
            End If
            If (Not (ds.Tables("tbl_TamiratJoziyat")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TamiratJoziyatDataTable(ds.Tables("tbl_TamiratJoziyat")))
            End If
            If (Not (ds.Tables("SelectYears")) Is Nothing) Then
                MyBase.Tables.Add(New SelectYearsDataTable(ds.Tables("SelectYears")))
            End If
            If (Not (ds.Tables("usp_GetFactorPriceByMonths")) Is Nothing) Then
                MyBase.Tables.Add(New usp_GetFactorPriceByMonthsDataTable(ds.Tables("usp_GetFactorPriceByMonths")))
            End If
            If (Not (ds.Tables("tbl_Setting")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_SettingDataTable(ds.Tables("tbl_Setting")))
            End If
            If (Not (ds.Tables("tbl_Mashin")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MashinDataTable(ds.Tables("tbl_Mashin")))
            End If
            If (Not (ds.Tables("tbl_Kafi")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_KafiDataTable(ds.Tables("tbl_Kafi")))
            End If
            If (Not (ds.Tables("tbl_Ranandegan")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_RanandeganDataTable(ds.Tables("tbl_Ranandegan")))
            End If
            If (Not (ds.Tables("vSelectRanandeganMashin")) Is Nothing) Then
                MyBase.Tables.Add(New vSelectRanandeganMashinDataTable(ds.Tables("vSelectRanandeganMashin")))
            End If
            If (Not (ds.Tables("tbl_NavganStatus")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_NavganStatusDataTable(ds.Tables("tbl_NavganStatus")))
            End If
            If (Not (ds.Tables("usp_KarkardeRoozane4Print")) Is Nothing) Then
                MyBase.Tables.Add(New usp_KarkardeRoozane4PrintDataTable(ds.Tables("usp_KarkardeRoozane4Print")))
            End If
            If (Not (ds.Tables("usp_KarkardeRoozane4Show")) Is Nothing) Then
                MyBase.Tables.Add(New usp_KarkardeRoozane4ShowDataTable(ds.Tables("usp_KarkardeRoozane4Show")))
            End If
            If (Not (ds.Tables("tbl_Sanad")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_SanadDataTable(ds.Tables("tbl_Sanad")))
            End If
            If (Not (ds.Tables("tbl_Tankhah")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TankhahDataTable(ds.Tables("tbl_Tankhah")))
            End If
            If (Not (ds.Tables("tbl_TankhahDetail_Factor")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TankhahDetail_FactorDataTable(ds.Tables("tbl_TankhahDetail_Factor")))
            End If
            If (Not (ds.Tables("tbl_TankhahDetail_Sanad")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_TankhahDetail_SanadDataTable(ds.Tables("tbl_TankhahDetail_Sanad")))
            End If
            If (Not (ds.Tables("usp_GetTankhahDetailByTankhahID")) Is Nothing) Then
                MyBase.Tables.Add(New usp_GetTankhahDetailByTankhahIDDataTable(ds.Tables("usp_GetTankhahDetailByTankhahID")))
            End If
            If (Not (ds.Tables("vSanadList")) Is Nothing) Then
                MyBase.Tables.Add(New vSanadListDataTable(ds.Tables("vSanadList")))
            End If
            If (Not (ds.Tables("vFactorList")) Is Nothing) Then
                MyBase.Tables.Add(New vFactorListDataTable(ds.Tables("vFactorList")))
            End If
            If (Not (ds.Tables("vFactorSanad")) Is Nothing) Then
                MyBase.Tables.Add(New vFactorSanadDataTable(ds.Tables("vFactorSanad")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletbl_MahalBargiri = CType(MyBase.Tables("tbl_MahalBargiri"),tbl_MahalBargiriDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_MahalBargiri) Is Nothing) Then
                Me.tabletbl_MahalBargiri.InitVars
            End If
        End If
        Me.tabletbl_Mabda = CType(MyBase.Tables("tbl_Mabda"),tbl_MabdaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Mabda) Is Nothing) Then
                Me.tabletbl_Mabda.InitVars
            End If
        End If
        Me.tabletbl_Maghsad = CType(MyBase.Tables("tbl_Maghsad"),tbl_MaghsadDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Maghsad) Is Nothing) Then
                Me.tabletbl_Maghsad.InitVars
            End If
        End If
        Me.tabletbl_MashinRanande = CType(MyBase.Tables("tbl_MashinRanande"),tbl_MashinRanandeDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_MashinRanande) Is Nothing) Then
                Me.tabletbl_MashinRanande.InitVars
            End If
        End If
        Me.tabletbl_EzamNavgan = CType(MyBase.Tables("tbl_EzamNavgan"),tbl_EzamNavganDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_EzamNavgan) Is Nothing) Then
                Me.tabletbl_EzamNavgan.InitVars
            End If
        End If
        Me.tablevSelectNavgan = CType(MyBase.Tables("vSelectNavgan"),vSelectNavganDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevSelectNavgan) Is Nothing) Then
                Me.tablevSelectNavgan.InitVars
            End If
        End If
        Me.tabletbl_Tamirat = CType(MyBase.Tables("tbl_Tamirat"),tbl_TamiratDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Tamirat) Is Nothing) Then
                Me.tabletbl_Tamirat.InitVars
            End If
        End If
        Me.tabletbl_TamiratJoziyat = CType(MyBase.Tables("tbl_TamiratJoziyat"),tbl_TamiratJoziyatDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_TamiratJoziyat) Is Nothing) Then
                Me.tabletbl_TamiratJoziyat.InitVars
            End If
        End If
        Me.tableSelectYears = CType(MyBase.Tables("SelectYears"),SelectYearsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelectYears) Is Nothing) Then
                Me.tableSelectYears.InitVars
            End If
        End If
        Me.tableusp_GetFactorPriceByMonths = CType(MyBase.Tables("usp_GetFactorPriceByMonths"),usp_GetFactorPriceByMonthsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableusp_GetFactorPriceByMonths) Is Nothing) Then
                Me.tableusp_GetFactorPriceByMonths.InitVars
            End If
        End If
        Me.tabletbl_Setting = CType(MyBase.Tables("tbl_Setting"),tbl_SettingDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Setting) Is Nothing) Then
                Me.tabletbl_Setting.InitVars
            End If
        End If
        Me.tabletbl_Mashin = CType(MyBase.Tables("tbl_Mashin"),tbl_MashinDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Mashin) Is Nothing) Then
                Me.tabletbl_Mashin.InitVars
            End If
        End If
        Me.tabletbl_Kafi = CType(MyBase.Tables("tbl_Kafi"),tbl_KafiDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Kafi) Is Nothing) Then
                Me.tabletbl_Kafi.InitVars
            End If
        End If
        Me.tabletbl_Ranandegan = CType(MyBase.Tables("tbl_Ranandegan"),tbl_RanandeganDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Ranandegan) Is Nothing) Then
                Me.tabletbl_Ranandegan.InitVars
            End If
        End If
        Me.tablevSelectRanandeganMashin = CType(MyBase.Tables("vSelectRanandeganMashin"),vSelectRanandeganMashinDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevSelectRanandeganMashin) Is Nothing) Then
                Me.tablevSelectRanandeganMashin.InitVars
            End If
        End If
        Me.tabletbl_NavganStatus = CType(MyBase.Tables("tbl_NavganStatus"),tbl_NavganStatusDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_NavganStatus) Is Nothing) Then
                Me.tabletbl_NavganStatus.InitVars
            End If
        End If
        Me.tableusp_KarkardeRoozane4Print = CType(MyBase.Tables("usp_KarkardeRoozane4Print"),usp_KarkardeRoozane4PrintDataTable)
        If (initTable = true) Then
            If (Not (Me.tableusp_KarkardeRoozane4Print) Is Nothing) Then
                Me.tableusp_KarkardeRoozane4Print.InitVars
            End If
        End If
        Me.tableusp_KarkardeRoozane4Show = CType(MyBase.Tables("usp_KarkardeRoozane4Show"),usp_KarkardeRoozane4ShowDataTable)
        If (initTable = true) Then
            If (Not (Me.tableusp_KarkardeRoozane4Show) Is Nothing) Then
                Me.tableusp_KarkardeRoozane4Show.InitVars
            End If
        End If
        Me.tabletbl_Sanad = CType(MyBase.Tables("tbl_Sanad"),tbl_SanadDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Sanad) Is Nothing) Then
                Me.tabletbl_Sanad.InitVars
            End If
        End If
        Me.tabletbl_Tankhah = CType(MyBase.Tables("tbl_Tankhah"),tbl_TankhahDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Tankhah) Is Nothing) Then
                Me.tabletbl_Tankhah.InitVars
            End If
        End If
        Me.tabletbl_TankhahDetail_Factor = CType(MyBase.Tables("tbl_TankhahDetail_Factor"),tbl_TankhahDetail_FactorDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_TankhahDetail_Factor) Is Nothing) Then
                Me.tabletbl_TankhahDetail_Factor.InitVars
            End If
        End If
        Me.tabletbl_TankhahDetail_Sanad = CType(MyBase.Tables("tbl_TankhahDetail_Sanad"),tbl_TankhahDetail_SanadDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_TankhahDetail_Sanad) Is Nothing) Then
                Me.tabletbl_TankhahDetail_Sanad.InitVars
            End If
        End If
        Me.tableusp_GetTankhahDetailByTankhahID = CType(MyBase.Tables("usp_GetTankhahDetailByTankhahID"),usp_GetTankhahDetailByTankhahIDDataTable)
        If (initTable = true) Then
            If (Not (Me.tableusp_GetTankhahDetailByTankhahID) Is Nothing) Then
                Me.tableusp_GetTankhahDetailByTankhahID.InitVars
            End If
        End If
        Me.tablevSanadList = CType(MyBase.Tables("vSanadList"),vSanadListDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevSanadList) Is Nothing) Then
                Me.tablevSanadList.InitVars
            End If
        End If
        Me.tablevFactorList = CType(MyBase.Tables("vFactorList"),vFactorListDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevFactorList) Is Nothing) Then
                Me.tablevFactorList.InitVars
            End If
        End If
        Me.tablevFactorSanad = CType(MyBase.Tables("vFactorSanad"),vFactorSanadDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevFactorSanad) Is Nothing) Then
                Me.tablevFactorSanad.InitVars
            End If
        End If
        Me.relationFK_tbl_EzamNavgan_tbl_Mabda = Me.Relations("FK_tbl_EzamNavgan_tbl_Mabda")
        Me.relationFK_tbl_EzamNavgan_tbl_Maghsad = Me.Relations("FK_tbl_EzamNavgan_tbl_Maghsad")
        Me.relationFK_tbl_EzamNavgan_tbl_MahalBargiri = Me.Relations("FK_tbl_EzamNavgan_tbl_MahalBargiri")
        Me.relationFK_tbl_TamirgahJoziyat_tbl_Tamirat = Me.Relations("FK_tbl_TamirgahJoziyat_tbl_Tamirat")
        Me.relationFK_tbl_MashinRanande_tbl_Mashin1 = Me.Relations("FK_tbl_MashinRanande_tbl_Mashin1")
        Me.relationFK_tbl_EzamNavgan_tbl_Mashin1 = Me.Relations("FK_tbl_EzamNavgan_tbl_Mashin1")
        Me.relationFK_tbl_Tamirat_tbl_Mashin1 = Me.Relations("FK_tbl_Tamirat_tbl_Mashin1")
        Me.relationFK_tbl_Mashin_tbl_Kafi = Me.Relations("FK_tbl_Mashin_tbl_Kafi")
        Me.relationFK_tbl_MashinRanande_tbl_Ranandegan1 = Me.Relations("FK_tbl_MashinRanande_tbl_Ranandegan1")
        Me.relationFK_tbl_EzamNavgan_tbl_Ranandegan1 = Me.Relations("FK_tbl_EzamNavgan_tbl_Ranandegan1")
        Me.relationFK_tbl_Tamirat_tbl_Ranandegan1 = Me.Relations("FK_tbl_Tamirat_tbl_Ranandegan1")
        Me.relationFK_tbl_NavganStatus_tbl_Ranandegan = Me.Relations("FK_tbl_NavganStatus_tbl_Ranandegan")
        Me.relationFK_tbl_Sanad_tbl_EzamNavgan = Me.Relations("FK_tbl_Sanad_tbl_EzamNavgan")
        Me.relationFK_tbl_Sanad_tbl_Mabda = Me.Relations("FK_tbl_Sanad_tbl_Mabda")
        Me.relationFK_tbl_Sanad_tbl_Maghsad = Me.Relations("FK_tbl_Sanad_tbl_Maghsad")
        Me.relationFK_tbl_TankhahDetail_tbl_Tamirat = Me.Relations("FK_tbl_TankhahDetail_tbl_Tamirat")
        Me.relationFK_tbl_TankhahDetail_tbl_Tankhah = Me.Relations("FK_tbl_TankhahDetail_tbl_Tankhah")
        Me.relationFK_tbl_TankhahDetail_Sanad_tbl_Tankhah = Me.Relations("FK_tbl_TankhahDetail_Sanad_tbl_Tankhah")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTarabari"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTarabari.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletbl_MahalBargiri = New tbl_MahalBargiriDataTable
        MyBase.Tables.Add(Me.tabletbl_MahalBargiri)
        Me.tabletbl_Mabda = New tbl_MabdaDataTable
        MyBase.Tables.Add(Me.tabletbl_Mabda)
        Me.tabletbl_Maghsad = New tbl_MaghsadDataTable
        MyBase.Tables.Add(Me.tabletbl_Maghsad)
        Me.tabletbl_MashinRanande = New tbl_MashinRanandeDataTable
        MyBase.Tables.Add(Me.tabletbl_MashinRanande)
        Me.tabletbl_EzamNavgan = New tbl_EzamNavganDataTable
        MyBase.Tables.Add(Me.tabletbl_EzamNavgan)
        Me.tablevSelectNavgan = New vSelectNavganDataTable
        MyBase.Tables.Add(Me.tablevSelectNavgan)
        Me.tabletbl_Tamirat = New tbl_TamiratDataTable
        MyBase.Tables.Add(Me.tabletbl_Tamirat)
        Me.tabletbl_TamiratJoziyat = New tbl_TamiratJoziyatDataTable
        MyBase.Tables.Add(Me.tabletbl_TamiratJoziyat)
        Me.tableSelectYears = New SelectYearsDataTable
        MyBase.Tables.Add(Me.tableSelectYears)
        Me.tableusp_GetFactorPriceByMonths = New usp_GetFactorPriceByMonthsDataTable
        MyBase.Tables.Add(Me.tableusp_GetFactorPriceByMonths)
        Me.tabletbl_Setting = New tbl_SettingDataTable
        MyBase.Tables.Add(Me.tabletbl_Setting)
        Me.tabletbl_Mashin = New tbl_MashinDataTable
        MyBase.Tables.Add(Me.tabletbl_Mashin)
        Me.tabletbl_Kafi = New tbl_KafiDataTable
        MyBase.Tables.Add(Me.tabletbl_Kafi)
        Me.tabletbl_Ranandegan = New tbl_RanandeganDataTable
        MyBase.Tables.Add(Me.tabletbl_Ranandegan)
        Me.tablevSelectRanandeganMashin = New vSelectRanandeganMashinDataTable
        MyBase.Tables.Add(Me.tablevSelectRanandeganMashin)
        Me.tabletbl_NavganStatus = New tbl_NavganStatusDataTable
        MyBase.Tables.Add(Me.tabletbl_NavganStatus)
        Me.tableusp_KarkardeRoozane4Print = New usp_KarkardeRoozane4PrintDataTable
        MyBase.Tables.Add(Me.tableusp_KarkardeRoozane4Print)
        Me.tableusp_KarkardeRoozane4Show = New usp_KarkardeRoozane4ShowDataTable
        MyBase.Tables.Add(Me.tableusp_KarkardeRoozane4Show)
        Me.tabletbl_Sanad = New tbl_SanadDataTable
        MyBase.Tables.Add(Me.tabletbl_Sanad)
        Me.tabletbl_Tankhah = New tbl_TankhahDataTable
        MyBase.Tables.Add(Me.tabletbl_Tankhah)
        Me.tabletbl_TankhahDetail_Factor = New tbl_TankhahDetail_FactorDataTable
        MyBase.Tables.Add(Me.tabletbl_TankhahDetail_Factor)
        Me.tabletbl_TankhahDetail_Sanad = New tbl_TankhahDetail_SanadDataTable
        MyBase.Tables.Add(Me.tabletbl_TankhahDetail_Sanad)
        Me.tableusp_GetTankhahDetailByTankhahID = New usp_GetTankhahDetailByTankhahIDDataTable
        MyBase.Tables.Add(Me.tableusp_GetTankhahDetailByTankhahID)
        Me.tablevSanadList = New vSanadListDataTable
        MyBase.Tables.Add(Me.tablevSanadList)
        Me.tablevFactorList = New vFactorListDataTable
        MyBase.Tables.Add(Me.tablevFactorList)
        Me.tablevFactorSanad = New vFactorSanadDataTable
        MyBase.Tables.Add(Me.tablevFactorSanad)
        Me.relationFK_tbl_EzamNavgan_tbl_Mabda = New Global.System.Data.DataRelation("FK_tbl_EzamNavgan_tbl_Mabda", New Global.System.Data.DataColumn() {Me.tabletbl_Mabda.MabdaIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_EzamNavgan.MabdaIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_EzamNavgan_tbl_Mabda)
        Me.relationFK_tbl_EzamNavgan_tbl_Maghsad = New Global.System.Data.DataRelation("FK_tbl_EzamNavgan_tbl_Maghsad", New Global.System.Data.DataColumn() {Me.tabletbl_Maghsad.MaghsadIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_EzamNavgan.MaghsadIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_EzamNavgan_tbl_Maghsad)
        Me.relationFK_tbl_EzamNavgan_tbl_MahalBargiri = New Global.System.Data.DataRelation("FK_tbl_EzamNavgan_tbl_MahalBargiri", New Global.System.Data.DataColumn() {Me.tabletbl_MahalBargiri.MahalBargiriIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_EzamNavgan.MahalBargiriIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_EzamNavgan_tbl_MahalBargiri)
        Me.relationFK_tbl_TamirgahJoziyat_tbl_Tamirat = New Global.System.Data.DataRelation("FK_tbl_TamirgahJoziyat_tbl_Tamirat", New Global.System.Data.DataColumn() {Me.tabletbl_Tamirat.FactorIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_TamiratJoziyat.FactorIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_TamirgahJoziyat_tbl_Tamirat)
        Me.relationFK_tbl_MashinRanande_tbl_Mashin1 = New Global.System.Data.DataRelation("FK_tbl_MashinRanande_tbl_Mashin1", New Global.System.Data.DataColumn() {Me.tabletbl_Mashin.MashinIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_MashinRanande.MashinIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_MashinRanande_tbl_Mashin1)
        Me.relationFK_tbl_EzamNavgan_tbl_Mashin1 = New Global.System.Data.DataRelation("FK_tbl_EzamNavgan_tbl_Mashin1", New Global.System.Data.DataColumn() {Me.tabletbl_Mashin.MashinIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_EzamNavgan.MashinIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_EzamNavgan_tbl_Mashin1)
        Me.relationFK_tbl_Tamirat_tbl_Mashin1 = New Global.System.Data.DataRelation("FK_tbl_Tamirat_tbl_Mashin1", New Global.System.Data.DataColumn() {Me.tabletbl_Mashin.MashinIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Tamirat.MashinIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_Tamirat_tbl_Mashin1)
        Me.relationFK_tbl_Mashin_tbl_Kafi = New Global.System.Data.DataRelation("FK_tbl_Mashin_tbl_Kafi", New Global.System.Data.DataColumn() {Me.tabletbl_Kafi.KafiIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Mashin.KafiIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_Mashin_tbl_Kafi)
        Me.relationFK_tbl_MashinRanande_tbl_Ranandegan1 = New Global.System.Data.DataRelation("FK_tbl_MashinRanande_tbl_Ranandegan1", New Global.System.Data.DataColumn() {Me.tabletbl_Ranandegan.RanandePersonalCodeColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_MashinRanande.RanandePersonalCodeColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_MashinRanande_tbl_Ranandegan1)
        Me.relationFK_tbl_EzamNavgan_tbl_Ranandegan1 = New Global.System.Data.DataRelation("FK_tbl_EzamNavgan_tbl_Ranandegan1", New Global.System.Data.DataColumn() {Me.tabletbl_Ranandegan.RanandePersonalCodeColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_EzamNavgan.RanandePersonalCodeColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_EzamNavgan_tbl_Ranandegan1)
        Me.relationFK_tbl_Tamirat_tbl_Ranandegan1 = New Global.System.Data.DataRelation("FK_tbl_Tamirat_tbl_Ranandegan1", New Global.System.Data.DataColumn() {Me.tabletbl_Ranandegan.RanandePersonalCodeColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Tamirat.RanandePersonalCodeColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_Tamirat_tbl_Ranandegan1)
        Me.relationFK_tbl_NavganStatus_tbl_Ranandegan = New Global.System.Data.DataRelation("FK_tbl_NavganStatus_tbl_Ranandegan", New Global.System.Data.DataColumn() {Me.tabletbl_Ranandegan.RanandePersonalCodeColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_NavganStatus.RanandePersonalCodeColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_NavganStatus_tbl_Ranandegan)
        Me.relationFK_tbl_Sanad_tbl_EzamNavgan = New Global.System.Data.DataRelation("FK_tbl_Sanad_tbl_EzamNavgan", New Global.System.Data.DataColumn() {Me.tabletbl_EzamNavgan.OperationCodeColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Sanad.OperationCodeColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_Sanad_tbl_EzamNavgan)
        Me.relationFK_tbl_Sanad_tbl_Mabda = New Global.System.Data.DataRelation("FK_tbl_Sanad_tbl_Mabda", New Global.System.Data.DataColumn() {Me.tabletbl_Mabda.MabdaIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Sanad.MabdaIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_Sanad_tbl_Mabda)
        Me.relationFK_tbl_Sanad_tbl_Maghsad = New Global.System.Data.DataRelation("FK_tbl_Sanad_tbl_Maghsad", New Global.System.Data.DataColumn() {Me.tabletbl_Maghsad.MaghsadIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Sanad.MaghsadIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_Sanad_tbl_Maghsad)
        Me.relationFK_tbl_TankhahDetail_tbl_Tamirat = New Global.System.Data.DataRelation("FK_tbl_TankhahDetail_tbl_Tamirat", New Global.System.Data.DataColumn() {Me.tabletbl_Tamirat.FactorIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_TankhahDetail_Factor.FactorIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_TankhahDetail_tbl_Tamirat)
        Me.relationFK_tbl_TankhahDetail_tbl_Tankhah = New Global.System.Data.DataRelation("FK_tbl_TankhahDetail_tbl_Tankhah", New Global.System.Data.DataColumn() {Me.tabletbl_Tankhah.TankhahIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_TankhahDetail_Factor.TankhahIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_TankhahDetail_tbl_Tankhah)
        Me.relationFK_tbl_TankhahDetail_Sanad_tbl_Tankhah = New Global.System.Data.DataRelation("FK_tbl_TankhahDetail_Sanad_tbl_Tankhah", New Global.System.Data.DataColumn() {Me.tabletbl_Tankhah.TankhahIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_TankhahDetail_Sanad.TankhahIDColumn}, false)
        Me.Relations.Add(Me.relationFK_tbl_TankhahDetail_Sanad_tbl_Tankhah)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_MahalBargiri() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Mabda() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Maghsad() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_MashinRanande() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_EzamNavgan() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevSelectNavgan() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Tamirat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_TamiratJoziyat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelectYears() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeusp_GetFactorPriceByMonths() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Setting() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Mashin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Kafi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Ranandegan() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevSelectRanandeganMashin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_NavganStatus() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeusp_KarkardeRoozane4Print() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeusp_KarkardeRoozane4Show() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Sanad() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Tankhah() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_TankhahDetail_Factor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_TankhahDetail_Sanad() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeusp_GetTankhahDetailByTankhahID() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevSanadList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevFactorList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevFactorSanad() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTarabari = New dsTarabari
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub tbl_MahalBargiriRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MahalBargiriRowChangeEvent)
    
    Public Delegate Sub tbl_MabdaRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MabdaRowChangeEvent)
    
    Public Delegate Sub tbl_MaghsadRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MaghsadRowChangeEvent)
    
    Public Delegate Sub tbl_MashinRanandeRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MashinRanandeRowChangeEvent)
    
    Public Delegate Sub tbl_EzamNavganRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_EzamNavganRowChangeEvent)
    
    Public Delegate Sub vSelectNavganRowChangeEventHandler(ByVal sender As Object, ByVal e As vSelectNavganRowChangeEvent)
    
    Public Delegate Sub tbl_TamiratRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_TamiratRowChangeEvent)
    
    Public Delegate Sub tbl_TamiratJoziyatRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_TamiratJoziyatRowChangeEvent)
    
    Public Delegate Sub SelectYearsRowChangeEventHandler(ByVal sender As Object, ByVal e As SelectYearsRowChangeEvent)
    
    Public Delegate Sub usp_GetFactorPriceByMonthsRowChangeEventHandler(ByVal sender As Object, ByVal e As usp_GetFactorPriceByMonthsRowChangeEvent)
    
    Public Delegate Sub tbl_SettingRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_SettingRowChangeEvent)
    
    Public Delegate Sub tbl_MashinRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MashinRowChangeEvent)
    
    Public Delegate Sub tbl_KafiRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_KafiRowChangeEvent)
    
    Public Delegate Sub tbl_RanandeganRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_RanandeganRowChangeEvent)
    
    Public Delegate Sub vSelectRanandeganMashinRowChangeEventHandler(ByVal sender As Object, ByVal e As vSelectRanandeganMashinRowChangeEvent)
    
    Public Delegate Sub tbl_NavganStatusRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_NavganStatusRowChangeEvent)
    
    Public Delegate Sub usp_KarkardeRoozane4PrintRowChangeEventHandler(ByVal sender As Object, ByVal e As usp_KarkardeRoozane4PrintRowChangeEvent)
    
    Public Delegate Sub usp_KarkardeRoozane4ShowRowChangeEventHandler(ByVal sender As Object, ByVal e As usp_KarkardeRoozane4ShowRowChangeEvent)
    
    Public Delegate Sub tbl_SanadRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_SanadRowChangeEvent)
    
    Public Delegate Sub tbl_TankhahRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_TankhahRowChangeEvent)
    
    Public Delegate Sub tbl_TankhahDetail_FactorRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_TankhahDetail_FactorRowChangeEvent)
    
    Public Delegate Sub tbl_TankhahDetail_SanadRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_TankhahDetail_SanadRowChangeEvent)
    
    Public Delegate Sub usp_GetTankhahDetailByTankhahIDRowChangeEventHandler(ByVal sender As Object, ByVal e As usp_GetTankhahDetailByTankhahIDRowChangeEvent)
    
    Public Delegate Sub vSanadListRowChangeEventHandler(ByVal sender As Object, ByVal e As vSanadListRowChangeEvent)
    
    Public Delegate Sub vFactorListRowChangeEventHandler(ByVal sender As Object, ByVal e As vFactorListRowChangeEvent)
    
    Public Delegate Sub vFactorSanadRowChangeEventHandler(ByVal sender As Object, ByVal e As vFactorSanadRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MahalBargiriDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MahalBargiriRow)
        
        Private columnMahalBargiriID As Global.System.Data.DataColumn
        
        Private columnNameMahal As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_MahalBargiri"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MahalBargiriIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMahalBargiriID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMahalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMahal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MahalBargiriRow
            Get
                Return CType(Me.Rows(index),tbl_MahalBargiriRow)
            End Get
        End Property
        
        Public Event tbl_MahalBargiriRowChanging As tbl_MahalBargiriRowChangeEventHandler
        
        Public Event tbl_MahalBargiriRowChanged As tbl_MahalBargiriRowChangeEventHandler
        
        Public Event tbl_MahalBargiriRowDeleting As tbl_MahalBargiriRowChangeEventHandler
        
        Public Event tbl_MahalBargiriRowDeleted As tbl_MahalBargiriRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_MahalBargiriRow(ByVal row As tbl_MahalBargiriRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_MahalBargiriRow(ByVal NameMahal As String) As tbl_MahalBargiriRow
            Dim rowtbl_MahalBargiriRow As tbl_MahalBargiriRow = CType(Me.NewRow,tbl_MahalBargiriRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NameMahal}
            rowtbl_MahalBargiriRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MahalBargiriRow)
            Return rowtbl_MahalBargiriRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByMahalBargiriID(ByVal MahalBargiriID As Integer) As tbl_MahalBargiriRow
            Return CType(Me.Rows.Find(New Object() {MahalBargiriID}),tbl_MahalBargiriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MahalBargiriDataTable = CType(MyBase.Clone,tbl_MahalBargiriDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MahalBargiriDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMahalBargiriID = MyBase.Columns("MahalBargiriID")
            Me.columnNameMahal = MyBase.Columns("NameMahal")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMahalBargiriID = New Global.System.Data.DataColumn("MahalBargiriID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMahalBargiriID)
            Me.columnNameMahal = New Global.System.Data.DataColumn("NameMahal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMahal)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMahalBargiriID}, true))
            Me.columnMahalBargiriID.AutoIncrement = true
            Me.columnMahalBargiriID.AutoIncrementSeed = -1
            Me.columnMahalBargiriID.AutoIncrementStep = -1
            Me.columnMahalBargiriID.AllowDBNull = false
            Me.columnMahalBargiriID.ReadOnly = true
            Me.columnMahalBargiriID.Unique = true
            Me.columnNameMahal.AllowDBNull = false
            Me.columnNameMahal.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_MahalBargiriRow() As tbl_MahalBargiriRow
            Return CType(Me.NewRow,tbl_MahalBargiriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MahalBargiriRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MahalBargiriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MahalBargiriRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MahalBargiriRowChanged(Me, New tbl_MahalBargiriRowChangeEvent(CType(e.Row,tbl_MahalBargiriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MahalBargiriRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MahalBargiriRowChanging(Me, New tbl_MahalBargiriRowChangeEvent(CType(e.Row,tbl_MahalBargiriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MahalBargiriRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MahalBargiriRowDeleted(Me, New tbl_MahalBargiriRowChangeEvent(CType(e.Row,tbl_MahalBargiriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MahalBargiriRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MahalBargiriRowDeleting(Me, New tbl_MahalBargiriRowChangeEvent(CType(e.Row,tbl_MahalBargiriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_MahalBargiriRow(ByVal row As tbl_MahalBargiriRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MahalBargiriDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MabdaDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MabdaRow)
        
        Private columnMabdaID As Global.System.Data.DataColumn
        
        Private columnNameMabda As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Mabda"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MabdaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMabdaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMabdaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMabda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MabdaRow
            Get
                Return CType(Me.Rows(index),tbl_MabdaRow)
            End Get
        End Property
        
        Public Event tbl_MabdaRowChanging As tbl_MabdaRowChangeEventHandler
        
        Public Event tbl_MabdaRowChanged As tbl_MabdaRowChangeEventHandler
        
        Public Event tbl_MabdaRowDeleting As tbl_MabdaRowChangeEventHandler
        
        Public Event tbl_MabdaRowDeleted As tbl_MabdaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_MabdaRow(ByVal row As tbl_MabdaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_MabdaRow(ByVal NameMabda As String) As tbl_MabdaRow
            Dim rowtbl_MabdaRow As tbl_MabdaRow = CType(Me.NewRow,tbl_MabdaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NameMabda}
            rowtbl_MabdaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MabdaRow)
            Return rowtbl_MabdaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByMabdaID(ByVal MabdaID As Integer) As tbl_MabdaRow
            Return CType(Me.Rows.Find(New Object() {MabdaID}),tbl_MabdaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MabdaDataTable = CType(MyBase.Clone,tbl_MabdaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MabdaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMabdaID = MyBase.Columns("MabdaID")
            Me.columnNameMabda = MyBase.Columns("NameMabda")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMabdaID = New Global.System.Data.DataColumn("MabdaID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMabdaID)
            Me.columnNameMabda = New Global.System.Data.DataColumn("NameMabda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMabda)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMabdaID}, true))
            Me.columnMabdaID.AutoIncrement = true
            Me.columnMabdaID.AutoIncrementSeed = -1
            Me.columnMabdaID.AutoIncrementStep = -1
            Me.columnMabdaID.AllowDBNull = false
            Me.columnMabdaID.ReadOnly = true
            Me.columnMabdaID.Unique = true
            Me.columnNameMabda.AllowDBNull = false
            Me.columnNameMabda.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_MabdaRow() As tbl_MabdaRow
            Return CType(Me.NewRow,tbl_MabdaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MabdaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MabdaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MabdaRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MabdaRowChanged(Me, New tbl_MabdaRowChangeEvent(CType(e.Row,tbl_MabdaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MabdaRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MabdaRowChanging(Me, New tbl_MabdaRowChangeEvent(CType(e.Row,tbl_MabdaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MabdaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MabdaRowDeleted(Me, New tbl_MabdaRowChangeEvent(CType(e.Row,tbl_MabdaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MabdaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MabdaRowDeleting(Me, New tbl_MabdaRowChangeEvent(CType(e.Row,tbl_MabdaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_MabdaRow(ByVal row As tbl_MabdaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MabdaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MaghsadDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MaghsadRow)
        
        Private columnMaghsadID As Global.System.Data.DataColumn
        
        Private columnNameMaghsad As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Maghsad"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaghsadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaghsadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMaghsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMaghsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MaghsadRow
            Get
                Return CType(Me.Rows(index),tbl_MaghsadRow)
            End Get
        End Property
        
        Public Event tbl_MaghsadRowChanging As tbl_MaghsadRowChangeEventHandler
        
        Public Event tbl_MaghsadRowChanged As tbl_MaghsadRowChangeEventHandler
        
        Public Event tbl_MaghsadRowDeleting As tbl_MaghsadRowChangeEventHandler
        
        Public Event tbl_MaghsadRowDeleted As tbl_MaghsadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_MaghsadRow(ByVal row As tbl_MaghsadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_MaghsadRow(ByVal NameMaghsad As String) As tbl_MaghsadRow
            Dim rowtbl_MaghsadRow As tbl_MaghsadRow = CType(Me.NewRow,tbl_MaghsadRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NameMaghsad}
            rowtbl_MaghsadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MaghsadRow)
            Return rowtbl_MaghsadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByMaghsadID(ByVal MaghsadID As Integer) As tbl_MaghsadRow
            Return CType(Me.Rows.Find(New Object() {MaghsadID}),tbl_MaghsadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MaghsadDataTable = CType(MyBase.Clone,tbl_MaghsadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MaghsadDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMaghsadID = MyBase.Columns("MaghsadID")
            Me.columnNameMaghsad = MyBase.Columns("NameMaghsad")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMaghsadID = New Global.System.Data.DataColumn("MaghsadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaghsadID)
            Me.columnNameMaghsad = New Global.System.Data.DataColumn("NameMaghsad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMaghsad)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMaghsadID}, true))
            Me.columnMaghsadID.AutoIncrement = true
            Me.columnMaghsadID.AutoIncrementSeed = -1
            Me.columnMaghsadID.AutoIncrementStep = -1
            Me.columnMaghsadID.AllowDBNull = false
            Me.columnMaghsadID.ReadOnly = true
            Me.columnMaghsadID.Unique = true
            Me.columnNameMaghsad.AllowDBNull = false
            Me.columnNameMaghsad.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_MaghsadRow() As tbl_MaghsadRow
            Return CType(Me.NewRow,tbl_MaghsadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MaghsadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MaghsadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MaghsadRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MaghsadRowChanged(Me, New tbl_MaghsadRowChangeEvent(CType(e.Row,tbl_MaghsadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MaghsadRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MaghsadRowChanging(Me, New tbl_MaghsadRowChangeEvent(CType(e.Row,tbl_MaghsadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MaghsadRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MaghsadRowDeleted(Me, New tbl_MaghsadRowChangeEvent(CType(e.Row,tbl_MaghsadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MaghsadRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MaghsadRowDeleting(Me, New tbl_MaghsadRowChangeEvent(CType(e.Row,tbl_MaghsadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_MaghsadRow(ByVal row As tbl_MaghsadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MaghsadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MashinRanandeDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MashinRanandeRow)
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_MashinRanande"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MashinRanandeRow
            Get
                Return CType(Me.Rows(index),tbl_MashinRanandeRow)
            End Get
        End Property
        
        Public Event tbl_MashinRanandeRowChanging As tbl_MashinRanandeRowChangeEventHandler
        
        Public Event tbl_MashinRanandeRowChanged As tbl_MashinRanandeRowChangeEventHandler
        
        Public Event tbl_MashinRanandeRowDeleting As tbl_MashinRanandeRowChangeEventHandler
        
        Public Event tbl_MashinRanandeRowDeleted As tbl_MashinRanandeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_MashinRanandeRow(ByVal row As tbl_MashinRanandeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_MashinRanandeRow(ByVal parenttbl_RanandeganRowByFK_tbl_MashinRanande_tbl_Ranandegan1 As tbl_RanandeganRow, ByVal parenttbl_MashinRowByFK_tbl_MashinRanande_tbl_Mashin1 As tbl_MashinRow) As tbl_MashinRanandeRow
            Dim rowtbl_MashinRanandeRow As tbl_MashinRanandeRow = CType(Me.NewRow,tbl_MashinRanandeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing}
            If (Not (parenttbl_RanandeganRowByFK_tbl_MashinRanande_tbl_Ranandegan1) Is Nothing) Then
                columnValuesArray(0) = parenttbl_RanandeganRowByFK_tbl_MashinRanande_tbl_Ranandegan1(0)
            End If
            If (Not (parenttbl_MashinRowByFK_tbl_MashinRanande_tbl_Mashin1) Is Nothing) Then
                columnValuesArray(1) = parenttbl_MashinRowByFK_tbl_MashinRanande_tbl_Mashin1(0)
            End If
            rowtbl_MashinRanandeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MashinRanandeRow)
            Return rowtbl_MashinRanandeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByRanandePersonalCodeMashinID(ByVal RanandePersonalCode As String, ByVal MashinID As Integer) As tbl_MashinRanandeRow
            Return CType(Me.Rows.Find(New Object() {RanandePersonalCode, MashinID}),tbl_MashinRanandeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MashinRanandeDataTable = CType(MyBase.Clone,tbl_MashinRanandeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MashinRanandeDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnMashinID = MyBase.Columns("MashinID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRanandePersonalCode, Me.columnMashinID}, true))
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnMashinID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_MashinRanandeRow() As tbl_MashinRanandeRow
            Return CType(Me.NewRow,tbl_MashinRanandeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MashinRanandeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MashinRanandeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MashinRanandeRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRanandeRowChanged(Me, New tbl_MashinRanandeRowChangeEvent(CType(e.Row,tbl_MashinRanandeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MashinRanandeRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRanandeRowChanging(Me, New tbl_MashinRanandeRowChangeEvent(CType(e.Row,tbl_MashinRanandeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MashinRanandeRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRanandeRowDeleted(Me, New tbl_MashinRanandeRowChangeEvent(CType(e.Row,tbl_MashinRanandeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MashinRanandeRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRanandeRowDeleting(Me, New tbl_MashinRanandeRowChangeEvent(CType(e.Row,tbl_MashinRanandeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_MashinRanandeRow(ByVal row As tbl_MashinRanandeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MashinRanandeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_EzamNavganDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_EzamNavganRow)
        
        Private columnOperationCode As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnMahalBargiriID As Global.System.Data.DataColumn
        
        Private columnMabdaID As Global.System.Data.DataColumn
        
        Private columnMaghsadID As Global.System.Data.DataColumn
        
        Private columnNoeBar As Global.System.Data.DataColumn
        
        Private columnTozihat As Global.System.Data.DataColumn
        
        Private columnTarikhEzamBargiri As Global.System.Data.DataColumn
        
        Private columnTarikhHozoorMahalBargiri As Global.System.Data.DataColumn
        
        Private columnSaatHozoorMahalBagiri As Global.System.Data.DataColumn
        
        Private columnShomareBarnameRaft As Global.System.Data.DataColumn
        
        Private columnTarikhBarnameRaft As Global.System.Data.DataColumn
        
        Private columnSaatSodoorBarname As Global.System.Data.DataColumn
        
        Private columnKiloometrKhorroojMojtame As Global.System.Data.DataColumn
        
        Private columnMeghdarSookhtKhorooj As Global.System.Data.DataColumn
        
        Private columnTarikhKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnSaatKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnKiloometrVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnMeghdarSookhtVorood As Global.System.Data.DataColumn
        
        Private columnMasafatTeyShode As Global.System.Data.DataColumn
        
        Private columnSookhtMasrafShode As Global.System.Data.DataColumn
        
        Private columnTarikhHozoorMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnSaatHozoorMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnTarikhBargiriMojadad As Global.System.Data.DataColumn
        
        Private columnSaatBargiriMojadad As Global.System.Data.DataColumn
        
        Private columnTarikhKhoroojMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnSaatKhooojMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnShomareBarnameBargasht As Global.System.Data.DataColumn
        
        Private columnTarikhBarnameBargasht As Global.System.Data.DataColumn
        
        Private columnMablaghKerayeBargasht As Global.System.Data.DataColumn
        
        Private columnMablaghKerayeRaft As Global.System.Data.DataColumn
        
        Private columnTarikhVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnSaatVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnDarMamooriyat As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_EzamNavgan"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MahalBargiriIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMahalBargiriID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MabdaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMabdaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaghsadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaghsadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoeBarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoeBar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TozihatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTozihat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhEzamBargiriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhEzamBargiri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhHozoorMahalBargiriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhHozoorMahalBargiri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatHozoorMahalBagiriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatHozoorMahalBagiri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareBarnameRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareBarnameRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBarnameRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBarnameRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatSodoorBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatSodoorBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KiloometrKhorroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKiloometrKhorroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MeghdarSookhtKhoroojColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeghdarSookhtKhorooj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KiloometrVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKiloometrVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MeghdarSookhtVoroodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeghdarSookhtVorood
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MasafatTeyShodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasafatTeyShode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SookhtMasrafShodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSookhtMasrafShode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhHozoorMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhHozoorMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatHozoorMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatHozoorMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBargiriMojadadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBargiriMojadad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatBargiriMojadadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatBargiriMojadad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhKhoroojMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhKhoroojMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatKhooojMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatKhooojMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareBarnameBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareBarnameBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBarnameBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBarnameBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghKerayeBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablaghKerayeBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghKerayeRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablaghKerayeRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DarMamooriyatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarMamooriyat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_EzamNavganRow
            Get
                Return CType(Me.Rows(index),tbl_EzamNavganRow)
            End Get
        End Property
        
        Public Event tbl_EzamNavganRowChanging As tbl_EzamNavganRowChangeEventHandler
        
        Public Event tbl_EzamNavganRowChanged As tbl_EzamNavganRowChangeEventHandler
        
        Public Event tbl_EzamNavganRowDeleting As tbl_EzamNavganRowChangeEventHandler
        
        Public Event tbl_EzamNavganRowDeleted As tbl_EzamNavganRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_EzamNavganRow(ByVal row As tbl_EzamNavganRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_EzamNavganRow( _
                    ByVal OperationCode As Integer,  _
                    ByVal parenttbl_RanandeganRowByFK_tbl_EzamNavgan_tbl_Ranandegan1 As tbl_RanandeganRow,  _
                    ByVal parenttbl_MashinRowByFK_tbl_EzamNavgan_tbl_Mashin1 As tbl_MashinRow,  _
                    ByVal parenttbl_MahalBargiriRowByFK_tbl_EzamNavgan_tbl_MahalBargiri As tbl_MahalBargiriRow,  _
                    ByVal parenttbl_MabdaRowByFK_tbl_EzamNavgan_tbl_Mabda As tbl_MabdaRow,  _
                    ByVal parenttbl_MaghsadRowByFK_tbl_EzamNavgan_tbl_Maghsad As tbl_MaghsadRow,  _
                    ByVal NoeBar As String,  _
                    ByVal Tozihat As String,  _
                    ByVal TarikhEzamBargiri As String,  _
                    ByVal TarikhHozoorMahalBargiri As String,  _
                    ByVal SaatHozoorMahalBagiri As String,  _
                    ByVal ShomareBarnameRaft As Integer,  _
                    ByVal TarikhBarnameRaft As String,  _
                    ByVal SaatSodoorBarname As String,  _
                    ByVal KiloometrKhorroojMojtame As Integer,  _
                    ByVal MeghdarSookhtKhorooj As Integer,  _
                    ByVal TarikhKhoroojMojtame As String,  _
                    ByVal SaatKhoroojMojtame As String,  _
                    ByVal KiloometrVoroodMojtame As Integer,  _
                    ByVal MeghdarSookhtVorood As Integer,  _
                    ByVal MasafatTeyShode As Integer,  _
                    ByVal SookhtMasrafShode As Integer,  _
                    ByVal TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal TarikhBargiriMojadad As String,  _
                    ByVal SaatBargiriMojadad As String,  _
                    ByVal TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal ShomareBarnameBargasht As Integer,  _
                    ByVal TarikhBarnameBargasht As String,  _
                    ByVal MablaghKerayeBargasht As Integer,  _
                    ByVal MablaghKerayeRaft As Integer,  _
                    ByVal TarikhVoroodMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal DarMamooriyat As Boolean) As tbl_EzamNavganRow
            Dim rowtbl_EzamNavganRow As tbl_EzamNavganRow = CType(Me.NewRow,tbl_EzamNavganRow)
            Dim columnValuesArray() As Object = New Object() {OperationCode, Nothing, Nothing, Nothing, Nothing, Nothing, NoeBar, Tozihat, TarikhEzamBargiri, TarikhHozoorMahalBargiri, SaatHozoorMahalBagiri, ShomareBarnameRaft, TarikhBarnameRaft, SaatSodoorBarname, KiloometrKhorroojMojtame, MeghdarSookhtKhorooj, TarikhKhoroojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojtame, MeghdarSookhtVorood, MasafatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTakhliyeAval, SaatHozoorMahalTakhliyeAval, TarikhBargiriMojadad, SaatBargiriMojadad, TarikhKhoroojMahalTakhliyeAval, SaatKhooojMahalTakhliyeAval, ShomareBarnameBargasht, TarikhBarnameBargasht, MablaghKerayeBargasht, MablaghKerayeRaft, TarikhVoroodMojtame, SaatVoroodMojtame, DarMamooriyat}
            If (Not (parenttbl_RanandeganRowByFK_tbl_EzamNavgan_tbl_Ranandegan1) Is Nothing) Then
                columnValuesArray(1) = parenttbl_RanandeganRowByFK_tbl_EzamNavgan_tbl_Ranandegan1(0)
            End If
            If (Not (parenttbl_MashinRowByFK_tbl_EzamNavgan_tbl_Mashin1) Is Nothing) Then
                columnValuesArray(2) = parenttbl_MashinRowByFK_tbl_EzamNavgan_tbl_Mashin1(0)
            End If
            If (Not (parenttbl_MahalBargiriRowByFK_tbl_EzamNavgan_tbl_MahalBargiri) Is Nothing) Then
                columnValuesArray(3) = parenttbl_MahalBargiriRowByFK_tbl_EzamNavgan_tbl_MahalBargiri(0)
            End If
            If (Not (parenttbl_MabdaRowByFK_tbl_EzamNavgan_tbl_Mabda) Is Nothing) Then
                columnValuesArray(4) = parenttbl_MabdaRowByFK_tbl_EzamNavgan_tbl_Mabda(0)
            End If
            If (Not (parenttbl_MaghsadRowByFK_tbl_EzamNavgan_tbl_Maghsad) Is Nothing) Then
                columnValuesArray(5) = parenttbl_MaghsadRowByFK_tbl_EzamNavgan_tbl_Maghsad(0)
            End If
            rowtbl_EzamNavganRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_EzamNavganRow)
            Return rowtbl_EzamNavganRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByOperationCode(ByVal OperationCode As Integer) As tbl_EzamNavganRow
            Return CType(Me.Rows.Find(New Object() {OperationCode}),tbl_EzamNavganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_EzamNavganDataTable = CType(MyBase.Clone,tbl_EzamNavganDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_EzamNavganDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOperationCode = MyBase.Columns("OperationCode")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnMahalBargiriID = MyBase.Columns("MahalBargiriID")
            Me.columnMabdaID = MyBase.Columns("MabdaID")
            Me.columnMaghsadID = MyBase.Columns("MaghsadID")
            Me.columnNoeBar = MyBase.Columns("NoeBar")
            Me.columnTozihat = MyBase.Columns("Tozihat")
            Me.columnTarikhEzamBargiri = MyBase.Columns("TarikhEzamBargiri")
            Me.columnTarikhHozoorMahalBargiri = MyBase.Columns("TarikhHozoorMahalBargiri")
            Me.columnSaatHozoorMahalBagiri = MyBase.Columns("SaatHozoorMahalBagiri")
            Me.columnShomareBarnameRaft = MyBase.Columns("ShomareBarnameRaft")
            Me.columnTarikhBarnameRaft = MyBase.Columns("TarikhBarnameRaft")
            Me.columnSaatSodoorBarname = MyBase.Columns("SaatSodoorBarname")
            Me.columnKiloometrKhorroojMojtame = MyBase.Columns("KiloometrKhorroojMojtame")
            Me.columnMeghdarSookhtKhorooj = MyBase.Columns("MeghdarSookhtKhorooj")
            Me.columnTarikhKhoroojMojtame = MyBase.Columns("TarikhKhoroojMojtame")
            Me.columnSaatKhoroojMojtame = MyBase.Columns("SaatKhoroojMojtame")
            Me.columnKiloometrVoroodMojtame = MyBase.Columns("KiloometrVoroodMojtame")
            Me.columnMeghdarSookhtVorood = MyBase.Columns("MeghdarSookhtVorood")
            Me.columnMasafatTeyShode = MyBase.Columns("MasafatTeyShode")
            Me.columnSookhtMasrafShode = MyBase.Columns("SookhtMasrafShode")
            Me.columnTarikhHozoorMahalTakhliyeAval = MyBase.Columns("TarikhHozoorMahalTakhliyeAval")
            Me.columnSaatHozoorMahalTakhliyeAval = MyBase.Columns("SaatHozoorMahalTakhliyeAval")
            Me.columnTarikhBargiriMojadad = MyBase.Columns("TarikhBargiriMojadad")
            Me.columnSaatBargiriMojadad = MyBase.Columns("SaatBargiriMojadad")
            Me.columnTarikhKhoroojMahalTakhliyeAval = MyBase.Columns("TarikhKhoroojMahalTakhliyeAval")
            Me.columnSaatKhooojMahalTakhliyeAval = MyBase.Columns("SaatKhooojMahalTakhliyeAval")
            Me.columnShomareBarnameBargasht = MyBase.Columns("ShomareBarnameBargasht")
            Me.columnTarikhBarnameBargasht = MyBase.Columns("TarikhBarnameBargasht")
            Me.columnMablaghKerayeBargasht = MyBase.Columns("MablaghKerayeBargasht")
            Me.columnMablaghKerayeRaft = MyBase.Columns("MablaghKerayeRaft")
            Me.columnTarikhVoroodMojtame = MyBase.Columns("TarikhVoroodMojtame")
            Me.columnSaatVoroodMojtame = MyBase.Columns("SaatVoroodMojtame")
            Me.columnDarMamooriyat = MyBase.Columns("DarMamooriyat")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOperationCode = New Global.System.Data.DataColumn("OperationCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationCode)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnMahalBargiriID = New Global.System.Data.DataColumn("MahalBargiriID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMahalBargiriID)
            Me.columnMabdaID = New Global.System.Data.DataColumn("MabdaID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMabdaID)
            Me.columnMaghsadID = New Global.System.Data.DataColumn("MaghsadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaghsadID)
            Me.columnNoeBar = New Global.System.Data.DataColumn("NoeBar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoeBar)
            Me.columnTozihat = New Global.System.Data.DataColumn("Tozihat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTozihat)
            Me.columnTarikhEzamBargiri = New Global.System.Data.DataColumn("TarikhEzamBargiri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhEzamBargiri)
            Me.columnTarikhHozoorMahalBargiri = New Global.System.Data.DataColumn("TarikhHozoorMahalBargiri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhHozoorMahalBargiri)
            Me.columnSaatHozoorMahalBagiri = New Global.System.Data.DataColumn("SaatHozoorMahalBagiri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatHozoorMahalBagiri)
            Me.columnShomareBarnameRaft = New Global.System.Data.DataColumn("ShomareBarnameRaft", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareBarnameRaft)
            Me.columnTarikhBarnameRaft = New Global.System.Data.DataColumn("TarikhBarnameRaft", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBarnameRaft)
            Me.columnSaatSodoorBarname = New Global.System.Data.DataColumn("SaatSodoorBarname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatSodoorBarname)
            Me.columnKiloometrKhorroojMojtame = New Global.System.Data.DataColumn("KiloometrKhorroojMojtame", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKiloometrKhorroojMojtame)
            Me.columnMeghdarSookhtKhorooj = New Global.System.Data.DataColumn("MeghdarSookhtKhorooj", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeghdarSookhtKhorooj)
            Me.columnTarikhKhoroojMojtame = New Global.System.Data.DataColumn("TarikhKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhKhoroojMojtame)
            Me.columnSaatKhoroojMojtame = New Global.System.Data.DataColumn("SaatKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatKhoroojMojtame)
            Me.columnKiloometrVoroodMojtame = New Global.System.Data.DataColumn("KiloometrVoroodMojtame", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKiloometrVoroodMojtame)
            Me.columnMeghdarSookhtVorood = New Global.System.Data.DataColumn("MeghdarSookhtVorood", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeghdarSookhtVorood)
            Me.columnMasafatTeyShode = New Global.System.Data.DataColumn("MasafatTeyShode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasafatTeyShode)
            Me.columnSookhtMasrafShode = New Global.System.Data.DataColumn("SookhtMasrafShode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSookhtMasrafShode)
            Me.columnTarikhHozoorMahalTakhliyeAval = New Global.System.Data.DataColumn("TarikhHozoorMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhHozoorMahalTakhliyeAval)
            Me.columnSaatHozoorMahalTakhliyeAval = New Global.System.Data.DataColumn("SaatHozoorMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatHozoorMahalTakhliyeAval)
            Me.columnTarikhBargiriMojadad = New Global.System.Data.DataColumn("TarikhBargiriMojadad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBargiriMojadad)
            Me.columnSaatBargiriMojadad = New Global.System.Data.DataColumn("SaatBargiriMojadad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatBargiriMojadad)
            Me.columnTarikhKhoroojMahalTakhliyeAval = New Global.System.Data.DataColumn("TarikhKhoroojMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhKhoroojMahalTakhliyeAval)
            Me.columnSaatKhooojMahalTakhliyeAval = New Global.System.Data.DataColumn("SaatKhooojMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatKhooojMahalTakhliyeAval)
            Me.columnShomareBarnameBargasht = New Global.System.Data.DataColumn("ShomareBarnameBargasht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareBarnameBargasht)
            Me.columnTarikhBarnameBargasht = New Global.System.Data.DataColumn("TarikhBarnameBargasht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBarnameBargasht)
            Me.columnMablaghKerayeBargasht = New Global.System.Data.DataColumn("MablaghKerayeBargasht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablaghKerayeBargasht)
            Me.columnMablaghKerayeRaft = New Global.System.Data.DataColumn("MablaghKerayeRaft", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablaghKerayeRaft)
            Me.columnTarikhVoroodMojtame = New Global.System.Data.DataColumn("TarikhVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhVoroodMojtame)
            Me.columnSaatVoroodMojtame = New Global.System.Data.DataColumn("SaatVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatVoroodMojtame)
            Me.columnDarMamooriyat = New Global.System.Data.DataColumn("DarMamooriyat", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarMamooriyat)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOperationCode}, true))
            Me.columnOperationCode.AllowDBNull = false
            Me.columnOperationCode.Unique = true
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnMashinID.AllowDBNull = false
            Me.columnMahalBargiriID.AllowDBNull = false
            Me.columnMabdaID.AllowDBNull = false
            Me.columnMaghsadID.AllowDBNull = false
            Me.columnNoeBar.AllowDBNull = false
            Me.columnNoeBar.MaxLength = 255
            Me.columnTozihat.MaxLength = 500
            Me.columnTarikhEzamBargiri.AllowDBNull = false
            Me.columnTarikhEzamBargiri.MaxLength = 10
            Me.columnTarikhHozoorMahalBargiri.AllowDBNull = false
            Me.columnTarikhHozoorMahalBargiri.MaxLength = 10
            Me.columnSaatHozoorMahalBagiri.AllowDBNull = false
            Me.columnSaatHozoorMahalBagiri.MaxLength = 5
            Me.columnShomareBarnameRaft.AllowDBNull = false
            Me.columnTarikhBarnameRaft.AllowDBNull = false
            Me.columnTarikhBarnameRaft.MaxLength = 50
            Me.columnSaatSodoorBarname.AllowDBNull = false
            Me.columnSaatSodoorBarname.MaxLength = 5
            Me.columnKiloometrKhorroojMojtame.AllowDBNull = false
            Me.columnMeghdarSookhtKhorooj.AllowDBNull = false
            Me.columnTarikhKhoroojMojtame.AllowDBNull = false
            Me.columnTarikhKhoroojMojtame.MaxLength = 10
            Me.columnSaatKhoroojMojtame.AllowDBNull = false
            Me.columnSaatKhoroojMojtame.MaxLength = 5
            Me.columnTarikhHozoorMahalTakhliyeAval.MaxLength = 10
            Me.columnSaatHozoorMahalTakhliyeAval.MaxLength = 5
            Me.columnTarikhBargiriMojadad.MaxLength = 10
            Me.columnSaatBargiriMojadad.MaxLength = 5
            Me.columnTarikhKhoroojMahalTakhliyeAval.MaxLength = 10
            Me.columnSaatKhooojMahalTakhliyeAval.MaxLength = 5
            Me.columnTarikhBarnameBargasht.MaxLength = 10
            Me.columnTarikhVoroodMojtame.MaxLength = 10
            Me.columnSaatVoroodMojtame.MaxLength = 5
            Me.columnDarMamooriyat.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_EzamNavganRow() As tbl_EzamNavganRow
            Return CType(Me.NewRow,tbl_EzamNavganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_EzamNavganRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_EzamNavganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_EzamNavganRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_EzamNavganRowChanged(Me, New tbl_EzamNavganRowChangeEvent(CType(e.Row,tbl_EzamNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_EzamNavganRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_EzamNavganRowChanging(Me, New tbl_EzamNavganRowChangeEvent(CType(e.Row,tbl_EzamNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_EzamNavganRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_EzamNavganRowDeleted(Me, New tbl_EzamNavganRowChangeEvent(CType(e.Row,tbl_EzamNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_EzamNavganRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_EzamNavganRowDeleting(Me, New tbl_EzamNavganRowChangeEvent(CType(e.Row,tbl_EzamNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_EzamNavganRow(ByVal row As tbl_EzamNavganRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_EzamNavganDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vSelectNavganDataTable
        Inherits Global.System.Data.TypedTableBase(Of vSelectNavganRow)
        
        Private columnOperationCode As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnRanandeFullName As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnMahalBargiriID As Global.System.Data.DataColumn
        
        Private columnNameMahal As Global.System.Data.DataColumn
        
        Private columnMabdaID As Global.System.Data.DataColumn
        
        Private columnNameMabda As Global.System.Data.DataColumn
        
        Private columnMaghsadID As Global.System.Data.DataColumn
        
        Private columnNameMaghsad As Global.System.Data.DataColumn
        
        Private columnNoeBar As Global.System.Data.DataColumn
        
        Private columnTozihat As Global.System.Data.DataColumn
        
        Private columnTarikhEzamBargiri As Global.System.Data.DataColumn
        
        Private columnTarikhHozoorMahalBargiri As Global.System.Data.DataColumn
        
        Private columnSaatHozoorMahalBagiri As Global.System.Data.DataColumn
        
        Private columnShomareBarnameRaft As Global.System.Data.DataColumn
        
        Private columnTarikhBarnameRaft As Global.System.Data.DataColumn
        
        Private columnSaatSodoorBarname As Global.System.Data.DataColumn
        
        Private columnKiloometrKhorroojMojtame As Global.System.Data.DataColumn
        
        Private columnMeghdarSookhtKhorooj As Global.System.Data.DataColumn
        
        Private columnTarikhKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnSaatKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnKiloometrVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnMeghdarSookhtVorood As Global.System.Data.DataColumn
        
        Private columnMasafatTeyShode As Global.System.Data.DataColumn
        
        Private columnSookhtMasrafShode As Global.System.Data.DataColumn
        
        Private columnTarikhHozoorMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnSaatHozoorMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnTarikhBargiriMojadad As Global.System.Data.DataColumn
        
        Private columnSaatBargiriMojadad As Global.System.Data.DataColumn
        
        Private columnTarikhKhoroojMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnSaatKhooojMahalTakhliyeAval As Global.System.Data.DataColumn
        
        Private columnShomareBarnameBargasht As Global.System.Data.DataColumn
        
        Private columnTarikhBarnameBargasht As Global.System.Data.DataColumn
        
        Private columnMablaghKerayeBargasht As Global.System.Data.DataColumn
        
        Private columnMablaghKerayeRaft As Global.System.Data.DataColumn
        
        Private columnTarikhVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnSaatVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnDarMamooriyat As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vSelectNavgan"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandeFullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandeFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MahalBargiriIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMahalBargiriID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMahalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMahal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MabdaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMabdaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMabdaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMabda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaghsadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaghsadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMaghsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMaghsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoeBarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoeBar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TozihatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTozihat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhEzamBargiriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhEzamBargiri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhHozoorMahalBargiriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhHozoorMahalBargiri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatHozoorMahalBagiriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatHozoorMahalBagiri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareBarnameRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareBarnameRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBarnameRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBarnameRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatSodoorBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatSodoorBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KiloometrKhorroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKiloometrKhorroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MeghdarSookhtKhoroojColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeghdarSookhtKhorooj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KiloometrVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKiloometrVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MeghdarSookhtVoroodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeghdarSookhtVorood
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MasafatTeyShodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasafatTeyShode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SookhtMasrafShodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSookhtMasrafShode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhHozoorMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhHozoorMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatHozoorMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatHozoorMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBargiriMojadadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBargiriMojadad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatBargiriMojadadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatBargiriMojadad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhKhoroojMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhKhoroojMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatKhooojMahalTakhliyeAvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatKhooojMahalTakhliyeAval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareBarnameBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareBarnameBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBarnameBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBarnameBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghKerayeBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablaghKerayeBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghKerayeRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablaghKerayeRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DarMamooriyatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarMamooriyat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vSelectNavganRow
            Get
                Return CType(Me.Rows(index),vSelectNavganRow)
            End Get
        End Property
        
        Public Event vSelectNavganRowChanging As vSelectNavganRowChangeEventHandler
        
        Public Event vSelectNavganRowChanged As vSelectNavganRowChangeEventHandler
        
        Public Event vSelectNavganRowDeleting As vSelectNavganRowChangeEventHandler
        
        Public Event vSelectNavganRowDeleted As vSelectNavganRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvSelectNavganRow(ByVal row As vSelectNavganRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvSelectNavganRow( _
                    ByVal OperationCode As Integer,  _
                    ByVal RanandePersonalCode As String,  _
                    ByVal RanandeFullName As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal Pelak As String,  _
                    ByVal MahalBargiriID As Integer,  _
                    ByVal NameMahal As String,  _
                    ByVal MabdaID As Integer,  _
                    ByVal NameMabda As String,  _
                    ByVal MaghsadID As Integer,  _
                    ByVal NameMaghsad As String,  _
                    ByVal NoeBar As String,  _
                    ByVal Tozihat As String,  _
                    ByVal TarikhEzamBargiri As String,  _
                    ByVal TarikhHozoorMahalBargiri As String,  _
                    ByVal SaatHozoorMahalBagiri As String,  _
                    ByVal ShomareBarnameRaft As Integer,  _
                    ByVal TarikhBarnameRaft As String,  _
                    ByVal SaatSodoorBarname As String,  _
                    ByVal KiloometrKhorroojMojtame As Integer,  _
                    ByVal MeghdarSookhtKhorooj As Integer,  _
                    ByVal TarikhKhoroojMojtame As String,  _
                    ByVal SaatKhoroojMojtame As String,  _
                    ByVal KiloometrVoroodMojtame As Integer,  _
                    ByVal MeghdarSookhtVorood As Integer,  _
                    ByVal MasafatTeyShode As Integer,  _
                    ByVal SookhtMasrafShode As Integer,  _
                    ByVal TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal TarikhBargiriMojadad As String,  _
                    ByVal SaatBargiriMojadad As String,  _
                    ByVal TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal ShomareBarnameBargasht As Integer,  _
                    ByVal TarikhBarnameBargasht As String,  _
                    ByVal MablaghKerayeBargasht As Integer,  _
                    ByVal MablaghKerayeRaft As Integer,  _
                    ByVal TarikhVoroodMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal DarMamooriyat As Boolean) As vSelectNavganRow
            Dim rowvSelectNavganRow As vSelectNavganRow = CType(Me.NewRow,vSelectNavganRow)
            Dim columnValuesArray() As Object = New Object() {OperationCode, RanandePersonalCode, RanandeFullName, MashinID, Pelak, MahalBargiriID, NameMahal, MabdaID, NameMabda, MaghsadID, NameMaghsad, NoeBar, Tozihat, TarikhEzamBargiri, TarikhHozoorMahalBargiri, SaatHozoorMahalBagiri, ShomareBarnameRaft, TarikhBarnameRaft, SaatSodoorBarname, KiloometrKhorroojMojtame, MeghdarSookhtKhorooj, TarikhKhoroojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojtame, MeghdarSookhtVorood, MasafatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTakhliyeAval, SaatHozoorMahalTakhliyeAval, TarikhBargiriMojadad, SaatBargiriMojadad, TarikhKhoroojMahalTakhliyeAval, SaatKhooojMahalTakhliyeAval, ShomareBarnameBargasht, TarikhBarnameBargasht, MablaghKerayeBargasht, MablaghKerayeRaft, TarikhVoroodMojtame, SaatVoroodMojtame, DarMamooriyat}
            rowvSelectNavganRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvSelectNavganRow)
            Return rowvSelectNavganRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByOperationCode(ByVal OperationCode As Integer) As vSelectNavganRow
            Return CType(Me.Rows.Find(New Object() {OperationCode}),vSelectNavganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vSelectNavganDataTable = CType(MyBase.Clone,vSelectNavganDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vSelectNavganDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOperationCode = MyBase.Columns("OperationCode")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnRanandeFullName = MyBase.Columns("RanandeFullName")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnMahalBargiriID = MyBase.Columns("MahalBargiriID")
            Me.columnNameMahal = MyBase.Columns("NameMahal")
            Me.columnMabdaID = MyBase.Columns("MabdaID")
            Me.columnNameMabda = MyBase.Columns("NameMabda")
            Me.columnMaghsadID = MyBase.Columns("MaghsadID")
            Me.columnNameMaghsad = MyBase.Columns("NameMaghsad")
            Me.columnNoeBar = MyBase.Columns("NoeBar")
            Me.columnTozihat = MyBase.Columns("Tozihat")
            Me.columnTarikhEzamBargiri = MyBase.Columns("TarikhEzamBargiri")
            Me.columnTarikhHozoorMahalBargiri = MyBase.Columns("TarikhHozoorMahalBargiri")
            Me.columnSaatHozoorMahalBagiri = MyBase.Columns("SaatHozoorMahalBagiri")
            Me.columnShomareBarnameRaft = MyBase.Columns("ShomareBarnameRaft")
            Me.columnTarikhBarnameRaft = MyBase.Columns("TarikhBarnameRaft")
            Me.columnSaatSodoorBarname = MyBase.Columns("SaatSodoorBarname")
            Me.columnKiloometrKhorroojMojtame = MyBase.Columns("KiloometrKhorroojMojtame")
            Me.columnMeghdarSookhtKhorooj = MyBase.Columns("MeghdarSookhtKhorooj")
            Me.columnTarikhKhoroojMojtame = MyBase.Columns("TarikhKhoroojMojtame")
            Me.columnSaatKhoroojMojtame = MyBase.Columns("SaatKhoroojMojtame")
            Me.columnKiloometrVoroodMojtame = MyBase.Columns("KiloometrVoroodMojtame")
            Me.columnMeghdarSookhtVorood = MyBase.Columns("MeghdarSookhtVorood")
            Me.columnMasafatTeyShode = MyBase.Columns("MasafatTeyShode")
            Me.columnSookhtMasrafShode = MyBase.Columns("SookhtMasrafShode")
            Me.columnTarikhHozoorMahalTakhliyeAval = MyBase.Columns("TarikhHozoorMahalTakhliyeAval")
            Me.columnSaatHozoorMahalTakhliyeAval = MyBase.Columns("SaatHozoorMahalTakhliyeAval")
            Me.columnTarikhBargiriMojadad = MyBase.Columns("TarikhBargiriMojadad")
            Me.columnSaatBargiriMojadad = MyBase.Columns("SaatBargiriMojadad")
            Me.columnTarikhKhoroojMahalTakhliyeAval = MyBase.Columns("TarikhKhoroojMahalTakhliyeAval")
            Me.columnSaatKhooojMahalTakhliyeAval = MyBase.Columns("SaatKhooojMahalTakhliyeAval")
            Me.columnShomareBarnameBargasht = MyBase.Columns("ShomareBarnameBargasht")
            Me.columnTarikhBarnameBargasht = MyBase.Columns("TarikhBarnameBargasht")
            Me.columnMablaghKerayeBargasht = MyBase.Columns("MablaghKerayeBargasht")
            Me.columnMablaghKerayeRaft = MyBase.Columns("MablaghKerayeRaft")
            Me.columnTarikhVoroodMojtame = MyBase.Columns("TarikhVoroodMojtame")
            Me.columnSaatVoroodMojtame = MyBase.Columns("SaatVoroodMojtame")
            Me.columnDarMamooriyat = MyBase.Columns("DarMamooriyat")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOperationCode = New Global.System.Data.DataColumn("OperationCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationCode)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnRanandeFullName = New Global.System.Data.DataColumn("RanandeFullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandeFullName)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnMahalBargiriID = New Global.System.Data.DataColumn("MahalBargiriID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMahalBargiriID)
            Me.columnNameMahal = New Global.System.Data.DataColumn("NameMahal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMahal)
            Me.columnMabdaID = New Global.System.Data.DataColumn("MabdaID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMabdaID)
            Me.columnNameMabda = New Global.System.Data.DataColumn("NameMabda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMabda)
            Me.columnMaghsadID = New Global.System.Data.DataColumn("MaghsadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaghsadID)
            Me.columnNameMaghsad = New Global.System.Data.DataColumn("NameMaghsad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMaghsad)
            Me.columnNoeBar = New Global.System.Data.DataColumn("NoeBar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoeBar)
            Me.columnTozihat = New Global.System.Data.DataColumn("Tozihat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTozihat)
            Me.columnTarikhEzamBargiri = New Global.System.Data.DataColumn("TarikhEzamBargiri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhEzamBargiri)
            Me.columnTarikhHozoorMahalBargiri = New Global.System.Data.DataColumn("TarikhHozoorMahalBargiri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhHozoorMahalBargiri)
            Me.columnSaatHozoorMahalBagiri = New Global.System.Data.DataColumn("SaatHozoorMahalBagiri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatHozoorMahalBagiri)
            Me.columnShomareBarnameRaft = New Global.System.Data.DataColumn("ShomareBarnameRaft", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareBarnameRaft)
            Me.columnTarikhBarnameRaft = New Global.System.Data.DataColumn("TarikhBarnameRaft", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBarnameRaft)
            Me.columnSaatSodoorBarname = New Global.System.Data.DataColumn("SaatSodoorBarname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatSodoorBarname)
            Me.columnKiloometrKhorroojMojtame = New Global.System.Data.DataColumn("KiloometrKhorroojMojtame", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKiloometrKhorroojMojtame)
            Me.columnMeghdarSookhtKhorooj = New Global.System.Data.DataColumn("MeghdarSookhtKhorooj", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeghdarSookhtKhorooj)
            Me.columnTarikhKhoroojMojtame = New Global.System.Data.DataColumn("TarikhKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhKhoroojMojtame)
            Me.columnSaatKhoroojMojtame = New Global.System.Data.DataColumn("SaatKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatKhoroojMojtame)
            Me.columnKiloometrVoroodMojtame = New Global.System.Data.DataColumn("KiloometrVoroodMojtame", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKiloometrVoroodMojtame)
            Me.columnMeghdarSookhtVorood = New Global.System.Data.DataColumn("MeghdarSookhtVorood", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeghdarSookhtVorood)
            Me.columnMasafatTeyShode = New Global.System.Data.DataColumn("MasafatTeyShode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasafatTeyShode)
            Me.columnSookhtMasrafShode = New Global.System.Data.DataColumn("SookhtMasrafShode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSookhtMasrafShode)
            Me.columnTarikhHozoorMahalTakhliyeAval = New Global.System.Data.DataColumn("TarikhHozoorMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhHozoorMahalTakhliyeAval)
            Me.columnSaatHozoorMahalTakhliyeAval = New Global.System.Data.DataColumn("SaatHozoorMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatHozoorMahalTakhliyeAval)
            Me.columnTarikhBargiriMojadad = New Global.System.Data.DataColumn("TarikhBargiriMojadad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBargiriMojadad)
            Me.columnSaatBargiriMojadad = New Global.System.Data.DataColumn("SaatBargiriMojadad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatBargiriMojadad)
            Me.columnTarikhKhoroojMahalTakhliyeAval = New Global.System.Data.DataColumn("TarikhKhoroojMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhKhoroojMahalTakhliyeAval)
            Me.columnSaatKhooojMahalTakhliyeAval = New Global.System.Data.DataColumn("SaatKhooojMahalTakhliyeAval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatKhooojMahalTakhliyeAval)
            Me.columnShomareBarnameBargasht = New Global.System.Data.DataColumn("ShomareBarnameBargasht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareBarnameBargasht)
            Me.columnTarikhBarnameBargasht = New Global.System.Data.DataColumn("TarikhBarnameBargasht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBarnameBargasht)
            Me.columnMablaghKerayeBargasht = New Global.System.Data.DataColumn("MablaghKerayeBargasht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablaghKerayeBargasht)
            Me.columnMablaghKerayeRaft = New Global.System.Data.DataColumn("MablaghKerayeRaft", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablaghKerayeRaft)
            Me.columnTarikhVoroodMojtame = New Global.System.Data.DataColumn("TarikhVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhVoroodMojtame)
            Me.columnSaatVoroodMojtame = New Global.System.Data.DataColumn("SaatVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatVoroodMojtame)
            Me.columnDarMamooriyat = New Global.System.Data.DataColumn("DarMamooriyat", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarMamooriyat)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOperationCode}, true))
            Me.columnOperationCode.AllowDBNull = false
            Me.columnOperationCode.Unique = true
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnRanandeFullName.ReadOnly = true
            Me.columnRanandeFullName.MaxLength = 61
            Me.columnMashinID.AllowDBNull = false
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 50
            Me.columnMahalBargiriID.AllowDBNull = false
            Me.columnNameMahal.AllowDBNull = false
            Me.columnNameMahal.MaxLength = 50
            Me.columnMabdaID.AllowDBNull = false
            Me.columnNameMabda.AllowDBNull = false
            Me.columnNameMabda.MaxLength = 50
            Me.columnMaghsadID.AllowDBNull = false
            Me.columnNameMaghsad.AllowDBNull = false
            Me.columnNameMaghsad.MaxLength = 50
            Me.columnNoeBar.AllowDBNull = false
            Me.columnNoeBar.MaxLength = 255
            Me.columnTozihat.MaxLength = 500
            Me.columnTarikhEzamBargiri.AllowDBNull = false
            Me.columnTarikhEzamBargiri.MaxLength = 10
            Me.columnTarikhHozoorMahalBargiri.AllowDBNull = false
            Me.columnTarikhHozoorMahalBargiri.MaxLength = 10
            Me.columnSaatHozoorMahalBagiri.AllowDBNull = false
            Me.columnSaatHozoorMahalBagiri.MaxLength = 5
            Me.columnShomareBarnameRaft.AllowDBNull = false
            Me.columnTarikhBarnameRaft.AllowDBNull = false
            Me.columnTarikhBarnameRaft.MaxLength = 50
            Me.columnSaatSodoorBarname.AllowDBNull = false
            Me.columnSaatSodoorBarname.MaxLength = 5
            Me.columnKiloometrKhorroojMojtame.AllowDBNull = false
            Me.columnMeghdarSookhtKhorooj.AllowDBNull = false
            Me.columnTarikhKhoroojMojtame.AllowDBNull = false
            Me.columnTarikhKhoroojMojtame.MaxLength = 10
            Me.columnSaatKhoroojMojtame.AllowDBNull = false
            Me.columnSaatKhoroojMojtame.MaxLength = 5
            Me.columnTarikhHozoorMahalTakhliyeAval.MaxLength = 10
            Me.columnSaatHozoorMahalTakhliyeAval.MaxLength = 5
            Me.columnTarikhBargiriMojadad.MaxLength = 10
            Me.columnSaatBargiriMojadad.MaxLength = 5
            Me.columnTarikhKhoroojMahalTakhliyeAval.MaxLength = 10
            Me.columnSaatKhooojMahalTakhliyeAval.MaxLength = 5
            Me.columnTarikhBarnameBargasht.MaxLength = 10
            Me.columnTarikhVoroodMojtame.MaxLength = 10
            Me.columnSaatVoroodMojtame.MaxLength = 5
            Me.columnDarMamooriyat.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvSelectNavganRow() As vSelectNavganRow
            Return CType(Me.NewRow,vSelectNavganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vSelectNavganRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vSelectNavganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vSelectNavganRowChangedEvent) Is Nothing) Then
                RaiseEvent vSelectNavganRowChanged(Me, New vSelectNavganRowChangeEvent(CType(e.Row,vSelectNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vSelectNavganRowChangingEvent) Is Nothing) Then
                RaiseEvent vSelectNavganRowChanging(Me, New vSelectNavganRowChangeEvent(CType(e.Row,vSelectNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vSelectNavganRowDeletedEvent) Is Nothing) Then
                RaiseEvent vSelectNavganRowDeleted(Me, New vSelectNavganRowChangeEvent(CType(e.Row,vSelectNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vSelectNavganRowDeletingEvent) Is Nothing) Then
                RaiseEvent vSelectNavganRowDeleting(Me, New vSelectNavganRowChangeEvent(CType(e.Row,vSelectNavganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevSelectNavganRow(ByVal row As vSelectNavganRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vSelectNavganDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_TamiratDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_TamiratRow)
        
        Private columnFactorID As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnNameTamirgah As Global.System.Data.DataColumn
        
        Private columnKhesaratSales As Global.System.Data.DataColumn
        
        Private columnKhesaratBadane As Global.System.Data.DataColumn
        
        Private columnIsProcess As Global.System.Data.DataColumn
        
        Private columnPaymentStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Tamirat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameTamirgahColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameTamirgah
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KhesaratSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKhesaratSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KhesaratBadaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKhesaratBadane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsProcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PaymentStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_TamiratRow
            Get
                Return CType(Me.Rows(index),tbl_TamiratRow)
            End Get
        End Property
        
        Public Event tbl_TamiratRowChanging As tbl_TamiratRowChangeEventHandler
        
        Public Event tbl_TamiratRowChanged As tbl_TamiratRowChangeEventHandler
        
        Public Event tbl_TamiratRowDeleting As tbl_TamiratRowChangeEventHandler
        
        Public Event tbl_TamiratRowDeleted As tbl_TamiratRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_TamiratRow(ByVal row As tbl_TamiratRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_TamiratRow(ByVal FactorID As Integer, ByVal parenttbl_RanandeganRowByFK_tbl_Tamirat_tbl_Ranandegan1 As tbl_RanandeganRow, ByVal parenttbl_MashinRowByFK_tbl_Tamirat_tbl_Mashin1 As tbl_MashinRow, ByVal pDate As String, ByVal NameTamirgah As String, ByVal KhesaratSales As Integer, ByVal KhesaratBadane As Integer, ByVal IsProcess As Boolean, ByVal PaymentStatus As Boolean) As tbl_TamiratRow
            Dim rowtbl_TamiratRow As tbl_TamiratRow = CType(Me.NewRow,tbl_TamiratRow)
            Dim columnValuesArray() As Object = New Object() {FactorID, Nothing, Nothing, pDate, NameTamirgah, KhesaratSales, KhesaratBadane, IsProcess, PaymentStatus}
            If (Not (parenttbl_RanandeganRowByFK_tbl_Tamirat_tbl_Ranandegan1) Is Nothing) Then
                columnValuesArray(1) = parenttbl_RanandeganRowByFK_tbl_Tamirat_tbl_Ranandegan1(0)
            End If
            If (Not (parenttbl_MashinRowByFK_tbl_Tamirat_tbl_Mashin1) Is Nothing) Then
                columnValuesArray(2) = parenttbl_MashinRowByFK_tbl_Tamirat_tbl_Mashin1(0)
            End If
            rowtbl_TamiratRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_TamiratRow)
            Return rowtbl_TamiratRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByFactorID(ByVal FactorID As Integer) As tbl_TamiratRow
            Return CType(Me.Rows.Find(New Object() {FactorID}),tbl_TamiratRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_TamiratDataTable = CType(MyBase.Clone,tbl_TamiratDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_TamiratDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFactorID = MyBase.Columns("FactorID")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnNameTamirgah = MyBase.Columns("NameTamirgah")
            Me.columnKhesaratSales = MyBase.Columns("KhesaratSales")
            Me.columnKhesaratBadane = MyBase.Columns("KhesaratBadane")
            Me.columnIsProcess = MyBase.Columns("IsProcess")
            Me.columnPaymentStatus = MyBase.Columns("PaymentStatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFactorID = New Global.System.Data.DataColumn("FactorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorID)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnNameTamirgah = New Global.System.Data.DataColumn("NameTamirgah", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameTamirgah)
            Me.columnKhesaratSales = New Global.System.Data.DataColumn("KhesaratSales", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKhesaratSales)
            Me.columnKhesaratBadane = New Global.System.Data.DataColumn("KhesaratBadane", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKhesaratBadane)
            Me.columnIsProcess = New Global.System.Data.DataColumn("IsProcess", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProcess)
            Me.columnPaymentStatus = New Global.System.Data.DataColumn("PaymentStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFactorID}, true))
            Me.columnFactorID.AllowDBNull = false
            Me.columnFactorID.Unique = true
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnMashinID.AllowDBNull = false
            Me.columnpDate.AllowDBNull = false
            Me.columnpDate.MaxLength = 10
            Me.columnNameTamirgah.AllowDBNull = false
            Me.columnNameTamirgah.MaxLength = 50
            Me.columnIsProcess.AllowDBNull = false
            Me.columnPaymentStatus.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_TamiratRow() As tbl_TamiratRow
            Return CType(Me.NewRow,tbl_TamiratRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_TamiratRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_TamiratRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_TamiratRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratRowChanged(Me, New tbl_TamiratRowChangeEvent(CType(e.Row,tbl_TamiratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_TamiratRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratRowChanging(Me, New tbl_TamiratRowChangeEvent(CType(e.Row,tbl_TamiratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_TamiratRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratRowDeleted(Me, New tbl_TamiratRowChangeEvent(CType(e.Row,tbl_TamiratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_TamiratRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratRowDeleting(Me, New tbl_TamiratRowChangeEvent(CType(e.Row,tbl_TamiratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_TamiratRow(ByVal row As tbl_TamiratRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_TamiratDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_TamiratJoziyatDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_TamiratJoziyatRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnFactorID As Global.System.Data.DataColumn
        
        Private columnSharhTamirat As Global.System.Data.DataColumn
        
        Private columnMablagh As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_TamiratJoziyat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SharhTamiratColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharhTamirat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablagh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_TamiratJoziyatRow
            Get
                Return CType(Me.Rows(index),tbl_TamiratJoziyatRow)
            End Get
        End Property
        
        Public Event tbl_TamiratJoziyatRowChanging As tbl_TamiratJoziyatRowChangeEventHandler
        
        Public Event tbl_TamiratJoziyatRowChanged As tbl_TamiratJoziyatRowChangeEventHandler
        
        Public Event tbl_TamiratJoziyatRowDeleting As tbl_TamiratJoziyatRowChangeEventHandler
        
        Public Event tbl_TamiratJoziyatRowDeleted As tbl_TamiratJoziyatRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_TamiratJoziyatRow(ByVal row As tbl_TamiratJoziyatRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_TamiratJoziyatRow(ByVal parenttbl_TamiratRowByFK_tbl_TamirgahJoziyat_tbl_Tamirat As tbl_TamiratRow, ByVal SharhTamirat As String, ByVal Mablagh As Integer) As tbl_TamiratJoziyatRow
            Dim rowtbl_TamiratJoziyatRow As tbl_TamiratJoziyatRow = CType(Me.NewRow,tbl_TamiratJoziyatRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, SharhTamirat, Mablagh}
            If (Not (parenttbl_TamiratRowByFK_tbl_TamirgahJoziyat_tbl_Tamirat) Is Nothing) Then
                columnValuesArray(1) = parenttbl_TamiratRowByFK_tbl_TamirgahJoziyat_tbl_Tamirat(0)
            End If
            rowtbl_TamiratJoziyatRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_TamiratJoziyatRow)
            Return rowtbl_TamiratJoziyatRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByID(ByVal ID As Integer) As tbl_TamiratJoziyatRow
            Return CType(Me.Rows.Find(New Object() {ID}),tbl_TamiratJoziyatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_TamiratJoziyatDataTable = CType(MyBase.Clone,tbl_TamiratJoziyatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_TamiratJoziyatDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnFactorID = MyBase.Columns("FactorID")
            Me.columnSharhTamirat = MyBase.Columns("SharhTamirat")
            Me.columnMablagh = MyBase.Columns("Mablagh")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnFactorID = New Global.System.Data.DataColumn("FactorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorID)
            Me.columnSharhTamirat = New Global.System.Data.DataColumn("SharhTamirat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharhTamirat)
            Me.columnMablagh = New Global.System.Data.DataColumn("Mablagh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablagh)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnFactorID.AllowDBNull = false
            Me.columnSharhTamirat.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_TamiratJoziyatRow() As tbl_TamiratJoziyatRow
            Return CType(Me.NewRow,tbl_TamiratJoziyatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_TamiratJoziyatRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_TamiratJoziyatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_TamiratJoziyatRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratJoziyatRowChanged(Me, New tbl_TamiratJoziyatRowChangeEvent(CType(e.Row,tbl_TamiratJoziyatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_TamiratJoziyatRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratJoziyatRowChanging(Me, New tbl_TamiratJoziyatRowChangeEvent(CType(e.Row,tbl_TamiratJoziyatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_TamiratJoziyatRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratJoziyatRowDeleted(Me, New tbl_TamiratJoziyatRowChangeEvent(CType(e.Row,tbl_TamiratJoziyatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_TamiratJoziyatRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_TamiratJoziyatRowDeleting(Me, New tbl_TamiratJoziyatRowChangeEvent(CType(e.Row,tbl_TamiratJoziyatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_TamiratJoziyatRow(ByVal row As tbl_TamiratJoziyatRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_TamiratJoziyatDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SelectYearsDataTable
        Inherits Global.System.Data.TypedTableBase(Of SelectYearsRow)
        
        Private columnYears As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SelectYears"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YearsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYears
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SelectYearsRow
            Get
                Return CType(Me.Rows(index),SelectYearsRow)
            End Get
        End Property
        
        Public Event SelectYearsRowChanging As SelectYearsRowChangeEventHandler
        
        Public Event SelectYearsRowChanged As SelectYearsRowChangeEventHandler
        
        Public Event SelectYearsRowDeleting As SelectYearsRowChangeEventHandler
        
        Public Event SelectYearsRowDeleted As SelectYearsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelectYearsRow(ByVal row As SelectYearsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelectYearsRow(ByVal Years As String) As SelectYearsRow
            Dim rowSelectYearsRow As SelectYearsRow = CType(Me.NewRow,SelectYearsRow)
            Dim columnValuesArray() As Object = New Object() {Years}
            rowSelectYearsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelectYearsRow)
            Return rowSelectYearsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SelectYearsDataTable = CType(MyBase.Clone,SelectYearsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SelectYearsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnYears = MyBase.Columns("Years")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnYears = New Global.System.Data.DataColumn("Years", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYears)
            Me.columnYears.ReadOnly = true
            Me.columnYears.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelectYearsRow() As SelectYearsRow
            Return CType(Me.NewRow,SelectYearsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SelectYearsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SelectYearsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SelectYearsRowChangedEvent) Is Nothing) Then
                RaiseEvent SelectYearsRowChanged(Me, New SelectYearsRowChangeEvent(CType(e.Row,SelectYearsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SelectYearsRowChangingEvent) Is Nothing) Then
                RaiseEvent SelectYearsRowChanging(Me, New SelectYearsRowChangeEvent(CType(e.Row,SelectYearsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SelectYearsRowDeletedEvent) Is Nothing) Then
                RaiseEvent SelectYearsRowDeleted(Me, New SelectYearsRowChangeEvent(CType(e.Row,SelectYearsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SelectYearsRowDeletingEvent) Is Nothing) Then
                RaiseEvent SelectYearsRowDeleting(Me, New SelectYearsRowChangeEvent(CType(e.Row,SelectYearsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelectYearsRow(ByVal row As SelectYearsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SelectYearsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class usp_GetFactorPriceByMonthsDataTable
        Inherits Global.System.Data.TypedTableBase(Of usp_GetFactorPriceByMonthsRow)
        
        Private columnMonths As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "usp_GetFactorPriceByMonths"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As usp_GetFactorPriceByMonthsRow
            Get
                Return CType(Me.Rows(index),usp_GetFactorPriceByMonthsRow)
            End Get
        End Property
        
        Public Event usp_GetFactorPriceByMonthsRowChanging As usp_GetFactorPriceByMonthsRowChangeEventHandler
        
        Public Event usp_GetFactorPriceByMonthsRowChanged As usp_GetFactorPriceByMonthsRowChangeEventHandler
        
        Public Event usp_GetFactorPriceByMonthsRowDeleting As usp_GetFactorPriceByMonthsRowChangeEventHandler
        
        Public Event usp_GetFactorPriceByMonthsRowDeleted As usp_GetFactorPriceByMonthsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addusp_GetFactorPriceByMonthsRow(ByVal row As usp_GetFactorPriceByMonthsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addusp_GetFactorPriceByMonthsRow(ByVal Months As String, ByVal SubTotal As Integer) As usp_GetFactorPriceByMonthsRow
            Dim rowusp_GetFactorPriceByMonthsRow As usp_GetFactorPriceByMonthsRow = CType(Me.NewRow,usp_GetFactorPriceByMonthsRow)
            Dim columnValuesArray() As Object = New Object() {Months, SubTotal}
            rowusp_GetFactorPriceByMonthsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowusp_GetFactorPriceByMonthsRow)
            Return rowusp_GetFactorPriceByMonthsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As usp_GetFactorPriceByMonthsDataTable = CType(MyBase.Clone,usp_GetFactorPriceByMonthsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New usp_GetFactorPriceByMonthsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMonths = MyBase.Columns("Months")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMonths = New Global.System.Data.DataColumn("Months", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonths)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnMonths.ReadOnly = true
            Me.columnMonths.MaxLength = 2
            Me.columnSubTotal.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newusp_GetFactorPriceByMonthsRow() As usp_GetFactorPriceByMonthsRow
            Return CType(Me.NewRow,usp_GetFactorPriceByMonthsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New usp_GetFactorPriceByMonthsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(usp_GetFactorPriceByMonthsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.usp_GetFactorPriceByMonthsRowChangedEvent) Is Nothing) Then
                RaiseEvent usp_GetFactorPriceByMonthsRowChanged(Me, New usp_GetFactorPriceByMonthsRowChangeEvent(CType(e.Row,usp_GetFactorPriceByMonthsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.usp_GetFactorPriceByMonthsRowChangingEvent) Is Nothing) Then
                RaiseEvent usp_GetFactorPriceByMonthsRowChanging(Me, New usp_GetFactorPriceByMonthsRowChangeEvent(CType(e.Row,usp_GetFactorPriceByMonthsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.usp_GetFactorPriceByMonthsRowDeletedEvent) Is Nothing) Then
                RaiseEvent usp_GetFactorPriceByMonthsRowDeleted(Me, New usp_GetFactorPriceByMonthsRowChangeEvent(CType(e.Row,usp_GetFactorPriceByMonthsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.usp_GetFactorPriceByMonthsRowDeletingEvent) Is Nothing) Then
                RaiseEvent usp_GetFactorPriceByMonthsRowDeleting(Me, New usp_GetFactorPriceByMonthsRowChangeEvent(CType(e.Row,usp_GetFactorPriceByMonthsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeusp_GetFactorPriceByMonthsRow(ByVal row As usp_GetFactorPriceByMonthsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "usp_GetFactorPriceByMonthsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_SettingDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_SettingRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSahmRanande As Global.System.Data.DataColumn
        
        Private columnHazineGhaza_Raft As Global.System.Data.DataColumn
        
        Private columnHazineGhaza_Bargasht As Global.System.Data.DataColumn
        
        Private columnMablaghSookht As Global.System.Data.DataColumn
        
        Private columnHaghPayane As Global.System.Data.DataColumn
        
        Private columnKomisionBarname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Setting"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SahmRanandeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSahmRanande
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HazineGhaza_RaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazineGhaza_Raft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HazineGhaza_BargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazineGhaza_Bargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghSookhtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablaghSookht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HaghPayaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaghPayane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KomisionBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKomisionBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_SettingRow
            Get
                Return CType(Me.Rows(index),tbl_SettingRow)
            End Get
        End Property
        
        Public Event tbl_SettingRowChanging As tbl_SettingRowChangeEventHandler
        
        Public Event tbl_SettingRowChanged As tbl_SettingRowChangeEventHandler
        
        Public Event tbl_SettingRowDeleting As tbl_SettingRowChangeEventHandler
        
        Public Event tbl_SettingRowDeleted As tbl_SettingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_SettingRow(ByVal row As tbl_SettingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_SettingRow(ByVal ID As Integer, ByVal SahmRanande As Short, ByVal HazineGhaza_Raft As Short, ByVal HazineGhaza_Bargasht As Short, ByVal MablaghSookht As Integer, ByVal HaghPayane As Short, ByVal KomisionBarname As Short) As tbl_SettingRow
            Dim rowtbl_SettingRow As tbl_SettingRow = CType(Me.NewRow,tbl_SettingRow)
            Dim columnValuesArray() As Object = New Object() {ID, SahmRanande, HazineGhaza_Raft, HazineGhaza_Bargasht, MablaghSookht, HaghPayane, KomisionBarname}
            rowtbl_SettingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_SettingRow)
            Return rowtbl_SettingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByID(ByVal ID As Integer) As tbl_SettingRow
            Return CType(Me.Rows.Find(New Object() {ID}),tbl_SettingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_SettingDataTable = CType(MyBase.Clone,tbl_SettingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_SettingDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSahmRanande = MyBase.Columns("SahmRanande")
            Me.columnHazineGhaza_Raft = MyBase.Columns("HazineGhaza_Raft")
            Me.columnHazineGhaza_Bargasht = MyBase.Columns("HazineGhaza_Bargasht")
            Me.columnMablaghSookht = MyBase.Columns("MablaghSookht")
            Me.columnHaghPayane = MyBase.Columns("HaghPayane")
            Me.columnKomisionBarname = MyBase.Columns("KomisionBarname")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSahmRanande = New Global.System.Data.DataColumn("SahmRanande", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSahmRanande)
            Me.columnHazineGhaza_Raft = New Global.System.Data.DataColumn("HazineGhaza_Raft", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazineGhaza_Raft)
            Me.columnHazineGhaza_Bargasht = New Global.System.Data.DataColumn("HazineGhaza_Bargasht", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazineGhaza_Bargasht)
            Me.columnMablaghSookht = New Global.System.Data.DataColumn("MablaghSookht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablaghSookht)
            Me.columnHaghPayane = New Global.System.Data.DataColumn("HaghPayane", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaghPayane)
            Me.columnKomisionBarname = New Global.System.Data.DataColumn("KomisionBarname", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKomisionBarname)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnSahmRanande.AllowDBNull = false
            Me.columnHazineGhaza_Raft.AllowDBNull = false
            Me.columnHazineGhaza_Bargasht.AllowDBNull = false
            Me.columnMablaghSookht.AllowDBNull = false
            Me.columnHaghPayane.AllowDBNull = false
            Me.columnKomisionBarname.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_SettingRow() As tbl_SettingRow
            Return CType(Me.NewRow,tbl_SettingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_SettingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_SettingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_SettingRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_SettingRowChanged(Me, New tbl_SettingRowChangeEvent(CType(e.Row,tbl_SettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_SettingRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_SettingRowChanging(Me, New tbl_SettingRowChangeEvent(CType(e.Row,tbl_SettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_SettingRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_SettingRowDeleted(Me, New tbl_SettingRowChangeEvent(CType(e.Row,tbl_SettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_SettingRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_SettingRowDeleting(Me, New tbl_SettingRowChangeEvent(CType(e.Row,tbl_SettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_SettingRow(ByVal row As tbl_SettingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_SettingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MashinDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MashinRow)
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnKafiID As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnShasiNumber As Global.System.Data.DataColumn
        
        Private columnMotorNumber As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Mashin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KafiIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKafiID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShasiNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShasiNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MotorNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotorNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MashinRow
            Get
                Return CType(Me.Rows(index),tbl_MashinRow)
            End Get
        End Property
        
        Public Event tbl_MashinRowChanging As tbl_MashinRowChangeEventHandler
        
        Public Event tbl_MashinRowChanged As tbl_MashinRowChangeEventHandler
        
        Public Event tbl_MashinRowDeleting As tbl_MashinRowChangeEventHandler
        
        Public Event tbl_MashinRowDeleted As tbl_MashinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_MashinRow(ByVal row As tbl_MashinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_MashinRow(ByVal MashinID As Integer, ByVal parenttbl_KafiRowByFK_tbl_Mashin_tbl_Kafi As tbl_KafiRow, ByVal Pelak As String, ByVal ShasiNumber As String, ByVal MotorNumber As String) As tbl_MashinRow
            Dim rowtbl_MashinRow As tbl_MashinRow = CType(Me.NewRow,tbl_MashinRow)
            Dim columnValuesArray() As Object = New Object() {MashinID, Nothing, Pelak, ShasiNumber, MotorNumber}
            If (Not (parenttbl_KafiRowByFK_tbl_Mashin_tbl_Kafi) Is Nothing) Then
                columnValuesArray(1) = parenttbl_KafiRowByFK_tbl_Mashin_tbl_Kafi(0)
            End If
            rowtbl_MashinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MashinRow)
            Return rowtbl_MashinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByMashinID(ByVal MashinID As Integer) As tbl_MashinRow
            Return CType(Me.Rows.Find(New Object() {MashinID}),tbl_MashinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MashinDataTable = CType(MyBase.Clone,tbl_MashinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MashinDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnKafiID = MyBase.Columns("KafiID")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnShasiNumber = MyBase.Columns("ShasiNumber")
            Me.columnMotorNumber = MyBase.Columns("MotorNumber")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnKafiID = New Global.System.Data.DataColumn("KafiID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKafiID)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnShasiNumber = New Global.System.Data.DataColumn("ShasiNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShasiNumber)
            Me.columnMotorNumber = New Global.System.Data.DataColumn("MotorNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotorNumber)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMashinID}, true))
            Me.columnMashinID.AllowDBNull = false
            Me.columnMashinID.Unique = true
            Me.columnKafiID.AllowDBNull = false
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 50
            Me.columnShasiNumber.AllowDBNull = false
            Me.columnShasiNumber.MaxLength = 20
            Me.columnMotorNumber.AllowDBNull = false
            Me.columnMotorNumber.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_MashinRow() As tbl_MashinRow
            Return CType(Me.NewRow,tbl_MashinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MashinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MashinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MashinRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRowChanged(Me, New tbl_MashinRowChangeEvent(CType(e.Row,tbl_MashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MashinRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRowChanging(Me, New tbl_MashinRowChangeEvent(CType(e.Row,tbl_MashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MashinRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRowDeleted(Me, New tbl_MashinRowChangeEvent(CType(e.Row,tbl_MashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MashinRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MashinRowDeleting(Me, New tbl_MashinRowChangeEvent(CType(e.Row,tbl_MashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_MashinRow(ByVal row As tbl_MashinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MashinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_KafiDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_KafiRow)
        
        Private columnKafiID As Global.System.Data.DataColumn
        
        Private columnShasiNumber As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Kafi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KafiIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKafiID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShasiNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShasiNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_KafiRow
            Get
                Return CType(Me.Rows(index),tbl_KafiRow)
            End Get
        End Property
        
        Public Event tbl_KafiRowChanging As tbl_KafiRowChangeEventHandler
        
        Public Event tbl_KafiRowChanged As tbl_KafiRowChangeEventHandler
        
        Public Event tbl_KafiRowDeleting As tbl_KafiRowChangeEventHandler
        
        Public Event tbl_KafiRowDeleted As tbl_KafiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_KafiRow(ByVal row As tbl_KafiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_KafiRow(ByVal KafiID As Integer, ByVal ShasiNumber As String, ByVal Pelak As String) As tbl_KafiRow
            Dim rowtbl_KafiRow As tbl_KafiRow = CType(Me.NewRow,tbl_KafiRow)
            Dim columnValuesArray() As Object = New Object() {KafiID, ShasiNumber, Pelak}
            rowtbl_KafiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_KafiRow)
            Return rowtbl_KafiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByKafiID(ByVal KafiID As Integer) As tbl_KafiRow
            Return CType(Me.Rows.Find(New Object() {KafiID}),tbl_KafiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_KafiDataTable = CType(MyBase.Clone,tbl_KafiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_KafiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnKafiID = MyBase.Columns("KafiID")
            Me.columnShasiNumber = MyBase.Columns("ShasiNumber")
            Me.columnPelak = MyBase.Columns("Pelak")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnKafiID = New Global.System.Data.DataColumn("KafiID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKafiID)
            Me.columnShasiNumber = New Global.System.Data.DataColumn("ShasiNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShasiNumber)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKafiID}, true))
            Me.columnKafiID.AllowDBNull = false
            Me.columnKafiID.Unique = true
            Me.columnShasiNumber.AllowDBNull = false
            Me.columnShasiNumber.MaxLength = 20
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_KafiRow() As tbl_KafiRow
            Return CType(Me.NewRow,tbl_KafiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_KafiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_KafiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_KafiRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_KafiRowChanged(Me, New tbl_KafiRowChangeEvent(CType(e.Row,tbl_KafiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_KafiRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_KafiRowChanging(Me, New tbl_KafiRowChangeEvent(CType(e.Row,tbl_KafiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_KafiRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_KafiRowDeleted(Me, New tbl_KafiRowChangeEvent(CType(e.Row,tbl_KafiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_KafiRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_KafiRowDeleting(Me, New tbl_KafiRowChangeEvent(CType(e.Row,tbl_KafiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_KafiRow(ByVal row As tbl_KafiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_KafiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_RanandeganDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_RanandeganRow)
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnfname As Global.System.Data.DataColumn
        
        Private columnlname As Global.System.Data.DataColumn
        
        Private columnCodeMelli As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnTelNumbers As Global.System.Data.DataColumn
        
        Private columnPicture As Global.System.Data.DataColumn
        
        Private columnKartHooshmandNo As Global.System.Data.DataColumn
        
        Private columnKH_StartDate As Global.System.Data.DataColumn
        
        Private columnKH_EndDate As Global.System.Data.DataColumn
        
        Private columnKartSalamatNo As Global.System.Data.DataColumn
        
        Private columnKS_StartDate As Global.System.Data.DataColumn
        
        Private columnKS_EndDate As Global.System.Data.DataColumn
        
        Private columnKartGovahinameNo As Global.System.Data.DataColumn
        
        Private columnKG_StartDate As Global.System.Data.DataColumn
        
        Private columnKG_EndDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Ranandegan"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeMelliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodeMelli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TelNumbersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelNumbers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PictureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicture
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KartHooshmandNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKartHooshmandNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KH_StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKH_StartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KH_EndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKH_EndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KartSalamatNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKartSalamatNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KS_StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKS_StartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KS_EndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKS_EndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KartGovahinameNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKartGovahinameNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KG_StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKG_StartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KG_EndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKG_EndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_RanandeganRow
            Get
                Return CType(Me.Rows(index),tbl_RanandeganRow)
            End Get
        End Property
        
        Public Event tbl_RanandeganRowChanging As tbl_RanandeganRowChangeEventHandler
        
        Public Event tbl_RanandeganRowChanged As tbl_RanandeganRowChangeEventHandler
        
        Public Event tbl_RanandeganRowDeleting As tbl_RanandeganRowChangeEventHandler
        
        Public Event tbl_RanandeganRowDeleted As tbl_RanandeganRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_RanandeganRow(ByVal row As tbl_RanandeganRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_RanandeganRow( _
                    ByVal RanandePersonalCode As String,  _
                    ByVal fname As String,  _
                    ByVal lname As String,  _
                    ByVal CodeMelli As String,  _
                    ByVal Address As String,  _
                    ByVal TelNumbers As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal KartHooshmandNo As String,  _
                    ByVal KH_StartDate As String,  _
                    ByVal KH_EndDate As String,  _
                    ByVal KartSalamatNo As String,  _
                    ByVal KS_StartDate As String,  _
                    ByVal KS_EndDate As String,  _
                    ByVal KartGovahinameNo As String,  _
                    ByVal KG_StartDate As String,  _
                    ByVal KG_EndDate As String) As tbl_RanandeganRow
            Dim rowtbl_RanandeganRow As tbl_RanandeganRow = CType(Me.NewRow,tbl_RanandeganRow)
            Dim columnValuesArray() As Object = New Object() {RanandePersonalCode, fname, lname, CodeMelli, Address, TelNumbers, Picture, KartHooshmandNo, KH_StartDate, KH_EndDate, KartSalamatNo, KS_StartDate, KS_EndDate, KartGovahinameNo, KG_StartDate, KG_EndDate}
            rowtbl_RanandeganRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_RanandeganRow)
            Return rowtbl_RanandeganRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByRanandePersonalCode(ByVal RanandePersonalCode As String) As tbl_RanandeganRow
            Return CType(Me.Rows.Find(New Object() {RanandePersonalCode}),tbl_RanandeganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_RanandeganDataTable = CType(MyBase.Clone,tbl_RanandeganDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_RanandeganDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnfname = MyBase.Columns("fname")
            Me.columnlname = MyBase.Columns("lname")
            Me.columnCodeMelli = MyBase.Columns("CodeMelli")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnTelNumbers = MyBase.Columns("TelNumbers")
            Me.columnPicture = MyBase.Columns("Picture")
            Me.columnKartHooshmandNo = MyBase.Columns("KartHooshmandNo")
            Me.columnKH_StartDate = MyBase.Columns("KH_StartDate")
            Me.columnKH_EndDate = MyBase.Columns("KH_EndDate")
            Me.columnKartSalamatNo = MyBase.Columns("KartSalamatNo")
            Me.columnKS_StartDate = MyBase.Columns("KS_StartDate")
            Me.columnKS_EndDate = MyBase.Columns("KS_EndDate")
            Me.columnKartGovahinameNo = MyBase.Columns("KartGovahinameNo")
            Me.columnKG_StartDate = MyBase.Columns("KG_StartDate")
            Me.columnKG_EndDate = MyBase.Columns("KG_EndDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnfname = New Global.System.Data.DataColumn("fname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfname)
            Me.columnlname = New Global.System.Data.DataColumn("lname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlname)
            Me.columnCodeMelli = New Global.System.Data.DataColumn("CodeMelli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodeMelli)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnTelNumbers = New Global.System.Data.DataColumn("TelNumbers", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelNumbers)
            Me.columnPicture = New Global.System.Data.DataColumn("Picture", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicture)
            Me.columnKartHooshmandNo = New Global.System.Data.DataColumn("KartHooshmandNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKartHooshmandNo)
            Me.columnKH_StartDate = New Global.System.Data.DataColumn("KH_StartDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKH_StartDate)
            Me.columnKH_EndDate = New Global.System.Data.DataColumn("KH_EndDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKH_EndDate)
            Me.columnKartSalamatNo = New Global.System.Data.DataColumn("KartSalamatNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKartSalamatNo)
            Me.columnKS_StartDate = New Global.System.Data.DataColumn("KS_StartDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKS_StartDate)
            Me.columnKS_EndDate = New Global.System.Data.DataColumn("KS_EndDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKS_EndDate)
            Me.columnKartGovahinameNo = New Global.System.Data.DataColumn("KartGovahinameNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKartGovahinameNo)
            Me.columnKG_StartDate = New Global.System.Data.DataColumn("KG_StartDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKG_StartDate)
            Me.columnKG_EndDate = New Global.System.Data.DataColumn("KG_EndDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKG_EndDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRanandePersonalCode}, true))
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.Unique = true
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnfname.AllowDBNull = false
            Me.columnfname.MaxLength = 25
            Me.columnlname.AllowDBNull = false
            Me.columnlname.MaxLength = 35
            Me.columnCodeMelli.MaxLength = 10
            Me.columnAddress.AllowDBNull = false
            Me.columnAddress.MaxLength = 255
            Me.columnTelNumbers.AllowDBNull = false
            Me.columnTelNumbers.MaxLength = 100
            Me.columnKartHooshmandNo.MaxLength = 10
            Me.columnKH_StartDate.MaxLength = 10
            Me.columnKH_EndDate.MaxLength = 10
            Me.columnKartSalamatNo.MaxLength = 10
            Me.columnKS_StartDate.MaxLength = 10
            Me.columnKS_EndDate.MaxLength = 10
            Me.columnKartGovahinameNo.MaxLength = 10
            Me.columnKG_StartDate.MaxLength = 10
            Me.columnKG_EndDate.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_RanandeganRow() As tbl_RanandeganRow
            Return CType(Me.NewRow,tbl_RanandeganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_RanandeganRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_RanandeganRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_RanandeganRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_RanandeganRowChanged(Me, New tbl_RanandeganRowChangeEvent(CType(e.Row,tbl_RanandeganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_RanandeganRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_RanandeganRowChanging(Me, New tbl_RanandeganRowChangeEvent(CType(e.Row,tbl_RanandeganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_RanandeganRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_RanandeganRowDeleted(Me, New tbl_RanandeganRowChangeEvent(CType(e.Row,tbl_RanandeganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_RanandeganRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_RanandeganRowDeleting(Me, New tbl_RanandeganRowChangeEvent(CType(e.Row,tbl_RanandeganRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_RanandeganRow(ByVal row As tbl_RanandeganRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_RanandeganDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vSelectRanandeganMashinDataTable
        Inherits Global.System.Data.TypedTableBase(Of vSelectRanandeganMashinRow)
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnFullname As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnTelNumbers As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vSelectRanandeganMashin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TelNumbersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelNumbers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vSelectRanandeganMashinRow
            Get
                Return CType(Me.Rows(index),vSelectRanandeganMashinRow)
            End Get
        End Property
        
        Public Event vSelectRanandeganMashinRowChanging As vSelectRanandeganMashinRowChangeEventHandler
        
        Public Event vSelectRanandeganMashinRowChanged As vSelectRanandeganMashinRowChangeEventHandler
        
        Public Event vSelectRanandeganMashinRowDeleting As vSelectRanandeganMashinRowChangeEventHandler
        
        Public Event vSelectRanandeganMashinRowDeleted As vSelectRanandeganMashinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvSelectRanandeganMashinRow(ByVal row As vSelectRanandeganMashinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvSelectRanandeganMashinRow(ByVal RanandePersonalCode As String, ByVal Fullname As String, ByVal Address As String, ByVal TelNumbers As String, ByVal MashinID As Integer) As vSelectRanandeganMashinRow
            Dim rowvSelectRanandeganMashinRow As vSelectRanandeganMashinRow = CType(Me.NewRow,vSelectRanandeganMashinRow)
            Dim columnValuesArray() As Object = New Object() {RanandePersonalCode, Fullname, Address, TelNumbers, MashinID}
            rowvSelectRanandeganMashinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvSelectRanandeganMashinRow)
            Return rowvSelectRanandeganMashinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vSelectRanandeganMashinDataTable = CType(MyBase.Clone,vSelectRanandeganMashinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vSelectRanandeganMashinDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnTelNumbers = MyBase.Columns("TelNumbers")
            Me.columnMashinID = MyBase.Columns("MashinID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnTelNumbers = New Global.System.Data.DataColumn("TelNumbers", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelNumbers)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnFullname.AllowDBNull = false
            Me.columnFullname.MaxLength = 61
            Me.columnAddress.AllowDBNull = false
            Me.columnAddress.MaxLength = 255
            Me.columnTelNumbers.AllowDBNull = false
            Me.columnTelNumbers.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvSelectRanandeganMashinRow() As vSelectRanandeganMashinRow
            Return CType(Me.NewRow,vSelectRanandeganMashinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vSelectRanandeganMashinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vSelectRanandeganMashinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vSelectRanandeganMashinRowChangedEvent) Is Nothing) Then
                RaiseEvent vSelectRanandeganMashinRowChanged(Me, New vSelectRanandeganMashinRowChangeEvent(CType(e.Row,vSelectRanandeganMashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vSelectRanandeganMashinRowChangingEvent) Is Nothing) Then
                RaiseEvent vSelectRanandeganMashinRowChanging(Me, New vSelectRanandeganMashinRowChangeEvent(CType(e.Row,vSelectRanandeganMashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vSelectRanandeganMashinRowDeletedEvent) Is Nothing) Then
                RaiseEvent vSelectRanandeganMashinRowDeleted(Me, New vSelectRanandeganMashinRowChangeEvent(CType(e.Row,vSelectRanandeganMashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vSelectRanandeganMashinRowDeletingEvent) Is Nothing) Then
                RaiseEvent vSelectRanandeganMashinRowDeleting(Me, New vSelectRanandeganMashinRowChangeEvent(CType(e.Row,vSelectRanandeganMashinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevSelectRanandeganMashinRow(ByVal row As vSelectRanandeganMashinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vSelectRanandeganMashinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_NavganStatusDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_NavganStatusRow)
        
        Private columnidxRow As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnVaziyatSafar As Global.System.Data.DataColumn
        
        Private columnVaziyatBazgasht As Global.System.Data.DataColumn
        
        Private columnVaziyatTamirgah As Global.System.Data.DataColumn
        
        Private columnVaziyatRanandeh As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_NavganStatus"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idxRowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidxRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatSafarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatSafar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatBazgashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatBazgasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatTamirgahColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatTamirgah
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatRanandehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatRanandeh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_NavganStatusRow
            Get
                Return CType(Me.Rows(index),tbl_NavganStatusRow)
            End Get
        End Property
        
        Public Event tbl_NavganStatusRowChanging As tbl_NavganStatusRowChangeEventHandler
        
        Public Event tbl_NavganStatusRowChanged As tbl_NavganStatusRowChangeEventHandler
        
        Public Event tbl_NavganStatusRowDeleting As tbl_NavganStatusRowChangeEventHandler
        
        Public Event tbl_NavganStatusRowDeleted As tbl_NavganStatusRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_NavganStatusRow(ByVal row As tbl_NavganStatusRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_NavganStatusRow(ByVal parenttbl_RanandeganRowByFK_tbl_NavganStatus_tbl_Ranandegan As tbl_RanandeganRow, ByVal pDate As String, ByVal VaziyatSafar As Byte, ByVal VaziyatBazgasht As Byte, ByVal VaziyatTamirgah As Byte, ByVal VaziyatRanandeh As Byte, ByVal Description As String) As tbl_NavganStatusRow
            Dim rowtbl_NavganStatusRow As tbl_NavganStatusRow = CType(Me.NewRow,tbl_NavganStatusRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, pDate, VaziyatSafar, VaziyatBazgasht, VaziyatTamirgah, VaziyatRanandeh, Description}
            If (Not (parenttbl_RanandeganRowByFK_tbl_NavganStatus_tbl_Ranandegan) Is Nothing) Then
                columnValuesArray(1) = parenttbl_RanandeganRowByFK_tbl_NavganStatus_tbl_Ranandegan(0)
            End If
            rowtbl_NavganStatusRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_NavganStatusRow)
            Return rowtbl_NavganStatusRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByidxRowRanandePersonalCodepDate(ByVal idxRow As Integer, ByVal RanandePersonalCode As String, ByVal pDate As String) As tbl_NavganStatusRow
            Return CType(Me.Rows.Find(New Object() {idxRow, RanandePersonalCode, pDate}),tbl_NavganStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_NavganStatusDataTable = CType(MyBase.Clone,tbl_NavganStatusDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_NavganStatusDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnidxRow = MyBase.Columns("idxRow")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnVaziyatSafar = MyBase.Columns("VaziyatSafar")
            Me.columnVaziyatBazgasht = MyBase.Columns("VaziyatBazgasht")
            Me.columnVaziyatTamirgah = MyBase.Columns("VaziyatTamirgah")
            Me.columnVaziyatRanandeh = MyBase.Columns("VaziyatRanandeh")
            Me.columnDescription = MyBase.Columns("Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnidxRow = New Global.System.Data.DataColumn("idxRow", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidxRow)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnVaziyatSafar = New Global.System.Data.DataColumn("VaziyatSafar", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatSafar)
            Me.columnVaziyatBazgasht = New Global.System.Data.DataColumn("VaziyatBazgasht", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatBazgasht)
            Me.columnVaziyatTamirgah = New Global.System.Data.DataColumn("VaziyatTamirgah", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatTamirgah)
            Me.columnVaziyatRanandeh = New Global.System.Data.DataColumn("VaziyatRanandeh", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatRanandeh)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidxRow, Me.columnRanandePersonalCode, Me.columnpDate}, true))
            Me.columnidxRow.AutoIncrement = true
            Me.columnidxRow.AutoIncrementSeed = -1
            Me.columnidxRow.AutoIncrementStep = -1
            Me.columnidxRow.AllowDBNull = false
            Me.columnidxRow.ReadOnly = true
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnpDate.AllowDBNull = false
            Me.columnpDate.MaxLength = 10
            Me.columnDescription.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_NavganStatusRow() As tbl_NavganStatusRow
            Return CType(Me.NewRow,tbl_NavganStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_NavganStatusRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_NavganStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_NavganStatusRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_NavganStatusRowChanged(Me, New tbl_NavganStatusRowChangeEvent(CType(e.Row,tbl_NavganStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_NavganStatusRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_NavganStatusRowChanging(Me, New tbl_NavganStatusRowChangeEvent(CType(e.Row,tbl_NavganStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_NavganStatusRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_NavganStatusRowDeleted(Me, New tbl_NavganStatusRowChangeEvent(CType(e.Row,tbl_NavganStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_NavganStatusRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_NavganStatusRowDeleting(Me, New tbl_NavganStatusRowChangeEvent(CType(e.Row,tbl_NavganStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_NavganStatusRow(ByVal row As tbl_NavganStatusRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_NavganStatusDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class usp_KarkardeRoozane4PrintDataTable
        Inherits Global.System.Data.TypedTableBase(Of usp_KarkardeRoozane4PrintRow)
        
        Private columnOperationCode As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnRanandeFullName As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnNameMabda As Global.System.Data.DataColumn
        
        Private columnNameMaghsad As Global.System.Data.DataColumn
        
        Private columnNoeBar As Global.System.Data.DataColumn
        
        Private columnSaatKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnSaatVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnDarRahRaft As Global.System.Data.DataColumn
        
        Private columnDarRahBargasht As Global.System.Data.DataColumn
        
        Private columnKarDakheli As Global.System.Data.DataColumn
        
        Private columnKhali As Global.System.Data.DataColumn
        
        Private columnPor As Global.System.Data.DataColumn
        
        Private columnSayer As Global.System.Data.DataColumn
        
        Private columnTamirRena As Global.System.Data.DataColumn
        
        Private columnTamirMotefareghe As Global.System.Data.DataColumn
        
        Private columnTamirKharkhane As Global.System.Data.DataColumn
        
        Private columnMorkhasi As Global.System.Data.DataColumn
        
        Private columnGheybat As Global.System.Data.DataColumn
        
        Private columnEsterahat As Global.System.Data.DataColumn
        
        Private columnTasadof As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "usp_KarkardeRoozane4Print"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandeFullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandeFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMabdaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMabda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMaghsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMaghsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoeBarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoeBar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DarRahRaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarRahRaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DarRahBargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarRahBargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KarDakheliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKarDakheli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KhaliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKhali
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SayerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSayer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TamirRenaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTamirRena
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TamirMotefaregheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTamirMotefareghe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TamirKharkhaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTamirKharkhane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MorkhasiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMorkhasi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GheybatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGheybat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EsterahatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEsterahat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TasadofColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTasadof
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As usp_KarkardeRoozane4PrintRow
            Get
                Return CType(Me.Rows(index),usp_KarkardeRoozane4PrintRow)
            End Get
        End Property
        
        Public Event usp_KarkardeRoozane4PrintRowChanging As usp_KarkardeRoozane4PrintRowChangeEventHandler
        
        Public Event usp_KarkardeRoozane4PrintRowChanged As usp_KarkardeRoozane4PrintRowChangeEventHandler
        
        Public Event usp_KarkardeRoozane4PrintRowDeleting As usp_KarkardeRoozane4PrintRowChangeEventHandler
        
        Public Event usp_KarkardeRoozane4PrintRowDeleted As usp_KarkardeRoozane4PrintRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addusp_KarkardeRoozane4PrintRow(ByVal row As usp_KarkardeRoozane4PrintRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addusp_KarkardeRoozane4PrintRow( _
                    ByVal OperationCode As Integer,  _
                    ByVal RanandePersonalCode As String,  _
                    ByVal RanandeFullName As String,  _
                    ByVal Pelak As String,  _
                    ByVal NameMabda As String,  _
                    ByVal NameMaghsad As String,  _
                    ByVal NoeBar As String,  _
                    ByVal SaatKhoroojMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal pDate As String,  _
                    ByVal DarRahRaft As Integer,  _
                    ByVal DarRahBargasht As Integer,  _
                    ByVal KarDakheli As Integer,  _
                    ByVal Khali As Integer,  _
                    ByVal Por As Integer,  _
                    ByVal Sayer As Integer,  _
                    ByVal TamirRena As Integer,  _
                    ByVal TamirMotefareghe As Integer,  _
                    ByVal TamirKharkhane As Integer,  _
                    ByVal Morkhasi As Integer,  _
                    ByVal Gheybat As Integer,  _
                    ByVal Esterahat As Integer,  _
                    ByVal Tasadof As Integer,  _
                    ByVal Description As String) As usp_KarkardeRoozane4PrintRow
            Dim rowusp_KarkardeRoozane4PrintRow As usp_KarkardeRoozane4PrintRow = CType(Me.NewRow,usp_KarkardeRoozane4PrintRow)
            Dim columnValuesArray() As Object = New Object() {OperationCode, RanandePersonalCode, RanandeFullName, Pelak, NameMabda, NameMaghsad, NoeBar, SaatKhoroojMojtame, SaatVoroodMojtame, pDate, DarRahRaft, DarRahBargasht, KarDakheli, Khali, Por, Sayer, TamirRena, TamirMotefareghe, TamirKharkhane, Morkhasi, Gheybat, Esterahat, Tasadof, Description}
            rowusp_KarkardeRoozane4PrintRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowusp_KarkardeRoozane4PrintRow)
            Return rowusp_KarkardeRoozane4PrintRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As usp_KarkardeRoozane4PrintDataTable = CType(MyBase.Clone,usp_KarkardeRoozane4PrintDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New usp_KarkardeRoozane4PrintDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOperationCode = MyBase.Columns("OperationCode")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnRanandeFullName = MyBase.Columns("RanandeFullName")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnNameMabda = MyBase.Columns("NameMabda")
            Me.columnNameMaghsad = MyBase.Columns("NameMaghsad")
            Me.columnNoeBar = MyBase.Columns("NoeBar")
            Me.columnSaatKhoroojMojtame = MyBase.Columns("SaatKhoroojMojtame")
            Me.columnSaatVoroodMojtame = MyBase.Columns("SaatVoroodMojtame")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnDarRahRaft = MyBase.Columns("DarRahRaft")
            Me.columnDarRahBargasht = MyBase.Columns("DarRahBargasht")
            Me.columnKarDakheli = MyBase.Columns("KarDakheli")
            Me.columnKhali = MyBase.Columns("Khali")
            Me.columnPor = MyBase.Columns("Por")
            Me.columnSayer = MyBase.Columns("Sayer")
            Me.columnTamirRena = MyBase.Columns("TamirRena")
            Me.columnTamirMotefareghe = MyBase.Columns("TamirMotefareghe")
            Me.columnTamirKharkhane = MyBase.Columns("TamirKharkhane")
            Me.columnMorkhasi = MyBase.Columns("Morkhasi")
            Me.columnGheybat = MyBase.Columns("Gheybat")
            Me.columnEsterahat = MyBase.Columns("Esterahat")
            Me.columnTasadof = MyBase.Columns("Tasadof")
            Me.columnDescription = MyBase.Columns("Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOperationCode = New Global.System.Data.DataColumn("OperationCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationCode)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnRanandeFullName = New Global.System.Data.DataColumn("RanandeFullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandeFullName)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnNameMabda = New Global.System.Data.DataColumn("NameMabda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMabda)
            Me.columnNameMaghsad = New Global.System.Data.DataColumn("NameMaghsad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMaghsad)
            Me.columnNoeBar = New Global.System.Data.DataColumn("NoeBar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoeBar)
            Me.columnSaatKhoroojMojtame = New Global.System.Data.DataColumn("SaatKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatKhoroojMojtame)
            Me.columnSaatVoroodMojtame = New Global.System.Data.DataColumn("SaatVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatVoroodMojtame)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnDarRahRaft = New Global.System.Data.DataColumn("DarRahRaft", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarRahRaft)
            Me.columnDarRahBargasht = New Global.System.Data.DataColumn("DarRahBargasht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarRahBargasht)
            Me.columnKarDakheli = New Global.System.Data.DataColumn("KarDakheli", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKarDakheli)
            Me.columnKhali = New Global.System.Data.DataColumn("Khali", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKhali)
            Me.columnPor = New Global.System.Data.DataColumn("Por", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPor)
            Me.columnSayer = New Global.System.Data.DataColumn("Sayer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSayer)
            Me.columnTamirRena = New Global.System.Data.DataColumn("TamirRena", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTamirRena)
            Me.columnTamirMotefareghe = New Global.System.Data.DataColumn("TamirMotefareghe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTamirMotefareghe)
            Me.columnTamirKharkhane = New Global.System.Data.DataColumn("TamirKharkhane", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTamirKharkhane)
            Me.columnMorkhasi = New Global.System.Data.DataColumn("Morkhasi", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMorkhasi)
            Me.columnGheybat = New Global.System.Data.DataColumn("Gheybat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGheybat)
            Me.columnEsterahat = New Global.System.Data.DataColumn("Esterahat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEsterahat)
            Me.columnTasadof = New Global.System.Data.DataColumn("Tasadof", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTasadof)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnOperationCode.ReadOnly = true
            Me.columnRanandePersonalCode.ReadOnly = true
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnRanandeFullName.ReadOnly = true
            Me.columnRanandeFullName.MaxLength = 61
            Me.columnPelak.ReadOnly = true
            Me.columnPelak.MaxLength = 50
            Me.columnNameMabda.ReadOnly = true
            Me.columnNameMabda.MaxLength = 50
            Me.columnNameMaghsad.ReadOnly = true
            Me.columnNameMaghsad.MaxLength = 50
            Me.columnNoeBar.ReadOnly = true
            Me.columnNoeBar.MaxLength = 255
            Me.columnSaatKhoroojMojtame.ReadOnly = true
            Me.columnSaatKhoroojMojtame.MaxLength = 5
            Me.columnSaatVoroodMojtame.ReadOnly = true
            Me.columnSaatVoroodMojtame.MaxLength = 5
            Me.columnpDate.ReadOnly = true
            Me.columnpDate.MaxLength = 10
            Me.columnDarRahRaft.ReadOnly = true
            Me.columnDarRahBargasht.ReadOnly = true
            Me.columnKarDakheli.ReadOnly = true
            Me.columnKhali.ReadOnly = true
            Me.columnPor.ReadOnly = true
            Me.columnSayer.ReadOnly = true
            Me.columnTamirRena.ReadOnly = true
            Me.columnTamirMotefareghe.ReadOnly = true
            Me.columnTamirKharkhane.ReadOnly = true
            Me.columnMorkhasi.ReadOnly = true
            Me.columnGheybat.ReadOnly = true
            Me.columnEsterahat.ReadOnly = true
            Me.columnTasadof.ReadOnly = true
            Me.columnDescription.ReadOnly = true
            Me.columnDescription.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newusp_KarkardeRoozane4PrintRow() As usp_KarkardeRoozane4PrintRow
            Return CType(Me.NewRow,usp_KarkardeRoozane4PrintRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New usp_KarkardeRoozane4PrintRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(usp_KarkardeRoozane4PrintRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.usp_KarkardeRoozane4PrintRowChangedEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4PrintRowChanged(Me, New usp_KarkardeRoozane4PrintRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4PrintRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.usp_KarkardeRoozane4PrintRowChangingEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4PrintRowChanging(Me, New usp_KarkardeRoozane4PrintRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4PrintRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.usp_KarkardeRoozane4PrintRowDeletedEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4PrintRowDeleted(Me, New usp_KarkardeRoozane4PrintRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4PrintRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.usp_KarkardeRoozane4PrintRowDeletingEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4PrintRowDeleting(Me, New usp_KarkardeRoozane4PrintRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4PrintRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeusp_KarkardeRoozane4PrintRow(ByVal row As usp_KarkardeRoozane4PrintRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "usp_KarkardeRoozane4PrintDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class usp_KarkardeRoozane4ShowDataTable
        Inherits Global.System.Data.TypedTableBase(Of usp_KarkardeRoozane4ShowRow)
        
        Private columnOperationCode As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnRanandeFullName As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnNameMabda As Global.System.Data.DataColumn
        
        Private columnNameMaghsad As Global.System.Data.DataColumn
        
        Private columnNoeBar As Global.System.Data.DataColumn
        
        Private columnSaatKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnSaatVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnVaziyatSafar As Global.System.Data.DataColumn
        
        Private columnVaziyatBazgasht As Global.System.Data.DataColumn
        
        Private columnVaziyatTamirgah As Global.System.Data.DataColumn
        
        Private columnVaziyatRanandeh As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "usp_KarkardeRoozane4Show"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandeFullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandeFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMabdaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMabda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMaghsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMaghsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoeBarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoeBar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaatVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaatVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatSafarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatSafar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatBazgashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatBazgasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatTamirgahColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatTamirgah
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VaziyatRanandehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyatRanandeh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As usp_KarkardeRoozane4ShowRow
            Get
                Return CType(Me.Rows(index),usp_KarkardeRoozane4ShowRow)
            End Get
        End Property
        
        Public Event usp_KarkardeRoozane4ShowRowChanging As usp_KarkardeRoozane4ShowRowChangeEventHandler
        
        Public Event usp_KarkardeRoozane4ShowRowChanged As usp_KarkardeRoozane4ShowRowChangeEventHandler
        
        Public Event usp_KarkardeRoozane4ShowRowDeleting As usp_KarkardeRoozane4ShowRowChangeEventHandler
        
        Public Event usp_KarkardeRoozane4ShowRowDeleted As usp_KarkardeRoozane4ShowRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addusp_KarkardeRoozane4ShowRow(ByVal row As usp_KarkardeRoozane4ShowRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addusp_KarkardeRoozane4ShowRow(ByVal OperationCode As Integer, ByVal RanandePersonalCode As String, ByVal RanandeFullName As String, ByVal Pelak As String, ByVal NameMabda As String, ByVal NameMaghsad As String, ByVal NoeBar As String, ByVal SaatKhoroojMojtame As String, ByVal SaatVoroodMojtame As String, ByVal pDate As String, ByVal VaziyatSafar As String, ByVal VaziyatBazgasht As String, ByVal VaziyatTamirgah As String, ByVal VaziyatRanandeh As String, ByVal Description As String) As usp_KarkardeRoozane4ShowRow
            Dim rowusp_KarkardeRoozane4ShowRow As usp_KarkardeRoozane4ShowRow = CType(Me.NewRow,usp_KarkardeRoozane4ShowRow)
            Dim columnValuesArray() As Object = New Object() {OperationCode, RanandePersonalCode, RanandeFullName, Pelak, NameMabda, NameMaghsad, NoeBar, SaatKhoroojMojtame, SaatVoroodMojtame, pDate, VaziyatSafar, VaziyatBazgasht, VaziyatTamirgah, VaziyatRanandeh, Description}
            rowusp_KarkardeRoozane4ShowRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowusp_KarkardeRoozane4ShowRow)
            Return rowusp_KarkardeRoozane4ShowRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As usp_KarkardeRoozane4ShowDataTable = CType(MyBase.Clone,usp_KarkardeRoozane4ShowDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New usp_KarkardeRoozane4ShowDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOperationCode = MyBase.Columns("OperationCode")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnRanandeFullName = MyBase.Columns("RanandeFullName")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnNameMabda = MyBase.Columns("NameMabda")
            Me.columnNameMaghsad = MyBase.Columns("NameMaghsad")
            Me.columnNoeBar = MyBase.Columns("NoeBar")
            Me.columnSaatKhoroojMojtame = MyBase.Columns("SaatKhoroojMojtame")
            Me.columnSaatVoroodMojtame = MyBase.Columns("SaatVoroodMojtame")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnVaziyatSafar = MyBase.Columns("VaziyatSafar")
            Me.columnVaziyatBazgasht = MyBase.Columns("VaziyatBazgasht")
            Me.columnVaziyatTamirgah = MyBase.Columns("VaziyatTamirgah")
            Me.columnVaziyatRanandeh = MyBase.Columns("VaziyatRanandeh")
            Me.columnDescription = MyBase.Columns("Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOperationCode = New Global.System.Data.DataColumn("OperationCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationCode)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnRanandeFullName = New Global.System.Data.DataColumn("RanandeFullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandeFullName)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnNameMabda = New Global.System.Data.DataColumn("NameMabda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMabda)
            Me.columnNameMaghsad = New Global.System.Data.DataColumn("NameMaghsad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMaghsad)
            Me.columnNoeBar = New Global.System.Data.DataColumn("NoeBar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoeBar)
            Me.columnSaatKhoroojMojtame = New Global.System.Data.DataColumn("SaatKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatKhoroojMojtame)
            Me.columnSaatVoroodMojtame = New Global.System.Data.DataColumn("SaatVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaatVoroodMojtame)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnVaziyatSafar = New Global.System.Data.DataColumn("VaziyatSafar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatSafar)
            Me.columnVaziyatBazgasht = New Global.System.Data.DataColumn("VaziyatBazgasht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatBazgasht)
            Me.columnVaziyatTamirgah = New Global.System.Data.DataColumn("VaziyatTamirgah", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatTamirgah)
            Me.columnVaziyatRanandeh = New Global.System.Data.DataColumn("VaziyatRanandeh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyatRanandeh)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnOperationCode.ReadOnly = true
            Me.columnRanandePersonalCode.ReadOnly = true
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnRanandeFullName.ReadOnly = true
            Me.columnRanandeFullName.MaxLength = 61
            Me.columnPelak.ReadOnly = true
            Me.columnPelak.MaxLength = 50
            Me.columnNameMabda.ReadOnly = true
            Me.columnNameMabda.MaxLength = 50
            Me.columnNameMaghsad.ReadOnly = true
            Me.columnNameMaghsad.MaxLength = 50
            Me.columnNoeBar.ReadOnly = true
            Me.columnNoeBar.MaxLength = 255
            Me.columnSaatKhoroojMojtame.ReadOnly = true
            Me.columnSaatKhoroojMojtame.MaxLength = 5
            Me.columnSaatVoroodMojtame.ReadOnly = true
            Me.columnSaatVoroodMojtame.MaxLength = 5
            Me.columnpDate.ReadOnly = true
            Me.columnpDate.MaxLength = 10
            Me.columnVaziyatSafar.ReadOnly = true
            Me.columnVaziyatSafar.MaxLength = 13
            Me.columnVaziyatBazgasht.ReadOnly = true
            Me.columnVaziyatBazgasht.MaxLength = 4
            Me.columnVaziyatTamirgah.ReadOnly = true
            Me.columnVaziyatTamirgah.MaxLength = 25
            Me.columnVaziyatRanandeh.ReadOnly = true
            Me.columnVaziyatRanandeh.MaxLength = 7
            Me.columnDescription.ReadOnly = true
            Me.columnDescription.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newusp_KarkardeRoozane4ShowRow() As usp_KarkardeRoozane4ShowRow
            Return CType(Me.NewRow,usp_KarkardeRoozane4ShowRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New usp_KarkardeRoozane4ShowRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(usp_KarkardeRoozane4ShowRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.usp_KarkardeRoozane4ShowRowChangedEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4ShowRowChanged(Me, New usp_KarkardeRoozane4ShowRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4ShowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.usp_KarkardeRoozane4ShowRowChangingEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4ShowRowChanging(Me, New usp_KarkardeRoozane4ShowRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4ShowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.usp_KarkardeRoozane4ShowRowDeletedEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4ShowRowDeleted(Me, New usp_KarkardeRoozane4ShowRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4ShowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.usp_KarkardeRoozane4ShowRowDeletingEvent) Is Nothing) Then
                RaiseEvent usp_KarkardeRoozane4ShowRowDeleting(Me, New usp_KarkardeRoozane4ShowRowChangeEvent(CType(e.Row,usp_KarkardeRoozane4ShowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeusp_KarkardeRoozane4ShowRow(ByVal row As usp_KarkardeRoozane4ShowRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "usp_KarkardeRoozane4ShowDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_SanadDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_SanadRow)
        
        Private columnOperationCode As Global.System.Data.DataColumn
        
        Private columnOrderID As Global.System.Data.DataColumn
        
        Private columnShomareBarname As Global.System.Data.DataColumn
        
        Private columnTarikhBarname As Global.System.Data.DataColumn
        
        Private columnMabdaID As Global.System.Data.DataColumn
        
        Private columnMaghsadID As Global.System.Data.DataColumn
        
        Private columnNoeBar As Global.System.Data.DataColumn
        
        Private columnMabnaKomision As Global.System.Data.DataColumn
        
        Private columnKolKerayeBarname As Global.System.Data.DataColumn
        
        Private columnPayeKerayeBarname As Global.System.Data.DataColumn
        
        Private columnDaryaftNaghdi As Global.System.Data.DataColumn
        
        Private columnHaghPayane As Global.System.Data.DataColumn
        
        Private columnKomisionBarname As Global.System.Data.DataColumn
        
        Private columnBimeBarbari As Global.System.Data.DataColumn
        
        Private columnTafavotKomision As Global.System.Data.DataColumn
        
        Private columnBimeOmr As Global.System.Data.DataColumn
        
        Private columnBargiri_Takhliye As Global.System.Data.DataColumn
        
        Private columnJarimePolice As Global.System.Data.DataColumn
        
        Private columnNobat As Global.System.Data.DataColumn
        
        Private columnAvarezOtooban As Global.System.Data.DataColumn
        
        Private columnSahmRanande As Global.System.Data.DataColumn
        
        Private columnHazineGhaza_Raft As Global.System.Data.DataColumn
        
        Private columnHazineGhaza_Bargasht As Global.System.Data.DataColumn
        
        Private columnMeghdarSookht As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnDarsad_SahmRanande As Global.System.Data.DataColumn
        
        Private columnDarsad_HazineGhaza_Raft As Global.System.Data.DataColumn
        
        Private columnDarsad_HazineGhaza_Bargasht As Global.System.Data.DataColumn
        
        Private columnMablaghSookht As Global.System.Data.DataColumn
        
        Private columnDarsad_HaghPayane As Global.System.Data.DataColumn
        
        Private columnDarsad_KomisionBarname As Global.System.Data.DataColumn
        
        Private columnIsProcess As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Sanad"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OrderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MabdaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMabdaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaghsadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaghsadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoeBarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoeBar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MabnaKomisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMabnaKomision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KolKerayeBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKolKerayeBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PayeKerayeBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayeKerayeBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DaryaftNaghdiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDaryaftNaghdi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HaghPayaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaghPayane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KomisionBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKomisionBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BimeBarbariColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBimeBarbari
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TafavotKomisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTafavotKomision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BimeOmrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBimeOmr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bargiri_TakhliyeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBargiri_Takhliye
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JarimePoliceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJarimePolice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NobatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNobat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AvarezOtoobanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvarezOtooban
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SahmRanandeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSahmRanande
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HazineGhaza_RaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazineGhaza_Raft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HazineGhaza_BargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazineGhaza_Bargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MeghdarSookhtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeghdarSookht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Darsad_SahmRanandeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarsad_SahmRanande
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Darsad_HazineGhaza_RaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarsad_HazineGhaza_Raft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Darsad_HazineGhaza_BargashtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarsad_HazineGhaza_Bargasht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MablaghSookhtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMablaghSookht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Darsad_HaghPayaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarsad_HaghPayane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Darsad_KomisionBarnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDarsad_KomisionBarname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsProcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_SanadRow
            Get
                Return CType(Me.Rows(index),tbl_SanadRow)
            End Get
        End Property
        
        Public Event tbl_SanadRowChanging As tbl_SanadRowChangeEventHandler
        
        Public Event tbl_SanadRowChanged As tbl_SanadRowChangeEventHandler
        
        Public Event tbl_SanadRowDeleting As tbl_SanadRowChangeEventHandler
        
        Public Event tbl_SanadRowDeleted As tbl_SanadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_SanadRow(ByVal row As tbl_SanadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_SanadRow( _
                    ByVal parenttbl_EzamNavganRowByFK_tbl_Sanad_tbl_EzamNavgan As tbl_EzamNavganRow,  _
                    ByVal OrderID As Integer,  _
                    ByVal ShomareBarname As Integer,  _
                    ByVal TarikhBarname As String,  _
                    ByVal parenttbl_MabdaRowByFK_tbl_Sanad_tbl_Mabda As tbl_MabdaRow,  _
                    ByVal parenttbl_MaghsadRowByFK_tbl_Sanad_tbl_Maghsad As tbl_MaghsadRow,  _
                    ByVal NoeBar As String,  _
                    ByVal MabnaKomision As Integer,  _
                    ByVal KolKerayeBarname As Integer,  _
                    ByVal PayeKerayeBarname As Integer,  _
                    ByVal DaryaftNaghdi As Integer,  _
                    ByVal HaghPayane As Integer,  _
                    ByVal KomisionBarname As Integer,  _
                    ByVal BimeBarbari As Integer,  _
                    ByVal TafavotKomision As Integer,  _
                    ByVal BimeOmr As Integer,  _
                    ByVal Bargiri_Takhliye As Integer,  _
                    ByVal JarimePolice As Integer,  _
                    ByVal Nobat As Integer,  _
                    ByVal AvarezOtooban As Integer,  _
                    ByVal SahmRanande As Integer,  _
                    ByVal HazineGhaza_Raft As Integer,  _
                    ByVal HazineGhaza_Bargasht As Integer,  _
                    ByVal MeghdarSookht As Integer,  _
                    ByVal Total As Integer,  _
                    ByVal Darsad_SahmRanande As Single,  _
                    ByVal Darsad_HazineGhaza_Raft As Single,  _
                    ByVal Darsad_HazineGhaza_Bargasht As Single,  _
                    ByVal MablaghSookht As Integer,  _
                    ByVal Darsad_HaghPayane As Single,  _
                    ByVal Darsad_KomisionBarname As Single,  _
                    ByVal IsProcess As Boolean) As tbl_SanadRow
            Dim rowtbl_SanadRow As tbl_SanadRow = CType(Me.NewRow,tbl_SanadRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, OrderID, ShomareBarname, TarikhBarname, Nothing, Nothing, NoeBar, MabnaKomision, KolKerayeBarname, PayeKerayeBarname, DaryaftNaghdi, HaghPayane, KomisionBarname, BimeBarbari, TafavotKomision, BimeOmr, Bargiri_Takhliye, JarimePolice, Nobat, AvarezOtooban, SahmRanande, HazineGhaza_Raft, HazineGhaza_Bargasht, MeghdarSookht, Total, Darsad_SahmRanande, Darsad_HazineGhaza_Raft, Darsad_HazineGhaza_Bargasht, MablaghSookht, Darsad_HaghPayane, Darsad_KomisionBarname, IsProcess}
            If (Not (parenttbl_EzamNavganRowByFK_tbl_Sanad_tbl_EzamNavgan) Is Nothing) Then
                columnValuesArray(0) = parenttbl_EzamNavganRowByFK_tbl_Sanad_tbl_EzamNavgan(0)
            End If
            If (Not (parenttbl_MabdaRowByFK_tbl_Sanad_tbl_Mabda) Is Nothing) Then
                columnValuesArray(4) = parenttbl_MabdaRowByFK_tbl_Sanad_tbl_Mabda(0)
            End If
            If (Not (parenttbl_MaghsadRowByFK_tbl_Sanad_tbl_Maghsad) Is Nothing) Then
                columnValuesArray(5) = parenttbl_MaghsadRowByFK_tbl_Sanad_tbl_Maghsad(0)
            End If
            rowtbl_SanadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_SanadRow)
            Return rowtbl_SanadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByOperationCodeOrderID(ByVal OperationCode As Integer, ByVal OrderID As Integer) As tbl_SanadRow
            Return CType(Me.Rows.Find(New Object() {OperationCode, OrderID}),tbl_SanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_SanadDataTable = CType(MyBase.Clone,tbl_SanadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_SanadDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOperationCode = MyBase.Columns("OperationCode")
            Me.columnOrderID = MyBase.Columns("OrderID")
            Me.columnShomareBarname = MyBase.Columns("ShomareBarname")
            Me.columnTarikhBarname = MyBase.Columns("TarikhBarname")
            Me.columnMabdaID = MyBase.Columns("MabdaID")
            Me.columnMaghsadID = MyBase.Columns("MaghsadID")
            Me.columnNoeBar = MyBase.Columns("NoeBar")
            Me.columnMabnaKomision = MyBase.Columns("MabnaKomision")
            Me.columnKolKerayeBarname = MyBase.Columns("KolKerayeBarname")
            Me.columnPayeKerayeBarname = MyBase.Columns("PayeKerayeBarname")
            Me.columnDaryaftNaghdi = MyBase.Columns("DaryaftNaghdi")
            Me.columnHaghPayane = MyBase.Columns("HaghPayane")
            Me.columnKomisionBarname = MyBase.Columns("KomisionBarname")
            Me.columnBimeBarbari = MyBase.Columns("BimeBarbari")
            Me.columnTafavotKomision = MyBase.Columns("TafavotKomision")
            Me.columnBimeOmr = MyBase.Columns("BimeOmr")
            Me.columnBargiri_Takhliye = MyBase.Columns("Bargiri_Takhliye")
            Me.columnJarimePolice = MyBase.Columns("JarimePolice")
            Me.columnNobat = MyBase.Columns("Nobat")
            Me.columnAvarezOtooban = MyBase.Columns("AvarezOtooban")
            Me.columnSahmRanande = MyBase.Columns("SahmRanande")
            Me.columnHazineGhaza_Raft = MyBase.Columns("HazineGhaza_Raft")
            Me.columnHazineGhaza_Bargasht = MyBase.Columns("HazineGhaza_Bargasht")
            Me.columnMeghdarSookht = MyBase.Columns("MeghdarSookht")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnDarsad_SahmRanande = MyBase.Columns("Darsad_SahmRanande")
            Me.columnDarsad_HazineGhaza_Raft = MyBase.Columns("Darsad_HazineGhaza_Raft")
            Me.columnDarsad_HazineGhaza_Bargasht = MyBase.Columns("Darsad_HazineGhaza_Bargasht")
            Me.columnMablaghSookht = MyBase.Columns("MablaghSookht")
            Me.columnDarsad_HaghPayane = MyBase.Columns("Darsad_HaghPayane")
            Me.columnDarsad_KomisionBarname = MyBase.Columns("Darsad_KomisionBarname")
            Me.columnIsProcess = MyBase.Columns("IsProcess")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOperationCode = New Global.System.Data.DataColumn("OperationCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationCode)
            Me.columnOrderID = New Global.System.Data.DataColumn("OrderID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderID)
            Me.columnShomareBarname = New Global.System.Data.DataColumn("ShomareBarname", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareBarname)
            Me.columnTarikhBarname = New Global.System.Data.DataColumn("TarikhBarname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhBarname)
            Me.columnMabdaID = New Global.System.Data.DataColumn("MabdaID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMabdaID)
            Me.columnMaghsadID = New Global.System.Data.DataColumn("MaghsadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaghsadID)
            Me.columnNoeBar = New Global.System.Data.DataColumn("NoeBar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoeBar)
            Me.columnMabnaKomision = New Global.System.Data.DataColumn("MabnaKomision", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMabnaKomision)
            Me.columnKolKerayeBarname = New Global.System.Data.DataColumn("KolKerayeBarname", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKolKerayeBarname)
            Me.columnPayeKerayeBarname = New Global.System.Data.DataColumn("PayeKerayeBarname", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayeKerayeBarname)
            Me.columnDaryaftNaghdi = New Global.System.Data.DataColumn("DaryaftNaghdi", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDaryaftNaghdi)
            Me.columnHaghPayane = New Global.System.Data.DataColumn("HaghPayane", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaghPayane)
            Me.columnKomisionBarname = New Global.System.Data.DataColumn("KomisionBarname", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKomisionBarname)
            Me.columnBimeBarbari = New Global.System.Data.DataColumn("BimeBarbari", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBimeBarbari)
            Me.columnTafavotKomision = New Global.System.Data.DataColumn("TafavotKomision", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTafavotKomision)
            Me.columnBimeOmr = New Global.System.Data.DataColumn("BimeOmr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBimeOmr)
            Me.columnBargiri_Takhliye = New Global.System.Data.DataColumn("Bargiri_Takhliye", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBargiri_Takhliye)
            Me.columnJarimePolice = New Global.System.Data.DataColumn("JarimePolice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJarimePolice)
            Me.columnNobat = New Global.System.Data.DataColumn("Nobat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNobat)
            Me.columnAvarezOtooban = New Global.System.Data.DataColumn("AvarezOtooban", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvarezOtooban)
            Me.columnSahmRanande = New Global.System.Data.DataColumn("SahmRanande", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSahmRanande)
            Me.columnHazineGhaza_Raft = New Global.System.Data.DataColumn("HazineGhaza_Raft", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazineGhaza_Raft)
            Me.columnHazineGhaza_Bargasht = New Global.System.Data.DataColumn("HazineGhaza_Bargasht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazineGhaza_Bargasht)
            Me.columnMeghdarSookht = New Global.System.Data.DataColumn("MeghdarSookht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeghdarSookht)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnDarsad_SahmRanande = New Global.System.Data.DataColumn("Darsad_SahmRanande", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarsad_SahmRanande)
            Me.columnDarsad_HazineGhaza_Raft = New Global.System.Data.DataColumn("Darsad_HazineGhaza_Raft", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarsad_HazineGhaza_Raft)
            Me.columnDarsad_HazineGhaza_Bargasht = New Global.System.Data.DataColumn("Darsad_HazineGhaza_Bargasht", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarsad_HazineGhaza_Bargasht)
            Me.columnMablaghSookht = New Global.System.Data.DataColumn("MablaghSookht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMablaghSookht)
            Me.columnDarsad_HaghPayane = New Global.System.Data.DataColumn("Darsad_HaghPayane", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarsad_HaghPayane)
            Me.columnDarsad_KomisionBarname = New Global.System.Data.DataColumn("Darsad_KomisionBarname", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDarsad_KomisionBarname)
            Me.columnIsProcess = New Global.System.Data.DataColumn("IsProcess", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProcess)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOperationCode, Me.columnOrderID}, true))
            Me.columnOperationCode.AllowDBNull = false
            Me.columnOrderID.AllowDBNull = false
            Me.columnTarikhBarname.MaxLength = 10
            Me.columnNoeBar.MaxLength = 255
            Me.columnDarsad_SahmRanande.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_SanadRow() As tbl_SanadRow
            Return CType(Me.NewRow,tbl_SanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_SanadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_SanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_SanadRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_SanadRowChanged(Me, New tbl_SanadRowChangeEvent(CType(e.Row,tbl_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_SanadRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_SanadRowChanging(Me, New tbl_SanadRowChangeEvent(CType(e.Row,tbl_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_SanadRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_SanadRowDeleted(Me, New tbl_SanadRowChangeEvent(CType(e.Row,tbl_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_SanadRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_SanadRowDeleting(Me, New tbl_SanadRowChangeEvent(CType(e.Row,tbl_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_SanadRow(ByVal row As tbl_SanadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_SanadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_TankhahDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_TankhahRow)
        
        Private columnTankhahID As Global.System.Data.DataColumn
        
        Private columnTankhahSanadID As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnVajhe As Global.System.Data.DataColumn
        
        Private columnTotalValue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Tankhah"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TankhahIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTankhahID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TankhahSanadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTankhahSanadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VajheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVajhe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_TankhahRow
            Get
                Return CType(Me.Rows(index),tbl_TankhahRow)
            End Get
        End Property
        
        Public Event tbl_TankhahRowChanging As tbl_TankhahRowChangeEventHandler
        
        Public Event tbl_TankhahRowChanged As tbl_TankhahRowChangeEventHandler
        
        Public Event tbl_TankhahRowDeleting As tbl_TankhahRowChangeEventHandler
        
        Public Event tbl_TankhahRowDeleted As tbl_TankhahRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_TankhahRow(ByVal row As tbl_TankhahRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_TankhahRow(ByVal TankhahID As Integer, ByVal TankhahSanadID As Integer, ByVal pDate As String, ByVal Vajhe As String, ByVal TotalValue As Integer) As tbl_TankhahRow
            Dim rowtbl_TankhahRow As tbl_TankhahRow = CType(Me.NewRow,tbl_TankhahRow)
            Dim columnValuesArray() As Object = New Object() {TankhahID, TankhahSanadID, pDate, Vajhe, TotalValue}
            rowtbl_TankhahRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_TankhahRow)
            Return rowtbl_TankhahRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTankhahID(ByVal TankhahID As Integer) As tbl_TankhahRow
            Return CType(Me.Rows.Find(New Object() {TankhahID}),tbl_TankhahRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_TankhahDataTable = CType(MyBase.Clone,tbl_TankhahDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_TankhahDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTankhahID = MyBase.Columns("TankhahID")
            Me.columnTankhahSanadID = MyBase.Columns("TankhahSanadID")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnVajhe = MyBase.Columns("Vajhe")
            Me.columnTotalValue = MyBase.Columns("TotalValue")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTankhahID = New Global.System.Data.DataColumn("TankhahID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTankhahID)
            Me.columnTankhahSanadID = New Global.System.Data.DataColumn("TankhahSanadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTankhahSanadID)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnVajhe = New Global.System.Data.DataColumn("Vajhe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVajhe)
            Me.columnTotalValue = New Global.System.Data.DataColumn("TotalValue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalValue)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTankhahID}, true))
            Me.columnTankhahID.AllowDBNull = false
            Me.columnTankhahID.Unique = true
            Me.columnTankhahSanadID.AllowDBNull = false
            Me.columnpDate.AllowDBNull = false
            Me.columnpDate.MaxLength = 10
            Me.columnVajhe.AllowDBNull = false
            Me.columnVajhe.MaxLength = 50
            Me.columnTotalValue.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_TankhahRow() As tbl_TankhahRow
            Return CType(Me.NewRow,tbl_TankhahRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_TankhahRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_TankhahRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_TankhahRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahRowChanged(Me, New tbl_TankhahRowChangeEvent(CType(e.Row,tbl_TankhahRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_TankhahRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahRowChanging(Me, New tbl_TankhahRowChangeEvent(CType(e.Row,tbl_TankhahRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_TankhahRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahRowDeleted(Me, New tbl_TankhahRowChangeEvent(CType(e.Row,tbl_TankhahRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_TankhahRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahRowDeleting(Me, New tbl_TankhahRowChangeEvent(CType(e.Row,tbl_TankhahRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_TankhahRow(ByVal row As tbl_TankhahRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_TankhahDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_TankhahDetail_FactorDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_TankhahDetail_FactorRow)
        
        Private columnTankhahID As Global.System.Data.DataColumn
        
        Private columnFactorID As Global.System.Data.DataColumn
        
        Private columnTedadBargZamime As Global.System.Data.DataColumn
        
        Private columnShomareSanadPardakht As Global.System.Data.DataColumn
        
        Private columnShomareResidAnbar As Global.System.Data.DataColumn
        
        Private columnMolahezat As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_TankhahDetail_Factor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TankhahIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTankhahID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TedadBargZamimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedadBargZamime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareSanadPardakhtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareSanadPardakht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareResidAnbarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareResidAnbar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MolahezatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMolahezat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_TankhahDetail_FactorRow
            Get
                Return CType(Me.Rows(index),tbl_TankhahDetail_FactorRow)
            End Get
        End Property
        
        Public Event tbl_TankhahDetail_FactorRowChanging As tbl_TankhahDetail_FactorRowChangeEventHandler
        
        Public Event tbl_TankhahDetail_FactorRowChanged As tbl_TankhahDetail_FactorRowChangeEventHandler
        
        Public Event tbl_TankhahDetail_FactorRowDeleting As tbl_TankhahDetail_FactorRowChangeEventHandler
        
        Public Event tbl_TankhahDetail_FactorRowDeleted As tbl_TankhahDetail_FactorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_TankhahDetail_FactorRow(ByVal row As tbl_TankhahDetail_FactorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_TankhahDetail_FactorRow(ByVal parenttbl_TankhahRowByFK_tbl_TankhahDetail_tbl_Tankhah As tbl_TankhahRow, ByVal parenttbl_TamiratRowByFK_tbl_TankhahDetail_tbl_Tamirat As tbl_TamiratRow, ByVal TedadBargZamime As Integer, ByVal ShomareSanadPardakht As Integer, ByVal ShomareResidAnbar As Integer, ByVal Molahezat As String) As tbl_TankhahDetail_FactorRow
            Dim rowtbl_TankhahDetail_FactorRow As tbl_TankhahDetail_FactorRow = CType(Me.NewRow,tbl_TankhahDetail_FactorRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnbar, Molahezat}
            If (Not (parenttbl_TankhahRowByFK_tbl_TankhahDetail_tbl_Tankhah) Is Nothing) Then
                columnValuesArray(0) = parenttbl_TankhahRowByFK_tbl_TankhahDetail_tbl_Tankhah(0)
            End If
            If (Not (parenttbl_TamiratRowByFK_tbl_TankhahDetail_tbl_Tamirat) Is Nothing) Then
                columnValuesArray(1) = parenttbl_TamiratRowByFK_tbl_TankhahDetail_tbl_Tamirat(0)
            End If
            rowtbl_TankhahDetail_FactorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_TankhahDetail_FactorRow)
            Return rowtbl_TankhahDetail_FactorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTankhahIDFactorID(ByVal TankhahID As Integer, ByVal FactorID As Integer) As tbl_TankhahDetail_FactorRow
            Return CType(Me.Rows.Find(New Object() {TankhahID, FactorID}),tbl_TankhahDetail_FactorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_TankhahDetail_FactorDataTable = CType(MyBase.Clone,tbl_TankhahDetail_FactorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_TankhahDetail_FactorDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTankhahID = MyBase.Columns("TankhahID")
            Me.columnFactorID = MyBase.Columns("FactorID")
            Me.columnTedadBargZamime = MyBase.Columns("TedadBargZamime")
            Me.columnShomareSanadPardakht = MyBase.Columns("ShomareSanadPardakht")
            Me.columnShomareResidAnbar = MyBase.Columns("ShomareResidAnbar")
            Me.columnMolahezat = MyBase.Columns("Molahezat")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTankhahID = New Global.System.Data.DataColumn("TankhahID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTankhahID)
            Me.columnFactorID = New Global.System.Data.DataColumn("FactorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorID)
            Me.columnTedadBargZamime = New Global.System.Data.DataColumn("TedadBargZamime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedadBargZamime)
            Me.columnShomareSanadPardakht = New Global.System.Data.DataColumn("ShomareSanadPardakht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareSanadPardakht)
            Me.columnShomareResidAnbar = New Global.System.Data.DataColumn("ShomareResidAnbar", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareResidAnbar)
            Me.columnMolahezat = New Global.System.Data.DataColumn("Molahezat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMolahezat)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTankhahID, Me.columnFactorID}, true))
            Me.columnTankhahID.AllowDBNull = false
            Me.columnFactorID.AllowDBNull = false
            Me.columnMolahezat.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_TankhahDetail_FactorRow() As tbl_TankhahDetail_FactorRow
            Return CType(Me.NewRow,tbl_TankhahDetail_FactorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_TankhahDetail_FactorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_TankhahDetail_FactorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_TankhahDetail_FactorRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_FactorRowChanged(Me, New tbl_TankhahDetail_FactorRowChangeEvent(CType(e.Row,tbl_TankhahDetail_FactorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_TankhahDetail_FactorRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_FactorRowChanging(Me, New tbl_TankhahDetail_FactorRowChangeEvent(CType(e.Row,tbl_TankhahDetail_FactorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_TankhahDetail_FactorRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_FactorRowDeleted(Me, New tbl_TankhahDetail_FactorRowChangeEvent(CType(e.Row,tbl_TankhahDetail_FactorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_TankhahDetail_FactorRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_FactorRowDeleting(Me, New tbl_TankhahDetail_FactorRowChangeEvent(CType(e.Row,tbl_TankhahDetail_FactorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_TankhahDetail_FactorRow(ByVal row As tbl_TankhahDetail_FactorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_TankhahDetail_FactorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_TankhahDetail_SanadDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_TankhahDetail_SanadRow)
        
        Private columnTankhahID As Global.System.Data.DataColumn
        
        Private columnSanadID As Global.System.Data.DataColumn
        
        Private columnTedadBargZamime As Global.System.Data.DataColumn
        
        Private columnShomareSanadPardakht As Global.System.Data.DataColumn
        
        Private columnShomareResidAnbar As Global.System.Data.DataColumn
        
        Private columnMolahezat As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_TankhahDetail_Sanad"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TankhahIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTankhahID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SanadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSanadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TedadBargZamimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedadBargZamime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareSanadPardakhtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareSanadPardakht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareResidAnbarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareResidAnbar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MolahezatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMolahezat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_TankhahDetail_SanadRow
            Get
                Return CType(Me.Rows(index),tbl_TankhahDetail_SanadRow)
            End Get
        End Property
        
        Public Event tbl_TankhahDetail_SanadRowChanging As tbl_TankhahDetail_SanadRowChangeEventHandler
        
        Public Event tbl_TankhahDetail_SanadRowChanged As tbl_TankhahDetail_SanadRowChangeEventHandler
        
        Public Event tbl_TankhahDetail_SanadRowDeleting As tbl_TankhahDetail_SanadRowChangeEventHandler
        
        Public Event tbl_TankhahDetail_SanadRowDeleted As tbl_TankhahDetail_SanadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_TankhahDetail_SanadRow(ByVal row As tbl_TankhahDetail_SanadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_TankhahDetail_SanadRow(ByVal parenttbl_TankhahRowByFK_tbl_TankhahDetail_Sanad_tbl_Tankhah As tbl_TankhahRow, ByVal SanadID As Integer, ByVal TedadBargZamime As Integer, ByVal ShomareSanadPardakht As Integer, ByVal ShomareResidAnbar As Integer, ByVal Molahezat As String) As tbl_TankhahDetail_SanadRow
            Dim rowtbl_TankhahDetail_SanadRow As tbl_TankhahDetail_SanadRow = CType(Me.NewRow,tbl_TankhahDetail_SanadRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SanadID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnbar, Molahezat}
            If (Not (parenttbl_TankhahRowByFK_tbl_TankhahDetail_Sanad_tbl_Tankhah) Is Nothing) Then
                columnValuesArray(0) = parenttbl_TankhahRowByFK_tbl_TankhahDetail_Sanad_tbl_Tankhah(0)
            End If
            rowtbl_TankhahDetail_SanadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_TankhahDetail_SanadRow)
            Return rowtbl_TankhahDetail_SanadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTankhahIDSanadID(ByVal TankhahID As Integer, ByVal SanadID As Integer) As tbl_TankhahDetail_SanadRow
            Return CType(Me.Rows.Find(New Object() {TankhahID, SanadID}),tbl_TankhahDetail_SanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_TankhahDetail_SanadDataTable = CType(MyBase.Clone,tbl_TankhahDetail_SanadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_TankhahDetail_SanadDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTankhahID = MyBase.Columns("TankhahID")
            Me.columnSanadID = MyBase.Columns("SanadID")
            Me.columnTedadBargZamime = MyBase.Columns("TedadBargZamime")
            Me.columnShomareSanadPardakht = MyBase.Columns("ShomareSanadPardakht")
            Me.columnShomareResidAnbar = MyBase.Columns("ShomareResidAnbar")
            Me.columnMolahezat = MyBase.Columns("Molahezat")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTankhahID = New Global.System.Data.DataColumn("TankhahID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTankhahID)
            Me.columnSanadID = New Global.System.Data.DataColumn("SanadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSanadID)
            Me.columnTedadBargZamime = New Global.System.Data.DataColumn("TedadBargZamime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedadBargZamime)
            Me.columnShomareSanadPardakht = New Global.System.Data.DataColumn("ShomareSanadPardakht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareSanadPardakht)
            Me.columnShomareResidAnbar = New Global.System.Data.DataColumn("ShomareResidAnbar", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareResidAnbar)
            Me.columnMolahezat = New Global.System.Data.DataColumn("Molahezat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMolahezat)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTankhahID, Me.columnSanadID}, true))
            Me.columnTankhahID.AllowDBNull = false
            Me.columnSanadID.AllowDBNull = false
            Me.columnMolahezat.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_TankhahDetail_SanadRow() As tbl_TankhahDetail_SanadRow
            Return CType(Me.NewRow,tbl_TankhahDetail_SanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_TankhahDetail_SanadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_TankhahDetail_SanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_TankhahDetail_SanadRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_SanadRowChanged(Me, New tbl_TankhahDetail_SanadRowChangeEvent(CType(e.Row,tbl_TankhahDetail_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_TankhahDetail_SanadRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_SanadRowChanging(Me, New tbl_TankhahDetail_SanadRowChangeEvent(CType(e.Row,tbl_TankhahDetail_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_TankhahDetail_SanadRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_SanadRowDeleted(Me, New tbl_TankhahDetail_SanadRowChangeEvent(CType(e.Row,tbl_TankhahDetail_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_TankhahDetail_SanadRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_TankhahDetail_SanadRowDeleting(Me, New tbl_TankhahDetail_SanadRowChangeEvent(CType(e.Row,tbl_TankhahDetail_SanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_TankhahDetail_SanadRow(ByVal row As tbl_TankhahDetail_SanadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_TankhahDetail_SanadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class usp_GetTankhahDetailByTankhahIDDataTable
        Inherits Global.System.Data.TypedTableBase(Of usp_GetTankhahDetailByTankhahIDRow)
        
        Private columnTankhahID As Global.System.Data.DataColumn
        
        Private columnTankhahSanadID As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnVajhe As Global.System.Data.DataColumn
        
        Private columnTotalValue As Global.System.Data.DataColumn
        
        Private columnFS_ID As Global.System.Data.DataColumn
        
        Private columnTedadBargZamime As Global.System.Data.DataColumn
        
        Private columnShomareSanadPardakht As Global.System.Data.DataColumn
        
        Private columnShomareResidAnbar As Global.System.Data.DataColumn
        
        Private columnMolahezat As Global.System.Data.DataColumn
        
        Private columnFullname As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "usp_GetTankhahDetailByTankhahID"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TankhahIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTankhahID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TankhahSanadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTankhahSanadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VajheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVajhe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TedadBargZamimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedadBargZamime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareSanadPardakhtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareSanadPardakht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomareResidAnbarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareResidAnbar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MolahezatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMolahezat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As usp_GetTankhahDetailByTankhahIDRow
            Get
                Return CType(Me.Rows(index),usp_GetTankhahDetailByTankhahIDRow)
            End Get
        End Property
        
        Public Event usp_GetTankhahDetailByTankhahIDRowChanging As usp_GetTankhahDetailByTankhahIDRowChangeEventHandler
        
        Public Event usp_GetTankhahDetailByTankhahIDRowChanged As usp_GetTankhahDetailByTankhahIDRowChangeEventHandler
        
        Public Event usp_GetTankhahDetailByTankhahIDRowDeleting As usp_GetTankhahDetailByTankhahIDRowChangeEventHandler
        
        Public Event usp_GetTankhahDetailByTankhahIDRowDeleted As usp_GetTankhahDetailByTankhahIDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addusp_GetTankhahDetailByTankhahIDRow(ByVal row As usp_GetTankhahDetailByTankhahIDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addusp_GetTankhahDetailByTankhahIDRow(ByVal TankhahID As Integer, ByVal TankhahSanadID As Integer, ByVal pDate As String, ByVal Vajhe As String, ByVal TotalValue As Integer, ByVal FS_ID As Integer, ByVal TedadBargZamime As Integer, ByVal ShomareSanadPardakht As Integer, ByVal ShomareResidAnbar As Integer, ByVal Molahezat As String, ByVal Fullname As String, ByVal MashinID As Integer, ByVal Pelak As String, ByVal SubTotal As Integer, ByVal Type As String) As usp_GetTankhahDetailByTankhahIDRow
            Dim rowusp_GetTankhahDetailByTankhahIDRow As usp_GetTankhahDetailByTankhahIDRow = CType(Me.NewRow,usp_GetTankhahDetailByTankhahIDRow)
            Dim columnValuesArray() As Object = New Object() {TankhahID, TankhahSanadID, pDate, Vajhe, TotalValue, FS_ID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnbar, Molahezat, Fullname, MashinID, Pelak, SubTotal, Type}
            rowusp_GetTankhahDetailByTankhahIDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowusp_GetTankhahDetailByTankhahIDRow)
            Return rowusp_GetTankhahDetailByTankhahIDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As usp_GetTankhahDetailByTankhahIDDataTable = CType(MyBase.Clone,usp_GetTankhahDetailByTankhahIDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New usp_GetTankhahDetailByTankhahIDDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTankhahID = MyBase.Columns("TankhahID")
            Me.columnTankhahSanadID = MyBase.Columns("TankhahSanadID")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnVajhe = MyBase.Columns("Vajhe")
            Me.columnTotalValue = MyBase.Columns("TotalValue")
            Me.columnFS_ID = MyBase.Columns("FS_ID")
            Me.columnTedadBargZamime = MyBase.Columns("TedadBargZamime")
            Me.columnShomareSanadPardakht = MyBase.Columns("ShomareSanadPardakht")
            Me.columnShomareResidAnbar = MyBase.Columns("ShomareResidAnbar")
            Me.columnMolahezat = MyBase.Columns("Molahezat")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnType = MyBase.Columns("Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTankhahID = New Global.System.Data.DataColumn("TankhahID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTankhahID)
            Me.columnTankhahSanadID = New Global.System.Data.DataColumn("TankhahSanadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTankhahSanadID)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnVajhe = New Global.System.Data.DataColumn("Vajhe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVajhe)
            Me.columnTotalValue = New Global.System.Data.DataColumn("TotalValue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalValue)
            Me.columnFS_ID = New Global.System.Data.DataColumn("FS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFS_ID)
            Me.columnTedadBargZamime = New Global.System.Data.DataColumn("TedadBargZamime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedadBargZamime)
            Me.columnShomareSanadPardakht = New Global.System.Data.DataColumn("ShomareSanadPardakht", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareSanadPardakht)
            Me.columnShomareResidAnbar = New Global.System.Data.DataColumn("ShomareResidAnbar", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareResidAnbar)
            Me.columnMolahezat = New Global.System.Data.DataColumn("Molahezat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMolahezat)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnTankhahID.AllowDBNull = false
            Me.columnTankhahSanadID.AllowDBNull = false
            Me.columnpDate.AllowDBNull = false
            Me.columnpDate.MaxLength = 10
            Me.columnVajhe.AllowDBNull = false
            Me.columnVajhe.MaxLength = 50
            Me.columnTotalValue.AllowDBNull = false
            Me.columnFS_ID.AllowDBNull = false
            Me.columnMolahezat.MaxLength = 100
            Me.columnFullname.AllowDBNull = false
            Me.columnFullname.MaxLength = 61
            Me.columnMashinID.AllowDBNull = false
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 50
            Me.columnType.AllowDBNull = false
            Me.columnType.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newusp_GetTankhahDetailByTankhahIDRow() As usp_GetTankhahDetailByTankhahIDRow
            Return CType(Me.NewRow,usp_GetTankhahDetailByTankhahIDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New usp_GetTankhahDetailByTankhahIDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(usp_GetTankhahDetailByTankhahIDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.usp_GetTankhahDetailByTankhahIDRowChangedEvent) Is Nothing) Then
                RaiseEvent usp_GetTankhahDetailByTankhahIDRowChanged(Me, New usp_GetTankhahDetailByTankhahIDRowChangeEvent(CType(e.Row,usp_GetTankhahDetailByTankhahIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.usp_GetTankhahDetailByTankhahIDRowChangingEvent) Is Nothing) Then
                RaiseEvent usp_GetTankhahDetailByTankhahIDRowChanging(Me, New usp_GetTankhahDetailByTankhahIDRowChangeEvent(CType(e.Row,usp_GetTankhahDetailByTankhahIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.usp_GetTankhahDetailByTankhahIDRowDeletedEvent) Is Nothing) Then
                RaiseEvent usp_GetTankhahDetailByTankhahIDRowDeleted(Me, New usp_GetTankhahDetailByTankhahIDRowChangeEvent(CType(e.Row,usp_GetTankhahDetailByTankhahIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.usp_GetTankhahDetailByTankhahIDRowDeletingEvent) Is Nothing) Then
                RaiseEvent usp_GetTankhahDetailByTankhahIDRowDeleting(Me, New usp_GetTankhahDetailByTankhahIDRowChangeEvent(CType(e.Row,usp_GetTankhahDetailByTankhahIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeusp_GetTankhahDetailByTankhahIDRow(ByVal row As usp_GetTankhahDetailByTankhahIDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "usp_GetTankhahDetailByTankhahIDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vSanadListDataTable
        Inherits Global.System.Data.TypedTableBase(Of vSanadListRow)
        
        Private columnOperationCode As Global.System.Data.DataColumn
        
        Private columnRanandeFullName As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnMabdaID As Global.System.Data.DataColumn
        
        Private columnNameMabda As Global.System.Data.DataColumn
        
        Private columnMaghsadID As Global.System.Data.DataColumn
        
        Private columnNameMaghsad As Global.System.Data.DataColumn
        
        Private columnTarikhKhoroojMojtame As Global.System.Data.DataColumn
        
        Private columnTarikhVoroodMojtame As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnIsProcess As Global.System.Data.DataColumn
        
        Private columnPaymentStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vSanadList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandeFullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandeFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MabdaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMabdaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMabdaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMabda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaghsadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaghsadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameMaghsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameMaghsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhKhoroojMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhKhoroojMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhVoroodMojtameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikhVoroodMojtame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsProcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PaymentStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vSanadListRow
            Get
                Return CType(Me.Rows(index),vSanadListRow)
            End Get
        End Property
        
        Public Event vSanadListRowChanging As vSanadListRowChangeEventHandler
        
        Public Event vSanadListRowChanged As vSanadListRowChangeEventHandler
        
        Public Event vSanadListRowDeleting As vSanadListRowChangeEventHandler
        
        Public Event vSanadListRowDeleted As vSanadListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvSanadListRow(ByVal row As vSanadListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvSanadListRow(ByVal OperationCode As Integer, ByVal RanandeFullName As String, ByVal RanandePersonalCode As String, ByVal MashinID As Integer, ByVal Pelak As String, ByVal MabdaID As Integer, ByVal NameMabda As String, ByVal MaghsadID As Integer, ByVal NameMaghsad As String, ByVal TarikhKhoroojMojtame As String, ByVal TarikhVoroodMojtame As String, ByVal Total As Integer, ByVal IsProcess As Boolean, ByVal PaymentStatus As Boolean) As vSanadListRow
            Dim rowvSanadListRow As vSanadListRow = CType(Me.NewRow,vSanadListRow)
            Dim columnValuesArray() As Object = New Object() {OperationCode, RanandeFullName, RanandePersonalCode, MashinID, Pelak, MabdaID, NameMabda, MaghsadID, NameMaghsad, TarikhKhoroojMojtame, TarikhVoroodMojtame, Total, IsProcess, PaymentStatus}
            rowvSanadListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvSanadListRow)
            Return rowvSanadListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByOperationCode(ByVal OperationCode As Integer) As vSanadListRow
            Return CType(Me.Rows.Find(New Object() {OperationCode}),vSanadListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vSanadListDataTable = CType(MyBase.Clone,vSanadListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vSanadListDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOperationCode = MyBase.Columns("OperationCode")
            Me.columnRanandeFullName = MyBase.Columns("RanandeFullName")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnMabdaID = MyBase.Columns("MabdaID")
            Me.columnNameMabda = MyBase.Columns("NameMabda")
            Me.columnMaghsadID = MyBase.Columns("MaghsadID")
            Me.columnNameMaghsad = MyBase.Columns("NameMaghsad")
            Me.columnTarikhKhoroojMojtame = MyBase.Columns("TarikhKhoroojMojtame")
            Me.columnTarikhVoroodMojtame = MyBase.Columns("TarikhVoroodMojtame")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnIsProcess = MyBase.Columns("IsProcess")
            Me.columnPaymentStatus = MyBase.Columns("PaymentStatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOperationCode = New Global.System.Data.DataColumn("OperationCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationCode)
            Me.columnRanandeFullName = New Global.System.Data.DataColumn("RanandeFullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandeFullName)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnMabdaID = New Global.System.Data.DataColumn("MabdaID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMabdaID)
            Me.columnNameMabda = New Global.System.Data.DataColumn("NameMabda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMabda)
            Me.columnMaghsadID = New Global.System.Data.DataColumn("MaghsadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaghsadID)
            Me.columnNameMaghsad = New Global.System.Data.DataColumn("NameMaghsad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameMaghsad)
            Me.columnTarikhKhoroojMojtame = New Global.System.Data.DataColumn("TarikhKhoroojMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhKhoroojMojtame)
            Me.columnTarikhVoroodMojtame = New Global.System.Data.DataColumn("TarikhVoroodMojtame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikhVoroodMojtame)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnIsProcess = New Global.System.Data.DataColumn("IsProcess", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProcess)
            Me.columnPaymentStatus = New Global.System.Data.DataColumn("PaymentStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOperationCode}, true))
            Me.columnOperationCode.AllowDBNull = false
            Me.columnOperationCode.Unique = true
            Me.columnRanandeFullName.ReadOnly = true
            Me.columnRanandeFullName.MaxLength = 61
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnMashinID.AllowDBNull = false
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 50
            Me.columnMabdaID.AllowDBNull = false
            Me.columnNameMabda.AllowDBNull = false
            Me.columnNameMabda.MaxLength = 50
            Me.columnMaghsadID.AllowDBNull = false
            Me.columnNameMaghsad.AllowDBNull = false
            Me.columnNameMaghsad.MaxLength = 50
            Me.columnTarikhKhoroojMojtame.AllowDBNull = false
            Me.columnTarikhKhoroojMojtame.MaxLength = 10
            Me.columnTarikhVoroodMojtame.MaxLength = 10
            Me.columnPaymentStatus.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvSanadListRow() As vSanadListRow
            Return CType(Me.NewRow,vSanadListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vSanadListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vSanadListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vSanadListRowChangedEvent) Is Nothing) Then
                RaiseEvent vSanadListRowChanged(Me, New vSanadListRowChangeEvent(CType(e.Row,vSanadListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vSanadListRowChangingEvent) Is Nothing) Then
                RaiseEvent vSanadListRowChanging(Me, New vSanadListRowChangeEvent(CType(e.Row,vSanadListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vSanadListRowDeletedEvent) Is Nothing) Then
                RaiseEvent vSanadListRowDeleted(Me, New vSanadListRowChangeEvent(CType(e.Row,vSanadListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vSanadListRowDeletingEvent) Is Nothing) Then
                RaiseEvent vSanadListRowDeleting(Me, New vSanadListRowChangeEvent(CType(e.Row,vSanadListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevSanadListRow(ByVal row As vSanadListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vSanadListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vFactorListDataTable
        Inherits Global.System.Data.TypedTableBase(Of vFactorListRow)
        
        Private columnFactorID As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnFullname As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnNameTamirgah As Global.System.Data.DataColumn
        
        Private columnIsProcess As Global.System.Data.DataColumn
        
        Private columnPaymentStatus As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vFactorList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameTamirgahColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameTamirgah
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsProcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PaymentStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vFactorListRow
            Get
                Return CType(Me.Rows(index),vFactorListRow)
            End Get
        End Property
        
        Public Event vFactorListRowChanging As vFactorListRowChangeEventHandler
        
        Public Event vFactorListRowChanged As vFactorListRowChangeEventHandler
        
        Public Event vFactorListRowDeleting As vFactorListRowChangeEventHandler
        
        Public Event vFactorListRowDeleted As vFactorListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvFactorListRow(ByVal row As vFactorListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvFactorListRow(ByVal FactorID As Integer, ByVal pDate As String, ByVal RanandePersonalCode As String, ByVal Fullname As String, ByVal MashinID As Integer, ByVal Pelak As String, ByVal NameTamirgah As String, ByVal IsProcess As Boolean, ByVal PaymentStatus As Boolean, ByVal SubTotal As Integer) As vFactorListRow
            Dim rowvFactorListRow As vFactorListRow = CType(Me.NewRow,vFactorListRow)
            Dim columnValuesArray() As Object = New Object() {FactorID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak, NameTamirgah, IsProcess, PaymentStatus, SubTotal}
            rowvFactorListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvFactorListRow)
            Return rowvFactorListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByFactorID(ByVal FactorID As Integer) As vFactorListRow
            Return CType(Me.Rows.Find(New Object() {FactorID}),vFactorListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vFactorListDataTable = CType(MyBase.Clone,vFactorListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vFactorListDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFactorID = MyBase.Columns("FactorID")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnNameTamirgah = MyBase.Columns("NameTamirgah")
            Me.columnIsProcess = MyBase.Columns("IsProcess")
            Me.columnPaymentStatus = MyBase.Columns("PaymentStatus")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFactorID = New Global.System.Data.DataColumn("FactorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorID)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnNameTamirgah = New Global.System.Data.DataColumn("NameTamirgah", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameTamirgah)
            Me.columnIsProcess = New Global.System.Data.DataColumn("IsProcess", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProcess)
            Me.columnPaymentStatus = New Global.System.Data.DataColumn("PaymentStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentStatus)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFactorID}, true))
            Me.columnFactorID.AllowDBNull = false
            Me.columnFactorID.Unique = true
            Me.columnpDate.AllowDBNull = false
            Me.columnpDate.MaxLength = 10
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnFullname.ReadOnly = true
            Me.columnFullname.MaxLength = 61
            Me.columnMashinID.AllowDBNull = false
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 50
            Me.columnNameTamirgah.AllowDBNull = false
            Me.columnNameTamirgah.MaxLength = 50
            Me.columnIsProcess.AllowDBNull = false
            Me.columnPaymentStatus.AllowDBNull = false
            Me.columnSubTotal.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvFactorListRow() As vFactorListRow
            Return CType(Me.NewRow,vFactorListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vFactorListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vFactorListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vFactorListRowChangedEvent) Is Nothing) Then
                RaiseEvent vFactorListRowChanged(Me, New vFactorListRowChangeEvent(CType(e.Row,vFactorListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vFactorListRowChangingEvent) Is Nothing) Then
                RaiseEvent vFactorListRowChanging(Me, New vFactorListRowChangeEvent(CType(e.Row,vFactorListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vFactorListRowDeletedEvent) Is Nothing) Then
                RaiseEvent vFactorListRowDeleted(Me, New vFactorListRowChangeEvent(CType(e.Row,vFactorListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vFactorListRowDeletingEvent) Is Nothing) Then
                RaiseEvent vFactorListRowDeleting(Me, New vFactorListRowChangeEvent(CType(e.Row,vFactorListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevFactorListRow(ByVal row As vFactorListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vFactorListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vFactorSanadDataTable
        Inherits Global.System.Data.TypedTableBase(Of vFactorSanadRow)
        
        Private columnFS_Type As Global.System.Data.DataColumn
        
        Private columnFS_ID As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnRanandePersonalCode As Global.System.Data.DataColumn
        
        Private columnFullname As Global.System.Data.DataColumn
        
        Private columnMashinID As Global.System.Data.DataColumn
        
        Private columnPelak As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        Private columnPaymentStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vFactorSanad"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FS_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFS_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RanandePersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanandePersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MashinIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMashinID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PelakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PaymentStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vFactorSanadRow
            Get
                Return CType(Me.Rows(index),vFactorSanadRow)
            End Get
        End Property
        
        Public Event vFactorSanadRowChanging As vFactorSanadRowChangeEventHandler
        
        Public Event vFactorSanadRowChanged As vFactorSanadRowChangeEventHandler
        
        Public Event vFactorSanadRowDeleting As vFactorSanadRowChangeEventHandler
        
        Public Event vFactorSanadRowDeleted As vFactorSanadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvFactorSanadRow(ByVal row As vFactorSanadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvFactorSanadRow(ByVal FS_Type As Integer, ByVal FS_ID As Integer, ByVal pDate As String, ByVal RanandePersonalCode As String, ByVal Fullname As String, ByVal MashinID As Integer, ByVal Pelak As String, ByVal SubTotal As Integer, ByVal PaymentStatus As Boolean) As vFactorSanadRow
            Dim rowvFactorSanadRow As vFactorSanadRow = CType(Me.NewRow,vFactorSanadRow)
            Dim columnValuesArray() As Object = New Object() {FS_Type, FS_ID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak, SubTotal, PaymentStatus}
            rowvFactorSanadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvFactorSanadRow)
            Return rowvFactorSanadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vFactorSanadDataTable = CType(MyBase.Clone,vFactorSanadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vFactorSanadDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFS_Type = MyBase.Columns("FS_Type")
            Me.columnFS_ID = MyBase.Columns("FS_ID")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnRanandePersonalCode = MyBase.Columns("RanandePersonalCode")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnMashinID = MyBase.Columns("MashinID")
            Me.columnPelak = MyBase.Columns("Pelak")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnPaymentStatus = MyBase.Columns("PaymentStatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFS_Type = New Global.System.Data.DataColumn("FS_Type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFS_Type)
            Me.columnFS_ID = New Global.System.Data.DataColumn("FS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFS_ID)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnRanandePersonalCode = New Global.System.Data.DataColumn("RanandePersonalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanandePersonalCode)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnMashinID = New Global.System.Data.DataColumn("MashinID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMashinID)
            Me.columnPelak = New Global.System.Data.DataColumn("Pelak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelak)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnPaymentStatus = New Global.System.Data.DataColumn("PaymentStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentStatus)
            Me.columnFS_Type.AllowDBNull = false
            Me.columnFS_ID.AllowDBNull = false
            Me.columnpDate.MaxLength = 10
            Me.columnRanandePersonalCode.AllowDBNull = false
            Me.columnRanandePersonalCode.MaxLength = 20
            Me.columnFullname.AllowDBNull = false
            Me.columnFullname.MaxLength = 61
            Me.columnMashinID.AllowDBNull = false
            Me.columnPelak.AllowDBNull = false
            Me.columnPelak.MaxLength = 50
            Me.columnPaymentStatus.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvFactorSanadRow() As vFactorSanadRow
            Return CType(Me.NewRow,vFactorSanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vFactorSanadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vFactorSanadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vFactorSanadRowChangedEvent) Is Nothing) Then
                RaiseEvent vFactorSanadRowChanged(Me, New vFactorSanadRowChangeEvent(CType(e.Row,vFactorSanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vFactorSanadRowChangingEvent) Is Nothing) Then
                RaiseEvent vFactorSanadRowChanging(Me, New vFactorSanadRowChangeEvent(CType(e.Row,vFactorSanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vFactorSanadRowDeletedEvent) Is Nothing) Then
                RaiseEvent vFactorSanadRowDeleted(Me, New vFactorSanadRowChangeEvent(CType(e.Row,vFactorSanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vFactorSanadRowDeletingEvent) Is Nothing) Then
                RaiseEvent vFactorSanadRowDeleting(Me, New vFactorSanadRowChangeEvent(CType(e.Row,vFactorSanadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevFactorSanadRow(ByVal row As vFactorSanadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTarabari = New dsTarabari
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vFactorSanadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_MahalBargiriRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_MahalBargiri As tbl_MahalBargiriDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_MahalBargiri = CType(Me.Table,tbl_MahalBargiriDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MahalBargiriID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MahalBargiri.MahalBargiriIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MahalBargiri.MahalBargiriIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMahal() As String
            Get
                Return CType(Me(Me.tabletbl_MahalBargiri.NameMahalColumn),String)
            End Get
            Set
                Me(Me.tabletbl_MahalBargiri.NameMahalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_EzamNavganRows() As tbl_EzamNavganRow()
            If (Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_MahalBargiri") Is Nothing) Then
                Return New tbl_EzamNavganRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_MahalBargiri")),tbl_EzamNavganRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_MabdaRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Mabda As tbl_MabdaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Mabda = CType(Me.Table,tbl_MabdaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MabdaID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Mabda.MabdaIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Mabda.MabdaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMabda() As String
            Get
                Return CType(Me(Me.tabletbl_Mabda.NameMabdaColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Mabda.NameMabdaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_EzamNavganRows() As tbl_EzamNavganRow()
            If (Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Mabda") Is Nothing) Then
                Return New tbl_EzamNavganRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Mabda")),tbl_EzamNavganRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_SanadRows() As tbl_SanadRow()
            If (Me.Table.ChildRelations("FK_tbl_Sanad_tbl_Mabda") Is Nothing) Then
                Return New tbl_SanadRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_Sanad_tbl_Mabda")),tbl_SanadRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_MaghsadRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Maghsad As tbl_MaghsadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Maghsad = CType(Me.Table,tbl_MaghsadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaghsadID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Maghsad.MaghsadIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Maghsad.MaghsadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMaghsad() As String
            Get
                Return CType(Me(Me.tabletbl_Maghsad.NameMaghsadColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Maghsad.NameMaghsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_EzamNavganRows() As tbl_EzamNavganRow()
            If (Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Maghsad") Is Nothing) Then
                Return New tbl_EzamNavganRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Maghsad")),tbl_EzamNavganRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_SanadRows() As tbl_SanadRow()
            If (Me.Table.ChildRelations("FK_tbl_Sanad_tbl_Maghsad") Is Nothing) Then
                Return New tbl_SanadRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_Sanad_tbl_Maghsad")),tbl_SanadRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_MashinRanandeRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_MashinRanande As tbl_MashinRanandeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_MashinRanande = CType(Me.Table,tbl_MashinRanandeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tabletbl_MashinRanande.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_MashinRanande.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MashinRanande.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MashinRanande.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MashinRow() As tbl_MashinRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_MashinRanande_tbl_Mashin1")),tbl_MashinRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_MashinRanande_tbl_Mashin1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_RanandeganRow() As tbl_RanandeganRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_MashinRanande_tbl_Ranandegan1")),tbl_RanandeganRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_MashinRanande_tbl_Ranandegan1"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_EzamNavganRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_EzamNavgan As tbl_EzamNavganDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_EzamNavgan = CType(Me.Table,tbl_EzamNavganDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationCode() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.OperationCodeColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.OperationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MahalBargiriID() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.MahalBargiriIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MahalBargiriIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MabdaID() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.MabdaIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MabdaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaghsadID() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.MaghsadIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MaghsadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoeBar() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.NoeBarColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.NoeBarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tozihat() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.TozihatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tozihat' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TozihatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhEzamBargiri() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.TarikhEzamBargiriColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhEzamBargiriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhHozoorMahalBargiri() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.TarikhHozoorMahalBargiriColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhHozoorMahalBargiriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatHozoorMahalBagiri() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.SaatHozoorMahalBagiriColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatHozoorMahalBagiriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareBarnameRaft() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.ShomareBarnameRaftColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.ShomareBarnameRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBarnameRaft() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.TarikhBarnameRaftColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhBarnameRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatSodoorBarname() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.SaatSodoorBarnameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatSodoorBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KiloometrKhorroojMojtame() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.KiloometrKhorroojMojtameColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.KiloometrKhorroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MeghdarSookhtKhorooj() As Integer
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.MeghdarSookhtKhoroojColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MeghdarSookhtKhoroojColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhKhoroojMojtame() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.TarikhKhoroojMojtameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatKhoroojMojtame() As String
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.SaatKhoroojMojtameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KiloometrVoroodMojtame() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.KiloometrVoroodMojtameColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KiloometrVoroodMojtame' in table 'tbl_EzamNavgan' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.KiloometrVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MeghdarSookhtVorood() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.MeghdarSookhtVoroodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeghdarSookhtVorood' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MeghdarSookhtVoroodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MasafatTeyShode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.MasafatTeyShodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MasafatTeyShode' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MasafatTeyShodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SookhtMasrafShode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.SookhtMasrafShodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SookhtMasrafShode' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SookhtMasrafShodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhHozoorMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.TarikhHozoorMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhHozoorMahalTakhliyeAval' in table 'tbl_EzamNavgan' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhHozoorMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatHozoorMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.SaatHozoorMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatHozoorMahalTakhliyeAval' in table 'tbl_EzamNavgan' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatHozoorMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBargiriMojadad() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.TarikhBargiriMojadadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhBargiriMojadad' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhBargiriMojadadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatBargiriMojadad() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.SaatBargiriMojadadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatBargiriMojadad' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatBargiriMojadadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhKhoroojMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.TarikhKhoroojMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhKhoroojMahalTakhliyeAval' in table 'tbl_EzamNavgan' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhKhoroojMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatKhooojMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.SaatKhooojMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatKhooojMahalTakhliyeAval' in table 'tbl_EzamNavgan' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatKhooojMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareBarnameBargasht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.ShomareBarnameBargashtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareBarnameBargasht' in table 'tbl_EzamNavgan' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.ShomareBarnameBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBarnameBargasht() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.TarikhBarnameBargashtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhBarnameBargasht' in table 'tbl_EzamNavgan' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhBarnameBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MablaghKerayeBargasht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.MablaghKerayeBargashtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MablaghKerayeBargasht' in table 'tbl_EzamNavgan' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MablaghKerayeBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MablaghKerayeRaft() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.MablaghKerayeRaftColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MablaghKerayeRaft' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.MablaghKerayeRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.TarikhVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhVoroodMojtame' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.TarikhVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_EzamNavgan.SaatVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatVoroodMojtame' in table 'tbl_EzamNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.SaatVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DarMamooriyat() As Boolean
            Get
                Return CType(Me(Me.tabletbl_EzamNavgan.DarMamooriyatColumn),Boolean)
            End Get
            Set
                Me(Me.tabletbl_EzamNavgan.DarMamooriyatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MabdaRow() As tbl_MabdaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Mabda")),tbl_MabdaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Mabda"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MaghsadRow() As tbl_MaghsadRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Maghsad")),tbl_MaghsadRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Maghsad"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MahalBargiriRow() As tbl_MahalBargiriRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_MahalBargiri")),tbl_MahalBargiriRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_MahalBargiri"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MashinRow() As tbl_MashinRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Mashin1")),tbl_MashinRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Mashin1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_RanandeganRow() As tbl_RanandeganRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Ranandegan1")),tbl_RanandeganRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_EzamNavgan_tbl_Ranandegan1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTozihatNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.TozihatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTozihatNull()
            Me(Me.tabletbl_EzamNavgan.TozihatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKiloometrVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.KiloometrVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKiloometrVoroodMojtameNull()
            Me(Me.tabletbl_EzamNavgan.KiloometrVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMeghdarSookhtVoroodNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.MeghdarSookhtVoroodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMeghdarSookhtVoroodNull()
            Me(Me.tabletbl_EzamNavgan.MeghdarSookhtVoroodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasafatTeyShodeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.MasafatTeyShodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasafatTeyShodeNull()
            Me(Me.tabletbl_EzamNavgan.MasafatTeyShodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSookhtMasrafShodeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.SookhtMasrafShodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSookhtMasrafShodeNull()
            Me(Me.tabletbl_EzamNavgan.SookhtMasrafShodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhHozoorMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.TarikhHozoorMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhHozoorMahalTakhliyeAvalNull()
            Me(Me.tabletbl_EzamNavgan.TarikhHozoorMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatHozoorMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.SaatHozoorMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatHozoorMahalTakhliyeAvalNull()
            Me(Me.tabletbl_EzamNavgan.SaatHozoorMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhBargiriMojadadNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.TarikhBargiriMojadadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhBargiriMojadadNull()
            Me(Me.tabletbl_EzamNavgan.TarikhBargiriMojadadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatBargiriMojadadNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.SaatBargiriMojadadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatBargiriMojadadNull()
            Me(Me.tabletbl_EzamNavgan.SaatBargiriMojadadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhKhoroojMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.TarikhKhoroojMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhKhoroojMahalTakhliyeAvalNull()
            Me(Me.tabletbl_EzamNavgan.TarikhKhoroojMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatKhooojMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.SaatKhooojMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatKhooojMahalTakhliyeAvalNull()
            Me(Me.tabletbl_EzamNavgan.SaatKhooojMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareBarnameBargashtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.ShomareBarnameBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareBarnameBargashtNull()
            Me(Me.tabletbl_EzamNavgan.ShomareBarnameBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhBarnameBargashtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.TarikhBarnameBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhBarnameBargashtNull()
            Me(Me.tabletbl_EzamNavgan.TarikhBarnameBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMablaghKerayeBargashtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.MablaghKerayeBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMablaghKerayeBargashtNull()
            Me(Me.tabletbl_EzamNavgan.MablaghKerayeBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMablaghKerayeRaftNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.MablaghKerayeRaftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMablaghKerayeRaftNull()
            Me(Me.tabletbl_EzamNavgan.MablaghKerayeRaftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.TarikhVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhVoroodMojtameNull()
            Me(Me.tabletbl_EzamNavgan.TarikhVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_EzamNavgan.SaatVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatVoroodMojtameNull()
            Me(Me.tabletbl_EzamNavgan.SaatVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_SanadRows() As tbl_SanadRow()
            If (Me.Table.ChildRelations("FK_tbl_Sanad_tbl_EzamNavgan") Is Nothing) Then
                Return New tbl_SanadRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_Sanad_tbl_EzamNavgan")),tbl_SanadRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vSelectNavganRow
        Inherits Global.System.Data.DataRow
        
        Private tablevSelectNavgan As vSelectNavganDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevSelectNavgan = CType(Me.Table,vSelectNavganDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationCode() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.OperationCodeColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.OperationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandeFullName() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.RanandeFullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RanandeFullName' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.RanandeFullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.PelakColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MahalBargiriID() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.MahalBargiriIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.MahalBargiriIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMahal() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.NameMahalColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.NameMahalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MabdaID() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.MabdaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.MabdaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMabda() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.NameMabdaColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.NameMabdaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaghsadID() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.MaghsadIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.MaghsadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMaghsad() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.NameMaghsadColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.NameMaghsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoeBar() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.NoeBarColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.NoeBarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tozihat() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.TozihatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tozihat' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.TozihatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhEzamBargiri() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.TarikhEzamBargiriColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhEzamBargiriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhHozoorMahalBargiri() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.TarikhHozoorMahalBargiriColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhHozoorMahalBargiriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatHozoorMahalBagiri() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.SaatHozoorMahalBagiriColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatHozoorMahalBagiriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareBarnameRaft() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.ShomareBarnameRaftColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.ShomareBarnameRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBarnameRaft() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.TarikhBarnameRaftColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhBarnameRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatSodoorBarname() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.SaatSodoorBarnameColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatSodoorBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KiloometrKhorroojMojtame() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.KiloometrKhorroojMojtameColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.KiloometrKhorroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MeghdarSookhtKhorooj() As Integer
            Get
                Return CType(Me(Me.tablevSelectNavgan.MeghdarSookhtKhoroojColumn),Integer)
            End Get
            Set
                Me(Me.tablevSelectNavgan.MeghdarSookhtKhoroojColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhKhoroojMojtame() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.TarikhKhoroojMojtameColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatKhoroojMojtame() As String
            Get
                Return CType(Me(Me.tablevSelectNavgan.SaatKhoroojMojtameColumn),String)
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KiloometrVoroodMojtame() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.KiloometrVoroodMojtameColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KiloometrVoroodMojtame' in table 'vSelectNavgan' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.KiloometrVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MeghdarSookhtVorood() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.MeghdarSookhtVoroodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeghdarSookhtVorood' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.MeghdarSookhtVoroodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MasafatTeyShode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.MasafatTeyShodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MasafatTeyShode' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.MasafatTeyShodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SookhtMasrafShode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.SookhtMasrafShodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SookhtMasrafShode' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.SookhtMasrafShodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhHozoorMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.TarikhHozoorMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhHozoorMahalTakhliyeAval' in table 'vSelectNavgan' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhHozoorMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatHozoorMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.SaatHozoorMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatHozoorMahalTakhliyeAval' in table 'vSelectNavgan' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatHozoorMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBargiriMojadad() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.TarikhBargiriMojadadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhBargiriMojadad' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhBargiriMojadadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatBargiriMojadad() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.SaatBargiriMojadadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatBargiriMojadad' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatBargiriMojadadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhKhoroojMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.TarikhKhoroojMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhKhoroojMahalTakhliyeAval' in table 'vSelectNavgan' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhKhoroojMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatKhooojMahalTakhliyeAval() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.SaatKhooojMahalTakhliyeAvalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatKhooojMahalTakhliyeAval' in table 'vSelectNavgan' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatKhooojMahalTakhliyeAvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareBarnameBargasht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.ShomareBarnameBargashtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareBarnameBargasht' in table 'vSelectNavgan' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.ShomareBarnameBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBarnameBargasht() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.TarikhBarnameBargashtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhBarnameBargasht' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhBarnameBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MablaghKerayeBargasht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.MablaghKerayeBargashtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MablaghKerayeBargasht' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.MablaghKerayeBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MablaghKerayeRaft() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.MablaghKerayeRaftColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MablaghKerayeRaft' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.MablaghKerayeRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.TarikhVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhVoroodMojtame' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.TarikhVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSelectNavgan.SaatVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatVoroodMojtame' in table 'vSelectNavgan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectNavgan.SaatVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DarMamooriyat() As Boolean
            Get
                Return CType(Me(Me.tablevSelectNavgan.DarMamooriyatColumn),Boolean)
            End Get
            Set
                Me(Me.tablevSelectNavgan.DarMamooriyatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRanandeFullNameNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.RanandeFullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRanandeFullNameNull()
            Me(Me.tablevSelectNavgan.RanandeFullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTozihatNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.TozihatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTozihatNull()
            Me(Me.tablevSelectNavgan.TozihatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKiloometrVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.KiloometrVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKiloometrVoroodMojtameNull()
            Me(Me.tablevSelectNavgan.KiloometrVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMeghdarSookhtVoroodNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.MeghdarSookhtVoroodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMeghdarSookhtVoroodNull()
            Me(Me.tablevSelectNavgan.MeghdarSookhtVoroodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasafatTeyShodeNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.MasafatTeyShodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasafatTeyShodeNull()
            Me(Me.tablevSelectNavgan.MasafatTeyShodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSookhtMasrafShodeNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.SookhtMasrafShodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSookhtMasrafShodeNull()
            Me(Me.tablevSelectNavgan.SookhtMasrafShodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhHozoorMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.TarikhHozoorMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhHozoorMahalTakhliyeAvalNull()
            Me(Me.tablevSelectNavgan.TarikhHozoorMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatHozoorMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.SaatHozoorMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatHozoorMahalTakhliyeAvalNull()
            Me(Me.tablevSelectNavgan.SaatHozoorMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhBargiriMojadadNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.TarikhBargiriMojadadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhBargiriMojadadNull()
            Me(Me.tablevSelectNavgan.TarikhBargiriMojadadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatBargiriMojadadNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.SaatBargiriMojadadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatBargiriMojadadNull()
            Me(Me.tablevSelectNavgan.SaatBargiriMojadadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhKhoroojMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.TarikhKhoroojMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhKhoroojMahalTakhliyeAvalNull()
            Me(Me.tablevSelectNavgan.TarikhKhoroojMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatKhooojMahalTakhliyeAvalNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.SaatKhooojMahalTakhliyeAvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatKhooojMahalTakhliyeAvalNull()
            Me(Me.tablevSelectNavgan.SaatKhooojMahalTakhliyeAvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareBarnameBargashtNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.ShomareBarnameBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareBarnameBargashtNull()
            Me(Me.tablevSelectNavgan.ShomareBarnameBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhBarnameBargashtNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.TarikhBarnameBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhBarnameBargashtNull()
            Me(Me.tablevSelectNavgan.TarikhBarnameBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMablaghKerayeBargashtNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.MablaghKerayeBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMablaghKerayeBargashtNull()
            Me(Me.tablevSelectNavgan.MablaghKerayeBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMablaghKerayeRaftNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.MablaghKerayeRaftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMablaghKerayeRaftNull()
            Me(Me.tablevSelectNavgan.MablaghKerayeRaftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.TarikhVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhVoroodMojtameNull()
            Me(Me.tablevSelectNavgan.TarikhVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tablevSelectNavgan.SaatVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatVoroodMojtameNull()
            Me(Me.tablevSelectNavgan.SaatVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_TamiratRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Tamirat As tbl_TamiratDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Tamirat = CType(Me.Table,tbl_TamiratDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactorID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Tamirat.FactorIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.FactorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tabletbl_Tamirat.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Tamirat.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Return CType(Me(Me.tabletbl_Tamirat.pDateColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameTamirgah() As String
            Get
                Return CType(Me(Me.tabletbl_Tamirat.NameTamirgahColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.NameTamirgahColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KhesaratSales() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Tamirat.KhesaratSalesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KhesaratSales' in table 'tbl_Tamirat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Tamirat.KhesaratSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KhesaratBadane() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Tamirat.KhesaratBadaneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KhesaratBadane' in table 'tbl_Tamirat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Tamirat.KhesaratBadaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsProcess() As Boolean
            Get
                Return CType(Me(Me.tabletbl_Tamirat.IsProcessColumn),Boolean)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.IsProcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PaymentStatus() As Boolean
            Get
                Return CType(Me(Me.tabletbl_Tamirat.PaymentStatusColumn),Boolean)
            End Get
            Set
                Me(Me.tabletbl_Tamirat.PaymentStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MashinRow() As tbl_MashinRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_Tamirat_tbl_Mashin1")),tbl_MashinRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_Tamirat_tbl_Mashin1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_RanandeganRow() As tbl_RanandeganRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_Tamirat_tbl_Ranandegan1")),tbl_RanandeganRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_Tamirat_tbl_Ranandegan1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKhesaratSalesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Tamirat.KhesaratSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKhesaratSalesNull()
            Me(Me.tabletbl_Tamirat.KhesaratSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKhesaratBadaneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Tamirat.KhesaratBadaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKhesaratBadaneNull()
            Me(Me.tabletbl_Tamirat.KhesaratBadaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_TamiratJoziyatRows() As tbl_TamiratJoziyatRow()
            If (Me.Table.ChildRelations("FK_tbl_TamirgahJoziyat_tbl_Tamirat") Is Nothing) Then
                Return New tbl_TamiratJoziyatRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_TamirgahJoziyat_tbl_Tamirat")),tbl_TamiratJoziyatRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_TankhahDetail_FactorRows() As tbl_TankhahDetail_FactorRow()
            If (Me.Table.ChildRelations("FK_tbl_TankhahDetail_tbl_Tamirat") Is Nothing) Then
                Return New tbl_TankhahDetail_FactorRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_TankhahDetail_tbl_Tamirat")),tbl_TankhahDetail_FactorRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_TamiratJoziyatRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_TamiratJoziyat As tbl_TamiratJoziyatDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_TamiratJoziyat = CType(Me.Table,tbl_TamiratJoziyatDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tabletbl_TamiratJoziyat.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_TamiratJoziyat.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactorID() As Integer
            Get
                Return CType(Me(Me.tabletbl_TamiratJoziyat.FactorIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_TamiratJoziyat.FactorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SharhTamirat() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TamiratJoziyat.SharhTamiratColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SharhTamirat' in table 'tbl_TamiratJoziyat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TamiratJoziyat.SharhTamiratColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mablagh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TamiratJoziyat.MablaghColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mablagh' in table 'tbl_TamiratJoziyat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TamiratJoziyat.MablaghColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_TamiratRow() As tbl_TamiratRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_TamirgahJoziyat_tbl_Tamirat")),tbl_TamiratRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_TamirgahJoziyat_tbl_Tamirat"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharhTamiratNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TamiratJoziyat.SharhTamiratColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharhTamiratNull()
            Me(Me.tabletbl_TamiratJoziyat.SharhTamiratColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMablaghNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TamiratJoziyat.MablaghColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMablaghNull()
            Me(Me.tabletbl_TamiratJoziyat.MablaghColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SelectYearsRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelectYears As SelectYearsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelectYears = CType(Me.Table,SelectYearsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Years() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelectYears.YearsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Years' in table 'SelectYears' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelectYears.YearsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYearsNull() As Boolean
            Return Me.IsNull(Me.tableSelectYears.YearsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYearsNull()
            Me(Me.tableSelectYears.YearsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class usp_GetFactorPriceByMonthsRow
        Inherits Global.System.Data.DataRow
        
        Private tableusp_GetFactorPriceByMonths As usp_GetFactorPriceByMonthsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableusp_GetFactorPriceByMonths = CType(Me.Table,usp_GetFactorPriceByMonthsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Months() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetFactorPriceByMonths.MonthsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Months' in table 'usp_GetFactorPriceByMonths' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetFactorPriceByMonths.MonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetFactorPriceByMonths.SubTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'usp_GetFactorPriceByMonths' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetFactorPriceByMonths.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonthsNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetFactorPriceByMonths.MonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonthsNull()
            Me(Me.tableusp_GetFactorPriceByMonths.MonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetFactorPriceByMonths.SubTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubTotalNull()
            Me(Me.tableusp_GetFactorPriceByMonths.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_SettingRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Setting As tbl_SettingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Setting = CType(Me.Table,tbl_SettingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Setting.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Setting.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SahmRanande() As Short
            Get
                Return CType(Me(Me.tabletbl_Setting.SahmRanandeColumn),Short)
            End Get
            Set
                Me(Me.tabletbl_Setting.SahmRanandeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HazineGhaza_Raft() As Short
            Get
                Return CType(Me(Me.tabletbl_Setting.HazineGhaza_RaftColumn),Short)
            End Get
            Set
                Me(Me.tabletbl_Setting.HazineGhaza_RaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HazineGhaza_Bargasht() As Short
            Get
                Return CType(Me(Me.tabletbl_Setting.HazineGhaza_BargashtColumn),Short)
            End Get
            Set
                Me(Me.tabletbl_Setting.HazineGhaza_BargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MablaghSookht() As Integer
            Get
                Return CType(Me(Me.tabletbl_Setting.MablaghSookhtColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Setting.MablaghSookhtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HaghPayane() As Short
            Get
                Return CType(Me(Me.tabletbl_Setting.HaghPayaneColumn),Short)
            End Get
            Set
                Me(Me.tabletbl_Setting.HaghPayaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KomisionBarname() As Short
            Get
                Return CType(Me(Me.tabletbl_Setting.KomisionBarnameColumn),Short)
            End Get
            Set
                Me(Me.tabletbl_Setting.KomisionBarnameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_MashinRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Mashin As tbl_MashinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Mashin = CType(Me.Table,tbl_MashinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Mashin.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Mashin.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KafiID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Mashin.KafiIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Mashin.KafiIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tabletbl_Mashin.PelakColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Mashin.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShasiNumber() As String
            Get
                Return CType(Me(Me.tabletbl_Mashin.ShasiNumberColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Mashin.ShasiNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MotorNumber() As String
            Get
                Return CType(Me(Me.tabletbl_Mashin.MotorNumberColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Mashin.MotorNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_KafiRow() As tbl_KafiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_Mashin_tbl_Kafi")),tbl_KafiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_Mashin_tbl_Kafi"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_MashinRanandeRows() As tbl_MashinRanandeRow()
            If (Me.Table.ChildRelations("FK_tbl_MashinRanande_tbl_Mashin1") Is Nothing) Then
                Return New tbl_MashinRanandeRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_MashinRanande_tbl_Mashin1")),tbl_MashinRanandeRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_EzamNavganRows() As tbl_EzamNavganRow()
            If (Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Mashin1") Is Nothing) Then
                Return New tbl_EzamNavganRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Mashin1")),tbl_EzamNavganRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_TamiratRows() As tbl_TamiratRow()
            If (Me.Table.ChildRelations("FK_tbl_Tamirat_tbl_Mashin1") Is Nothing) Then
                Return New tbl_TamiratRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_Tamirat_tbl_Mashin1")),tbl_TamiratRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_KafiRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Kafi As tbl_KafiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Kafi = CType(Me.Table,tbl_KafiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KafiID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Kafi.KafiIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Kafi.KafiIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShasiNumber() As String
            Get
                Return CType(Me(Me.tabletbl_Kafi.ShasiNumberColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Kafi.ShasiNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tabletbl_Kafi.PelakColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Kafi.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_MashinRows() As tbl_MashinRow()
            If (Me.Table.ChildRelations("FK_tbl_Mashin_tbl_Kafi") Is Nothing) Then
                Return New tbl_MashinRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_Mashin_tbl_Kafi")),tbl_MashinRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_RanandeganRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Ranandegan As tbl_RanandeganDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Ranandegan = CType(Me.Table,tbl_RanandeganDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tabletbl_Ranandegan.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fname() As String
            Get
                Return CType(Me(Me.tabletbl_Ranandegan.fnameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.fnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lname() As String
            Get
                Return CType(Me(Me.tabletbl_Ranandegan.lnameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.lnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodeMelli() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.CodeMelliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodeMelli' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.CodeMelliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Return CType(Me(Me.tabletbl_Ranandegan.AddressColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TelNumbers() As String
            Get
                Return CType(Me(Me.tabletbl_Ranandegan.TelNumbersColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.TelNumbersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Picture() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.PictureColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picture' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.PictureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KartHooshmandNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KartHooshmandNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KartHooshmandNo' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KartHooshmandNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KH_StartDate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KH_StartDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KH_StartDate' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KH_StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KH_EndDate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KH_EndDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KH_EndDate' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KH_EndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KartSalamatNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KartSalamatNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KartSalamatNo' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KartSalamatNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KS_StartDate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KS_StartDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KS_StartDate' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KS_StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KS_EndDate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KS_EndDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KS_EndDate' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KS_EndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KartGovahinameNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KartGovahinameNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KartGovahinameNo' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KartGovahinameNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KG_StartDate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KG_StartDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KG_StartDate' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KG_StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KG_EndDate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Ranandegan.KG_EndDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KG_EndDate' in table 'tbl_Ranandegan' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Ranandegan.KG_EndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodeMelliNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.CodeMelliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodeMelliNull()
            Me(Me.tabletbl_Ranandegan.CodeMelliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPictureNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.PictureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPictureNull()
            Me(Me.tabletbl_Ranandegan.PictureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKartHooshmandNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KartHooshmandNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKartHooshmandNoNull()
            Me(Me.tabletbl_Ranandegan.KartHooshmandNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKH_StartDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KH_StartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKH_StartDateNull()
            Me(Me.tabletbl_Ranandegan.KH_StartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKH_EndDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KH_EndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKH_EndDateNull()
            Me(Me.tabletbl_Ranandegan.KH_EndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKartSalamatNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KartSalamatNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKartSalamatNoNull()
            Me(Me.tabletbl_Ranandegan.KartSalamatNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKS_StartDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KS_StartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKS_StartDateNull()
            Me(Me.tabletbl_Ranandegan.KS_StartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKS_EndDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KS_EndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKS_EndDateNull()
            Me(Me.tabletbl_Ranandegan.KS_EndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKartGovahinameNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KartGovahinameNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKartGovahinameNoNull()
            Me(Me.tabletbl_Ranandegan.KartGovahinameNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKG_StartDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KG_StartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKG_StartDateNull()
            Me(Me.tabletbl_Ranandegan.KG_StartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKG_EndDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Ranandegan.KG_EndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKG_EndDateNull()
            Me(Me.tabletbl_Ranandegan.KG_EndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_MashinRanandeRows() As tbl_MashinRanandeRow()
            If (Me.Table.ChildRelations("FK_tbl_MashinRanande_tbl_Ranandegan1") Is Nothing) Then
                Return New tbl_MashinRanandeRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_MashinRanande_tbl_Ranandegan1")),tbl_MashinRanandeRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_EzamNavganRows() As tbl_EzamNavganRow()
            If (Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Ranandegan1") Is Nothing) Then
                Return New tbl_EzamNavganRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_EzamNavgan_tbl_Ranandegan1")),tbl_EzamNavganRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_TamiratRows() As tbl_TamiratRow()
            If (Me.Table.ChildRelations("FK_tbl_Tamirat_tbl_Ranandegan1") Is Nothing) Then
                Return New tbl_TamiratRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_Tamirat_tbl_Ranandegan1")),tbl_TamiratRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_NavganStatusRows() As tbl_NavganStatusRow()
            If (Me.Table.ChildRelations("FK_tbl_NavganStatus_tbl_Ranandegan") Is Nothing) Then
                Return New tbl_NavganStatusRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_NavganStatus_tbl_Ranandegan")),tbl_NavganStatusRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vSelectRanandeganMashinRow
        Inherits Global.System.Data.DataRow
        
        Private tablevSelectRanandeganMashin As vSelectRanandeganMashinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevSelectRanandeganMashin = CType(Me.Table,vSelectRanandeganMashinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tablevSelectRanandeganMashin.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tablevSelectRanandeganMashin.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fullname() As String
            Get
                Return CType(Me(Me.tablevSelectRanandeganMashin.FullnameColumn),String)
            End Get
            Set
                Me(Me.tablevSelectRanandeganMashin.FullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Return CType(Me(Me.tablevSelectRanandeganMashin.AddressColumn),String)
            End Get
            Set
                Me(Me.tablevSelectRanandeganMashin.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TelNumbers() As String
            Get
                Return CType(Me(Me.tablevSelectRanandeganMashin.TelNumbersColumn),String)
            End Get
            Set
                Me(Me.tablevSelectRanandeganMashin.TelNumbersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSelectRanandeganMashin.MashinIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MashinID' in table 'vSelectRanandeganMashin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSelectRanandeganMashin.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMashinIDNull() As Boolean
            Return Me.IsNull(Me.tablevSelectRanandeganMashin.MashinIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMashinIDNull()
            Me(Me.tablevSelectRanandeganMashin.MashinIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_NavganStatusRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_NavganStatus As tbl_NavganStatusDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_NavganStatus = CType(Me.Table,tbl_NavganStatusDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idxRow() As Integer
            Get
                Return CType(Me(Me.tabletbl_NavganStatus.idxRowColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.idxRowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tabletbl_NavganStatus.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Return CType(Me(Me.tabletbl_NavganStatus.pDateColumn),String)
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatSafar() As Byte
            Get
                Try 
                    Return CType(Me(Me.tabletbl_NavganStatus.VaziyatSafarColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatSafar' in table 'tbl_NavganStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.VaziyatSafarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatBazgasht() As Byte
            Get
                Try 
                    Return CType(Me(Me.tabletbl_NavganStatus.VaziyatBazgashtColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatBazgasht' in table 'tbl_NavganStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.VaziyatBazgashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatTamirgah() As Byte
            Get
                Try 
                    Return CType(Me(Me.tabletbl_NavganStatus.VaziyatTamirgahColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatTamirgah' in table 'tbl_NavganStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.VaziyatTamirgahColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatRanandeh() As Byte
            Get
                Try 
                    Return CType(Me(Me.tabletbl_NavganStatus.VaziyatRanandehColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatRanandeh' in table 'tbl_NavganStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.VaziyatRanandehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_NavganStatus.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'tbl_NavganStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_NavganStatus.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_RanandeganRow() As tbl_RanandeganRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_NavganStatus_tbl_Ranandegan")),tbl_RanandeganRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_NavganStatus_tbl_Ranandegan"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatSafarNull() As Boolean
            Return Me.IsNull(Me.tabletbl_NavganStatus.VaziyatSafarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatSafarNull()
            Me(Me.tabletbl_NavganStatus.VaziyatSafarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatBazgashtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_NavganStatus.VaziyatBazgashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatBazgashtNull()
            Me(Me.tabletbl_NavganStatus.VaziyatBazgashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatTamirgahNull() As Boolean
            Return Me.IsNull(Me.tabletbl_NavganStatus.VaziyatTamirgahColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatTamirgahNull()
            Me(Me.tabletbl_NavganStatus.VaziyatTamirgahColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatRanandehNull() As Boolean
            Return Me.IsNull(Me.tabletbl_NavganStatus.VaziyatRanandehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatRanandehNull()
            Me(Me.tabletbl_NavganStatus.VaziyatRanandehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_NavganStatus.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tabletbl_NavganStatus.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class usp_KarkardeRoozane4PrintRow
        Inherits Global.System.Data.DataRow
        
        Private tableusp_KarkardeRoozane4Print As usp_KarkardeRoozane4PrintDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableusp_KarkardeRoozane4Print = CType(Me.Table,usp_KarkardeRoozane4PrintDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.OperationCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperationCode' in table 'usp_KarkardeRoozane4Print' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.OperationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.RanandePersonalCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RanandePersonalCode' in table 'usp_KarkardeRoozane4Print' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandeFullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.RanandeFullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RanandeFullName' in table 'usp_KarkardeRoozane4Print' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.RanandeFullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.PelakColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pelak' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMabda() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.NameMabdaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameMabda' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.NameMabdaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMaghsad() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.NameMaghsadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameMaghsad' in table 'usp_KarkardeRoozane4Print' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.NameMaghsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoeBar() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.NoeBarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoeBar' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.NoeBarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatKhoroojMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.SaatKhoroojMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatKhoroojMojtame' in table 'usp_KarkardeRoozane4Print' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.SaatKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.SaatVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatVoroodMojtame' in table 'usp_KarkardeRoozane4Print' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.SaatVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.pDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pDate' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DarRahRaft() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.DarRahRaftColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DarRahRaft' in table 'usp_KarkardeRoozane4Print' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.DarRahRaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DarRahBargasht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.DarRahBargashtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DarRahBargasht' in table 'usp_KarkardeRoozane4Print' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.DarRahBargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KarDakheli() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.KarDakheliColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KarDakheli' in table 'usp_KarkardeRoozane4Print' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.KarDakheliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Khali() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.KhaliColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Khali' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.KhaliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Por() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.PorColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Por' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.PorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sayer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.SayerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sayer' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.SayerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TamirRena() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.TamirRenaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TamirRena' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.TamirRenaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TamirMotefareghe() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.TamirMotefaregheColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TamirMotefareghe' in table 'usp_KarkardeRoozane4Print' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.TamirMotefaregheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TamirKharkhane() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.TamirKharkhaneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TamirKharkhane' in table 'usp_KarkardeRoozane4Print' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.TamirKharkhaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Morkhasi() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.MorkhasiColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Morkhasi' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.MorkhasiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Gheybat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.GheybatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gheybat' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.GheybatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Esterahat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.EsterahatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Esterahat' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.EsterahatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tasadof() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.TasadofColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tasadof' in table 'usp_KarkardeRoozane4Print' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.TasadofColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Print.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'usp_KarkardeRoozane4Print' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Print.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationCodeNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.OperationCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationCodeNull()
            Me(Me.tableusp_KarkardeRoozane4Print.OperationCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRanandePersonalCodeNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.RanandePersonalCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRanandePersonalCodeNull()
            Me(Me.tableusp_KarkardeRoozane4Print.RanandePersonalCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRanandeFullNameNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.RanandeFullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRanandeFullNameNull()
            Me(Me.tableusp_KarkardeRoozane4Print.RanandeFullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPelakNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.PelakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPelakNull()
            Me(Me.tableusp_KarkardeRoozane4Print.PelakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNameMabdaNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.NameMabdaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNameMabdaNull()
            Me(Me.tableusp_KarkardeRoozane4Print.NameMabdaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNameMaghsadNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.NameMaghsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNameMaghsadNull()
            Me(Me.tableusp_KarkardeRoozane4Print.NameMaghsadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoeBarNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.NoeBarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoeBarNull()
            Me(Me.tableusp_KarkardeRoozane4Print.NoeBarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatKhoroojMojtameNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.SaatKhoroojMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatKhoroojMojtameNull()
            Me(Me.tableusp_KarkardeRoozane4Print.SaatKhoroojMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.SaatVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatVoroodMojtameNull()
            Me(Me.tableusp_KarkardeRoozane4Print.SaatVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspDateNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.pDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpDateNull()
            Me(Me.tableusp_KarkardeRoozane4Print.pDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDarRahRaftNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.DarRahRaftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDarRahRaftNull()
            Me(Me.tableusp_KarkardeRoozane4Print.DarRahRaftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDarRahBargashtNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.DarRahBargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDarRahBargashtNull()
            Me(Me.tableusp_KarkardeRoozane4Print.DarRahBargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKarDakheliNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.KarDakheliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKarDakheliNull()
            Me(Me.tableusp_KarkardeRoozane4Print.KarDakheliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKhaliNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.KhaliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKhaliNull()
            Me(Me.tableusp_KarkardeRoozane4Print.KhaliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.PorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorNull()
            Me(Me.tableusp_KarkardeRoozane4Print.PorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSayerNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.SayerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSayerNull()
            Me(Me.tableusp_KarkardeRoozane4Print.SayerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTamirRenaNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.TamirRenaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTamirRenaNull()
            Me(Me.tableusp_KarkardeRoozane4Print.TamirRenaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTamirMotefaregheNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.TamirMotefaregheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTamirMotefaregheNull()
            Me(Me.tableusp_KarkardeRoozane4Print.TamirMotefaregheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTamirKharkhaneNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.TamirKharkhaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTamirKharkhaneNull()
            Me(Me.tableusp_KarkardeRoozane4Print.TamirKharkhaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMorkhasiNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.MorkhasiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMorkhasiNull()
            Me(Me.tableusp_KarkardeRoozane4Print.MorkhasiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGheybatNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.GheybatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGheybatNull()
            Me(Me.tableusp_KarkardeRoozane4Print.GheybatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEsterahatNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.EsterahatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEsterahatNull()
            Me(Me.tableusp_KarkardeRoozane4Print.EsterahatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTasadofNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.TasadofColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTasadofNull()
            Me(Me.tableusp_KarkardeRoozane4Print.TasadofColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Print.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableusp_KarkardeRoozane4Print.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class usp_KarkardeRoozane4ShowRow
        Inherits Global.System.Data.DataRow
        
        Private tableusp_KarkardeRoozane4Show As usp_KarkardeRoozane4ShowDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableusp_KarkardeRoozane4Show = CType(Me.Table,usp_KarkardeRoozane4ShowDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.OperationCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperationCode' in table 'usp_KarkardeRoozane4Show' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.OperationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.RanandePersonalCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RanandePersonalCode' in table 'usp_KarkardeRoozane4Show' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandeFullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.RanandeFullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RanandeFullName' in table 'usp_KarkardeRoozane4Show' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.RanandeFullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.PelakColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pelak' in table 'usp_KarkardeRoozane4Show' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMabda() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.NameMabdaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameMabda' in table 'usp_KarkardeRoozane4Show' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.NameMabdaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMaghsad() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.NameMaghsadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameMaghsad' in table 'usp_KarkardeRoozane4Show' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.NameMaghsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoeBar() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.NoeBarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoeBar' in table 'usp_KarkardeRoozane4Show' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.NoeBarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatKhoroojMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.SaatKhoroojMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatKhoroojMojtame' in table 'usp_KarkardeRoozane4Show' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.SaatKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SaatVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.SaatVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaatVoroodMojtame' in table 'usp_KarkardeRoozane4Show' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.SaatVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.pDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pDate' in table 'usp_KarkardeRoozane4Show' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatSafar() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.VaziyatSafarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatSafar' in table 'usp_KarkardeRoozane4Show' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.VaziyatSafarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatBazgasht() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.VaziyatBazgashtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatBazgasht' in table 'usp_KarkardeRoozane4Show' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.VaziyatBazgashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatTamirgah() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.VaziyatTamirgahColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatTamirgah' in table 'usp_KarkardeRoozane4Show' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.VaziyatTamirgahColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VaziyatRanandeh() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.VaziyatRanandehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaziyatRanandeh' in table 'usp_KarkardeRoozane4Show' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.VaziyatRanandehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_KarkardeRoozane4Show.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'usp_KarkardeRoozane4Show' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_KarkardeRoozane4Show.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationCodeNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.OperationCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationCodeNull()
            Me(Me.tableusp_KarkardeRoozane4Show.OperationCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRanandePersonalCodeNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.RanandePersonalCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRanandePersonalCodeNull()
            Me(Me.tableusp_KarkardeRoozane4Show.RanandePersonalCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRanandeFullNameNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.RanandeFullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRanandeFullNameNull()
            Me(Me.tableusp_KarkardeRoozane4Show.RanandeFullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPelakNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.PelakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPelakNull()
            Me(Me.tableusp_KarkardeRoozane4Show.PelakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNameMabdaNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.NameMabdaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNameMabdaNull()
            Me(Me.tableusp_KarkardeRoozane4Show.NameMabdaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNameMaghsadNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.NameMaghsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNameMaghsadNull()
            Me(Me.tableusp_KarkardeRoozane4Show.NameMaghsadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoeBarNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.NoeBarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoeBarNull()
            Me(Me.tableusp_KarkardeRoozane4Show.NoeBarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatKhoroojMojtameNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.SaatKhoroojMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatKhoroojMojtameNull()
            Me(Me.tableusp_KarkardeRoozane4Show.SaatKhoroojMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaatVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.SaatVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaatVoroodMojtameNull()
            Me(Me.tableusp_KarkardeRoozane4Show.SaatVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspDateNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.pDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpDateNull()
            Me(Me.tableusp_KarkardeRoozane4Show.pDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatSafarNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.VaziyatSafarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatSafarNull()
            Me(Me.tableusp_KarkardeRoozane4Show.VaziyatSafarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatBazgashtNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.VaziyatBazgashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatBazgashtNull()
            Me(Me.tableusp_KarkardeRoozane4Show.VaziyatBazgashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatTamirgahNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.VaziyatTamirgahColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatTamirgahNull()
            Me(Me.tableusp_KarkardeRoozane4Show.VaziyatTamirgahColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyatRanandehNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.VaziyatRanandehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyatRanandehNull()
            Me(Me.tableusp_KarkardeRoozane4Show.VaziyatRanandehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableusp_KarkardeRoozane4Show.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableusp_KarkardeRoozane4Show.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_SanadRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Sanad As tbl_SanadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Sanad = CType(Me.Table,tbl_SanadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationCode() As Integer
            Get
                Return CType(Me(Me.tabletbl_Sanad.OperationCodeColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Sanad.OperationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OrderID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Sanad.OrderIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Sanad.OrderIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareBarname() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.ShomareBarnameColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareBarname' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.ShomareBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhBarname() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.TarikhBarnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhBarname' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.TarikhBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MabdaID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.MabdaIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MabdaID' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.MabdaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaghsadID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.MaghsadIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaghsadID' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.MaghsadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoeBar() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.NoeBarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoeBar' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.NoeBarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MabnaKomision() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.MabnaKomisionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MabnaKomision' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.MabnaKomisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KolKerayeBarname() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.KolKerayeBarnameColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KolKerayeBarname' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.KolKerayeBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PayeKerayeBarname() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.PayeKerayeBarnameColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayeKerayeBarname' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.PayeKerayeBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DaryaftNaghdi() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.DaryaftNaghdiColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DaryaftNaghdi' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.DaryaftNaghdiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HaghPayane() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.HaghPayaneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HaghPayane' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.HaghPayaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KomisionBarname() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.KomisionBarnameColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KomisionBarname' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.KomisionBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BimeBarbari() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.BimeBarbariColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BimeBarbari' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.BimeBarbariColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TafavotKomision() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.TafavotKomisionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TafavotKomision' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.TafavotKomisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BimeOmr() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.BimeOmrColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BimeOmr' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.BimeOmrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bargiri_Takhliye() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.Bargiri_TakhliyeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bargiri_Takhliye' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.Bargiri_TakhliyeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JarimePolice() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.JarimePoliceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JarimePolice' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.JarimePoliceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Nobat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.NobatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nobat' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.NobatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AvarezOtooban() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.AvarezOtoobanColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AvarezOtooban' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.AvarezOtoobanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SahmRanande() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.SahmRanandeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SahmRanande' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.SahmRanandeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HazineGhaza_Raft() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.HazineGhaza_RaftColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HazineGhaza_Raft' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.HazineGhaza_RaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HazineGhaza_Bargasht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.HazineGhaza_BargashtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HazineGhaza_Bargasht' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.HazineGhaza_BargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MeghdarSookht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.MeghdarSookhtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeghdarSookht' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.MeghdarSookhtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Darsad_SahmRanande() As Single
            Get
                Return CType(Me(Me.tabletbl_Sanad.Darsad_SahmRanandeColumn),Single)
            End Get
            Set
                Me(Me.tabletbl_Sanad.Darsad_SahmRanandeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Darsad_HazineGhaza_Raft() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.Darsad_HazineGhaza_RaftColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Darsad_HazineGhaza_Raft' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.Darsad_HazineGhaza_RaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Darsad_HazineGhaza_Bargasht() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.Darsad_HazineGhaza_BargashtColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Darsad_HazineGhaza_Bargasht' in table 'tbl_Sanad' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.Darsad_HazineGhaza_BargashtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MablaghSookht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.MablaghSookhtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MablaghSookht' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.MablaghSookhtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Darsad_HaghPayane() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.Darsad_HaghPayaneColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Darsad_HaghPayane' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.Darsad_HaghPayaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Darsad_KomisionBarname() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.Darsad_KomisionBarnameColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Darsad_KomisionBarname' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.Darsad_KomisionBarnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsProcess() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Sanad.IsProcessColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsProcess' in table 'tbl_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Sanad.IsProcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_EzamNavganRow() As tbl_EzamNavganRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_Sanad_tbl_EzamNavgan")),tbl_EzamNavganRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_Sanad_tbl_EzamNavgan"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MabdaRow() As tbl_MabdaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_Sanad_tbl_Mabda")),tbl_MabdaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_Sanad_tbl_Mabda"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_MaghsadRow() As tbl_MaghsadRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_Sanad_tbl_Maghsad")),tbl_MaghsadRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_Sanad_tbl_Maghsad"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareBarnameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.ShomareBarnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareBarnameNull()
            Me(Me.tabletbl_Sanad.ShomareBarnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhBarnameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.TarikhBarnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhBarnameNull()
            Me(Me.tabletbl_Sanad.TarikhBarnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMabdaIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.MabdaIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMabdaIDNull()
            Me(Me.tabletbl_Sanad.MabdaIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaghsadIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.MaghsadIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaghsadIDNull()
            Me(Me.tabletbl_Sanad.MaghsadIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoeBarNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.NoeBarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoeBarNull()
            Me(Me.tabletbl_Sanad.NoeBarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMabnaKomisionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.MabnaKomisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMabnaKomisionNull()
            Me(Me.tabletbl_Sanad.MabnaKomisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKolKerayeBarnameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.KolKerayeBarnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKolKerayeBarnameNull()
            Me(Me.tabletbl_Sanad.KolKerayeBarnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPayeKerayeBarnameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.PayeKerayeBarnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPayeKerayeBarnameNull()
            Me(Me.tabletbl_Sanad.PayeKerayeBarnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDaryaftNaghdiNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.DaryaftNaghdiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDaryaftNaghdiNull()
            Me(Me.tabletbl_Sanad.DaryaftNaghdiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHaghPayaneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.HaghPayaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHaghPayaneNull()
            Me(Me.tabletbl_Sanad.HaghPayaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKomisionBarnameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.KomisionBarnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKomisionBarnameNull()
            Me(Me.tabletbl_Sanad.KomisionBarnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBimeBarbariNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.BimeBarbariColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBimeBarbariNull()
            Me(Me.tabletbl_Sanad.BimeBarbariColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTafavotKomisionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.TafavotKomisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTafavotKomisionNull()
            Me(Me.tabletbl_Sanad.TafavotKomisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBimeOmrNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.BimeOmrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBimeOmrNull()
            Me(Me.tabletbl_Sanad.BimeOmrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBargiri_TakhliyeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.Bargiri_TakhliyeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBargiri_TakhliyeNull()
            Me(Me.tabletbl_Sanad.Bargiri_TakhliyeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJarimePoliceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.JarimePoliceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJarimePoliceNull()
            Me(Me.tabletbl_Sanad.JarimePoliceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNobatNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.NobatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNobatNull()
            Me(Me.tabletbl_Sanad.NobatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAvarezOtoobanNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.AvarezOtoobanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAvarezOtoobanNull()
            Me(Me.tabletbl_Sanad.AvarezOtoobanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSahmRanandeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.SahmRanandeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSahmRanandeNull()
            Me(Me.tabletbl_Sanad.SahmRanandeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHazineGhaza_RaftNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.HazineGhaza_RaftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHazineGhaza_RaftNull()
            Me(Me.tabletbl_Sanad.HazineGhaza_RaftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHazineGhaza_BargashtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.HazineGhaza_BargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHazineGhaza_BargashtNull()
            Me(Me.tabletbl_Sanad.HazineGhaza_BargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMeghdarSookhtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.MeghdarSookhtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMeghdarSookhtNull()
            Me(Me.tabletbl_Sanad.MeghdarSookhtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotalNull()
            Me(Me.tabletbl_Sanad.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDarsad_HazineGhaza_RaftNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.Darsad_HazineGhaza_RaftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDarsad_HazineGhaza_RaftNull()
            Me(Me.tabletbl_Sanad.Darsad_HazineGhaza_RaftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDarsad_HazineGhaza_BargashtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.Darsad_HazineGhaza_BargashtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDarsad_HazineGhaza_BargashtNull()
            Me(Me.tabletbl_Sanad.Darsad_HazineGhaza_BargashtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMablaghSookhtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.MablaghSookhtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMablaghSookhtNull()
            Me(Me.tabletbl_Sanad.MablaghSookhtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDarsad_HaghPayaneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.Darsad_HaghPayaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDarsad_HaghPayaneNull()
            Me(Me.tabletbl_Sanad.Darsad_HaghPayaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDarsad_KomisionBarnameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.Darsad_KomisionBarnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDarsad_KomisionBarnameNull()
            Me(Me.tabletbl_Sanad.Darsad_KomisionBarnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsProcessNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Sanad.IsProcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsProcessNull()
            Me(Me.tabletbl_Sanad.IsProcessColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_TankhahRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Tankhah As tbl_TankhahDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Tankhah = CType(Me.Table,tbl_TankhahDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TankhahID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Tankhah.TankhahIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Tankhah.TankhahIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TankhahSanadID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Tankhah.TankhahSanadIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Tankhah.TankhahSanadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Return CType(Me(Me.tabletbl_Tankhah.pDateColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Tankhah.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vajhe() As String
            Get
                Return CType(Me(Me.tabletbl_Tankhah.VajheColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Tankhah.VajheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TotalValue() As Integer
            Get
                Return CType(Me(Me.tabletbl_Tankhah.TotalValueColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Tankhah.TotalValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_TankhahDetail_FactorRows() As tbl_TankhahDetail_FactorRow()
            If (Me.Table.ChildRelations("FK_tbl_TankhahDetail_tbl_Tankhah") Is Nothing) Then
                Return New tbl_TankhahDetail_FactorRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_TankhahDetail_tbl_Tankhah")),tbl_TankhahDetail_FactorRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gettbl_TankhahDetail_SanadRows() As tbl_TankhahDetail_SanadRow()
            If (Me.Table.ChildRelations("FK_tbl_TankhahDetail_Sanad_tbl_Tankhah") Is Nothing) Then
                Return New tbl_TankhahDetail_SanadRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tbl_TankhahDetail_Sanad_tbl_Tankhah")),tbl_TankhahDetail_SanadRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_TankhahDetail_FactorRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_TankhahDetail_Factor As tbl_TankhahDetail_FactorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_TankhahDetail_Factor = CType(Me.Table,tbl_TankhahDetail_FactorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TankhahID() As Integer
            Get
                Return CType(Me(Me.tabletbl_TankhahDetail_Factor.TankhahIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Factor.TankhahIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactorID() As Integer
            Get
                Return CType(Me(Me.tabletbl_TankhahDetail_Factor.FactorIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Factor.FactorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TedadBargZamime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Factor.TedadBargZamimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TedadBargZamime' in table 'tbl_TankhahDetail_Factor' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Factor.TedadBargZamimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareSanadPardakht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Factor.ShomareSanadPardakhtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareSanadPardakht' in table 'tbl_TankhahDetail_Factor' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Factor.ShomareSanadPardakhtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareResidAnbar() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Factor.ShomareResidAnbarColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareResidAnbar' in table 'tbl_TankhahDetail_Factor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Factor.ShomareResidAnbarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Molahezat() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Factor.MolahezatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Molahezat' in table 'tbl_TankhahDetail_Factor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Factor.MolahezatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_TamiratRow() As tbl_TamiratRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_TankhahDetail_tbl_Tamirat")),tbl_TamiratRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_TankhahDetail_tbl_Tamirat"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_TankhahRow() As tbl_TankhahRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_TankhahDetail_tbl_Tankhah")),tbl_TankhahRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_TankhahDetail_tbl_Tankhah"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedadBargZamimeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Factor.TedadBargZamimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedadBargZamimeNull()
            Me(Me.tabletbl_TankhahDetail_Factor.TedadBargZamimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareSanadPardakhtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Factor.ShomareSanadPardakhtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareSanadPardakhtNull()
            Me(Me.tabletbl_TankhahDetail_Factor.ShomareSanadPardakhtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareResidAnbarNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Factor.ShomareResidAnbarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareResidAnbarNull()
            Me(Me.tabletbl_TankhahDetail_Factor.ShomareResidAnbarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMolahezatNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Factor.MolahezatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMolahezatNull()
            Me(Me.tabletbl_TankhahDetail_Factor.MolahezatColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_TankhahDetail_SanadRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_TankhahDetail_Sanad As tbl_TankhahDetail_SanadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_TankhahDetail_Sanad = CType(Me.Table,tbl_TankhahDetail_SanadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TankhahID() As Integer
            Get
                Return CType(Me(Me.tabletbl_TankhahDetail_Sanad.TankhahIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Sanad.TankhahIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SanadID() As Integer
            Get
                Return CType(Me(Me.tabletbl_TankhahDetail_Sanad.SanadIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Sanad.SanadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TedadBargZamime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Sanad.TedadBargZamimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TedadBargZamime' in table 'tbl_TankhahDetail_Sanad' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Sanad.TedadBargZamimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareSanadPardakht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Sanad.ShomareSanadPardakhtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareSanadPardakht' in table 'tbl_TankhahDetail_Sanad' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Sanad.ShomareSanadPardakhtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareResidAnbar() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Sanad.ShomareResidAnbarColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareResidAnbar' in table 'tbl_TankhahDetail_Sanad' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Sanad.ShomareResidAnbarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Molahezat() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_TankhahDetail_Sanad.MolahezatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Molahezat' in table 'tbl_TankhahDetail_Sanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_TankhahDetail_Sanad.MolahezatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tbl_TankhahRow() As tbl_TankhahRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tbl_TankhahDetail_Sanad_tbl_Tankhah")),tbl_TankhahRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tbl_TankhahDetail_Sanad_tbl_Tankhah"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedadBargZamimeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Sanad.TedadBargZamimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedadBargZamimeNull()
            Me(Me.tabletbl_TankhahDetail_Sanad.TedadBargZamimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareSanadPardakhtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Sanad.ShomareSanadPardakhtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareSanadPardakhtNull()
            Me(Me.tabletbl_TankhahDetail_Sanad.ShomareSanadPardakhtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareResidAnbarNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Sanad.ShomareResidAnbarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareResidAnbarNull()
            Me(Me.tabletbl_TankhahDetail_Sanad.ShomareResidAnbarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMolahezatNull() As Boolean
            Return Me.IsNull(Me.tabletbl_TankhahDetail_Sanad.MolahezatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMolahezatNull()
            Me(Me.tabletbl_TankhahDetail_Sanad.MolahezatColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class usp_GetTankhahDetailByTankhahIDRow
        Inherits Global.System.Data.DataRow
        
        Private tableusp_GetTankhahDetailByTankhahID As usp_GetTankhahDetailByTankhahIDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableusp_GetTankhahDetailByTankhahID = CType(Me.Table,usp_GetTankhahDetailByTankhahIDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TankhahID() As Integer
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.TankhahIDColumn),Integer)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.TankhahIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TankhahSanadID() As Integer
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.TankhahSanadIDColumn),Integer)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.TankhahSanadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.pDateColumn),String)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vajhe() As String
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.VajheColumn),String)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.VajheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TotalValue() As Integer
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.TotalValueColumn),Integer)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.TotalValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FS_ID() As Integer
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.FS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.FS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TedadBargZamime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.TedadBargZamimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TedadBargZamime' in table 'usp_GetTankhahDetailByTankhahID'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.TedadBargZamimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareSanadPardakht() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.ShomareSanadPardakhtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareSanadPardakht' in table 'usp_GetTankhahDetailByTankh"& _ 
                            "ahID' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.ShomareSanadPardakhtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShomareResidAnbar() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.ShomareResidAnbarColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShomareResidAnbar' in table 'usp_GetTankhahDetailByTankhahI"& _ 
                            "D' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.ShomareResidAnbarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Molahezat() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.MolahezatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Molahezat' in table 'usp_GetTankhahDetailByTankhahID' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.MolahezatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fullname() As String
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.FullnameColumn),String)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.FullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.PelakColumn),String)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.SubTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'usp_GetTankhahDetailByTankhahID' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Type() As String
            Get
                Return CType(Me(Me.tableusp_GetTankhahDetailByTankhahID.TypeColumn),String)
            End Get
            Set
                Me(Me.tableusp_GetTankhahDetailByTankhahID.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedadBargZamimeNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetTankhahDetailByTankhahID.TedadBargZamimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedadBargZamimeNull()
            Me(Me.tableusp_GetTankhahDetailByTankhahID.TedadBargZamimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareSanadPardakhtNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetTankhahDetailByTankhahID.ShomareSanadPardakhtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareSanadPardakhtNull()
            Me(Me.tableusp_GetTankhahDetailByTankhahID.ShomareSanadPardakhtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareResidAnbarNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetTankhahDetailByTankhahID.ShomareResidAnbarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareResidAnbarNull()
            Me(Me.tableusp_GetTankhahDetailByTankhahID.ShomareResidAnbarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMolahezatNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetTankhahDetailByTankhahID.MolahezatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMolahezatNull()
            Me(Me.tableusp_GetTankhahDetailByTankhahID.MolahezatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tableusp_GetTankhahDetailByTankhahID.SubTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubTotalNull()
            Me(Me.tableusp_GetTankhahDetailByTankhahID.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vSanadListRow
        Inherits Global.System.Data.DataRow
        
        Private tablevSanadList As vSanadListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevSanadList = CType(Me.Table,vSanadListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationCode() As Integer
            Get
                Return CType(Me(Me.tablevSanadList.OperationCodeColumn),Integer)
            End Get
            Set
                Me(Me.tablevSanadList.OperationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandeFullName() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSanadList.RanandeFullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RanandeFullName' in table 'vSanadList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSanadList.RanandeFullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tablevSanadList.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tablevSanadList.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tablevSanadList.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSanadList.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tablevSanadList.PelakColumn),String)
            End Get
            Set
                Me(Me.tablevSanadList.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MabdaID() As Integer
            Get
                Return CType(Me(Me.tablevSanadList.MabdaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSanadList.MabdaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMabda() As String
            Get
                Return CType(Me(Me.tablevSanadList.NameMabdaColumn),String)
            End Get
            Set
                Me(Me.tablevSanadList.NameMabdaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaghsadID() As Integer
            Get
                Return CType(Me(Me.tablevSanadList.MaghsadIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevSanadList.MaghsadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameMaghsad() As String
            Get
                Return CType(Me(Me.tablevSanadList.NameMaghsadColumn),String)
            End Get
            Set
                Me(Me.tablevSanadList.NameMaghsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhKhoroojMojtame() As String
            Get
                Return CType(Me(Me.tablevSanadList.TarikhKhoroojMojtameColumn),String)
            End Get
            Set
                Me(Me.tablevSanadList.TarikhKhoroojMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TarikhVoroodMojtame() As String
            Get
                Try 
                    Return CType(Me(Me.tablevSanadList.TarikhVoroodMojtameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TarikhVoroodMojtame' in table 'vSanadList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSanadList.TarikhVoroodMojtameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevSanadList.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'vSanadList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSanadList.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsProcess() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevSanadList.IsProcessColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsProcess' in table 'vSanadList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevSanadList.IsProcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PaymentStatus() As Boolean
            Get
                Return CType(Me(Me.tablevSanadList.PaymentStatusColumn),Boolean)
            End Get
            Set
                Me(Me.tablevSanadList.PaymentStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRanandeFullNameNull() As Boolean
            Return Me.IsNull(Me.tablevSanadList.RanandeFullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRanandeFullNameNull()
            Me(Me.tablevSanadList.RanandeFullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhVoroodMojtameNull() As Boolean
            Return Me.IsNull(Me.tablevSanadList.TarikhVoroodMojtameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhVoroodMojtameNull()
            Me(Me.tablevSanadList.TarikhVoroodMojtameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tablevSanadList.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotalNull()
            Me(Me.tablevSanadList.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsProcessNull() As Boolean
            Return Me.IsNull(Me.tablevSanadList.IsProcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsProcessNull()
            Me(Me.tablevSanadList.IsProcessColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vFactorListRow
        Inherits Global.System.Data.DataRow
        
        Private tablevFactorList As vFactorListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevFactorList = CType(Me.Table,vFactorListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactorID() As Integer
            Get
                Return CType(Me(Me.tablevFactorList.FactorIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevFactorList.FactorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Return CType(Me(Me.tablevFactorList.pDateColumn),String)
            End Get
            Set
                Me(Me.tablevFactorList.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tablevFactorList.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tablevFactorList.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fullname() As String
            Get
                Try 
                    Return CType(Me(Me.tablevFactorList.FullnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fullname' in table 'vFactorList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevFactorList.FullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tablevFactorList.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevFactorList.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tablevFactorList.PelakColumn),String)
            End Get
            Set
                Me(Me.tablevFactorList.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameTamirgah() As String
            Get
                Return CType(Me(Me.tablevFactorList.NameTamirgahColumn),String)
            End Get
            Set
                Me(Me.tablevFactorList.NameTamirgahColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsProcess() As Boolean
            Get
                Return CType(Me(Me.tablevFactorList.IsProcessColumn),Boolean)
            End Get
            Set
                Me(Me.tablevFactorList.IsProcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PaymentStatus() As Boolean
            Get
                Return CType(Me(Me.tablevFactorList.PaymentStatusColumn),Boolean)
            End Get
            Set
                Me(Me.tablevFactorList.PaymentStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevFactorList.SubTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'vFactorList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevFactorList.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFullnameNull() As Boolean
            Return Me.IsNull(Me.tablevFactorList.FullnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFullnameNull()
            Me(Me.tablevFactorList.FullnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tablevFactorList.SubTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubTotalNull()
            Me(Me.tablevFactorList.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vFactorSanadRow
        Inherits Global.System.Data.DataRow
        
        Private tablevFactorSanad As vFactorSanadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevFactorSanad = CType(Me.Table,vFactorSanadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FS_Type() As Integer
            Get
                Return CType(Me(Me.tablevFactorSanad.FS_TypeColumn),Integer)
            End Get
            Set
                Me(Me.tablevFactorSanad.FS_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FS_ID() As Integer
            Get
                Return CType(Me(Me.tablevFactorSanad.FS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tablevFactorSanad.FS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pDate() As String
            Get
                Try 
                    Return CType(Me(Me.tablevFactorSanad.pDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pDate' in table 'vFactorSanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevFactorSanad.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RanandePersonalCode() As String
            Get
                Return CType(Me(Me.tablevFactorSanad.RanandePersonalCodeColumn),String)
            End Get
            Set
                Me(Me.tablevFactorSanad.RanandePersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fullname() As String
            Get
                Return CType(Me(Me.tablevFactorSanad.FullnameColumn),String)
            End Get
            Set
                Me(Me.tablevFactorSanad.FullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MashinID() As Integer
            Get
                Return CType(Me(Me.tablevFactorSanad.MashinIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevFactorSanad.MashinIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pelak() As String
            Get
                Return CType(Me(Me.tablevFactorSanad.PelakColumn),String)
            End Get
            Set
                Me(Me.tablevFactorSanad.PelakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevFactorSanad.SubTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'vFactorSanad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevFactorSanad.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PaymentStatus() As Boolean
            Get
                Return CType(Me(Me.tablevFactorSanad.PaymentStatusColumn),Boolean)
            End Get
            Set
                Me(Me.tablevFactorSanad.PaymentStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspDateNull() As Boolean
            Return Me.IsNull(Me.tablevFactorSanad.pDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpDateNull()
            Me(Me.tablevFactorSanad.pDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tablevFactorSanad.SubTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubTotalNull()
            Me(Me.tablevFactorSanad.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_MahalBargiriRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MahalBargiriRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_MahalBargiriRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_MahalBargiriRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_MabdaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MabdaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_MabdaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_MabdaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_MaghsadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MaghsadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_MaghsadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_MaghsadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_MashinRanandeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MashinRanandeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_MashinRanandeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_MashinRanandeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_EzamNavganRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_EzamNavganRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_EzamNavganRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_EzamNavganRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vSelectNavganRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vSelectNavganRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vSelectNavganRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vSelectNavganRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_TamiratRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_TamiratRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_TamiratRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_TamiratRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_TamiratJoziyatRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_TamiratJoziyatRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_TamiratJoziyatRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_TamiratJoziyatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SelectYearsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SelectYearsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SelectYearsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SelectYearsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class usp_GetFactorPriceByMonthsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As usp_GetFactorPriceByMonthsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As usp_GetFactorPriceByMonthsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As usp_GetFactorPriceByMonthsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_SettingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_SettingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_SettingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_SettingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_MashinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MashinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_MashinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_MashinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_KafiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_KafiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_KafiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_KafiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_RanandeganRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_RanandeganRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_RanandeganRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_RanandeganRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vSelectRanandeganMashinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vSelectRanandeganMashinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vSelectRanandeganMashinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vSelectRanandeganMashinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_NavganStatusRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_NavganStatusRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_NavganStatusRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_NavganStatusRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class usp_KarkardeRoozane4PrintRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As usp_KarkardeRoozane4PrintRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As usp_KarkardeRoozane4PrintRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As usp_KarkardeRoozane4PrintRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class usp_KarkardeRoozane4ShowRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As usp_KarkardeRoozane4ShowRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As usp_KarkardeRoozane4ShowRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As usp_KarkardeRoozane4ShowRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_SanadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_SanadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_SanadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_SanadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_TankhahRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_TankhahRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_TankhahRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_TankhahRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_TankhahDetail_FactorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_TankhahDetail_FactorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_TankhahDetail_FactorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_TankhahDetail_FactorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_TankhahDetail_SanadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_TankhahDetail_SanadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_TankhahDetail_SanadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_TankhahDetail_SanadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class usp_GetTankhahDetailByTankhahIDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As usp_GetTankhahDetailByTankhahIDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As usp_GetTankhahDetailByTankhahIDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As usp_GetTankhahDetailByTankhahIDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vSanadListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vSanadListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vSanadListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vSanadListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vFactorListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vFactorListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vFactorListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vFactorListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vFactorSanadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vFactorSanadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vFactorSanadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vFactorSanadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsTarabariTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MahalBargiriTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_MahalBargiri"
            tableMapping.ColumnMappings.Add("MahalBargiriID", "MahalBargiriID")
            tableMapping.ColumnMappings.Add("NameMahal", "NameMahal")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_MahalBargiri] WHERE (([MahalBargiriID] = @Original_MahalBa"& _ 
                "rgiriID) AND ([NameMahal] = @Original_NameMahal))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MahalBargiriID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameMahal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMahal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_MahalBargiri] ([NameMahal]) VALUES (@NameMahal);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT M"& _ 
                "ahalBargiriID, NameMahal FROM tbl_MahalBargiri WHERE (MahalBargiriID = SCOPE_IDE"& _ 
                "NTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMahal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMahal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_MahalBargiri] SET [NameMahal] = @NameMahal WHERE (([MahalBargir"& _ 
                "iID] = @Original_MahalBargiriID) AND ([NameMahal] = @Original_NameMahal));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT MahalBargiriID, NameMahal FROM tbl_MahalBargiri WHERE (MahalBargiriID = @Maha"& _ 
                "lBargiriID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMahal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMahal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MahalBargiriID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameMahal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMahal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MahalBargiriID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MahalBargiriID, NameMahal FROM dbo.tbl_MahalBargiri"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_MahalBargiri"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MahalBargiriID = @MahalBargiriID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MahalBargiriID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE    tbl_MahalBargiri"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              NameMahal = @NameMahal"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (M"& _ 
                "ahalBargiriID = @MahalBargiriID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMahal", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMahal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MahalBargiriID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_MahalBargiriDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_MahalBargiriDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_MahalBargiriDataTable = New dsTarabari.tbl_MahalBargiriDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_MahalBargiriDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_MahalBargiri")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_MahalBargiriID As Integer, ByVal Original_NameMahal As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MahalBargiriID,Integer)
            If (Original_NameMahal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameMahal")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NameMahal,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NameMahal As String) As Integer
            If (NameMahal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMahal")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NameMahal,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NameMahal As String, ByVal Original_MahalBargiriID As Integer, ByVal Original_NameMahal As String, ByVal MahalBargiriID As Integer) As Integer
            If (NameMahal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMahal")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NameMahal,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_MahalBargiriID,Integer)
            If (Original_NameMahal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameMahal")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_NameMahal,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MahalBargiriID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NameMahal As String, ByVal Original_MahalBargiriID As Integer, ByVal Original_NameMahal As String) As Integer
            Return Me.Update(NameMahal, Original_MahalBargiriID, Original_NameMahal, Original_MahalBargiriID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal MahalBargiriID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(MahalBargiriID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal NameMahal As String, ByVal MahalBargiriID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (NameMahal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMahal")
            Else
                command.Parameters(0).Value = CType(NameMahal,String)
            End If
            command.Parameters(1).Value = CType(MahalBargiriID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MabdaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Mabda"
            tableMapping.ColumnMappings.Add("MabdaID", "MabdaID")
            tableMapping.ColumnMappings.Add("NameMabda", "NameMabda")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Mabda] WHERE (([MabdaID] = @Original_MabdaID) AND ([NameMa"& _ 
                "bda] = @Original_NameMabda))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameMabda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMabda", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Mabda] ([NameMabda]) VALUES (@NameMabda);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT MabdaID,"& _ 
                " NameMabda FROM tbl_Mabda WHERE (MabdaID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMabda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMabda", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Mabda] SET [NameMabda] = @NameMabda WHERE (([MabdaID] = @Origin"& _ 
                "al_MabdaID) AND ([NameMabda] = @Original_NameMabda));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT MabdaID, NameMabda"& _ 
                " FROM tbl_Mabda WHERE (MabdaID = @MabdaID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMabda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMabda", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameMabda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMabda", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MabdaID, NameMabda FROM dbo.tbl_Mabda"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_Mabda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MabdaID = @MabdaID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     NameMabda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Mabda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MabdaID = @MabdaID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE    tbl_Mabda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              NameMabda = @NameMabda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MabdaID "& _ 
                "= @MabdaID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMabda", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMabda", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_MabdaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_MabdaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_MabdaDataTable = New dsTarabari.tbl_MabdaDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_MabdaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Mabda")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_MabdaID As Integer, ByVal Original_NameMabda As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MabdaID,Integer)
            If (Original_NameMabda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameMabda")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NameMabda,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NameMabda As String) As Integer
            If (NameMabda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMabda")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NameMabda,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NameMabda As String, ByVal Original_MabdaID As Integer, ByVal Original_NameMabda As String, ByVal MabdaID As Integer) As Integer
            If (NameMabda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMabda")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NameMabda,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_MabdaID,Integer)
            If (Original_NameMabda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameMabda")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_NameMabda,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MabdaID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NameMabda As String, ByVal Original_MabdaID As Integer, ByVal Original_NameMabda As String) As Integer
            Return Me.Update(NameMabda, Original_MabdaID, Original_NameMabda, Original_MabdaID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal MabdaID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(MabdaID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNameByID(ByVal MabdaID As Integer) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(MabdaID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal NameMabda As String, ByVal MabdaID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (NameMabda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMabda")
            Else
                command.Parameters(0).Value = CType(NameMabda,String)
            End If
            command.Parameters(1).Value = CType(MabdaID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MaghsadTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Maghsad"
            tableMapping.ColumnMappings.Add("MaghsadID", "MaghsadID")
            tableMapping.ColumnMappings.Add("NameMaghsad", "NameMaghsad")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Maghsad] WHERE (([MaghsadID] = @Original_MaghsadID) AND (["& _ 
                "NameMaghsad] = @Original_NameMaghsad))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameMaghsad", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMaghsad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Maghsad] ([NameMaghsad]) VALUES (@NameMaghsad);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Ma"& _ 
                "ghsadID, NameMaghsad FROM tbl_Maghsad WHERE (MaghsadID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMaghsad", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMaghsad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Maghsad] SET [NameMaghsad] = @NameMaghsad WHERE (([MaghsadID] ="& _ 
                " @Original_MaghsadID) AND ([NameMaghsad] = @Original_NameMaghsad));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Magh"& _ 
                "sadID, NameMaghsad FROM tbl_Maghsad WHERE (MaghsadID = @MaghsadID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMaghsad", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMaghsad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameMaghsad", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMaghsad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MaghsadID, NameMaghsad FROM dbo.tbl_Maghsad"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_Maghsad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MaghsadID = @MaghsadID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     NameMaghsad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Maghsad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MaghsadID = @Maghsad"& _ 
                "ID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE    tbl_Maghsad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              NameMaghsad = @NameMaghsad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Ma"& _ 
                "ghsadID = @MaghsadID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameMaghsad", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "NameMaghsad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_MaghsadDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_MaghsadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_MaghsadDataTable = New dsTarabari.tbl_MaghsadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_MaghsadDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Maghsad")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_MaghsadID As Integer, ByVal Original_NameMaghsad As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MaghsadID,Integer)
            If (Original_NameMaghsad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameMaghsad")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NameMaghsad,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NameMaghsad As String) As Integer
            If (NameMaghsad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMaghsad")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NameMaghsad,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NameMaghsad As String, ByVal Original_MaghsadID As Integer, ByVal Original_NameMaghsad As String, ByVal MaghsadID As Integer) As Integer
            If (NameMaghsad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMaghsad")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NameMaghsad,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_MaghsadID,Integer)
            If (Original_NameMaghsad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameMaghsad")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_NameMaghsad,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MaghsadID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NameMaghsad As String, ByVal Original_MaghsadID As Integer, ByVal Original_NameMaghsad As String) As Integer
            Return Me.Update(NameMaghsad, Original_MaghsadID, Original_NameMaghsad, Original_MaghsadID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal MaghsadID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(MaghsadID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNameByID(ByVal MaghsadID As Integer) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(MaghsadID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal NameMaghsad As String, ByVal MaghsadID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (NameMaghsad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameMaghsad")
            Else
                command.Parameters(0).Value = CType(NameMaghsad,String)
            End If
            command.Parameters(1).Value = CType(MaghsadID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MashinRanandeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_MashinRanande"
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_MashinRanande] WHERE (([RanandePersonalCode] = @Original_R"& _ 
                "anandePersonalCode) AND ([MashinID] = @Original_MashinID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_MashinRanande] ([RanandePersonalCode], [MashinID]) VALUES "& _ 
                "(@RanandePersonalCode, @MashinID);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT RanandePersonalCode, MashinID FROM tb"& _ 
                "l_MashinRanande WHERE (MashinID = @MashinID) AND (RanandePersonalCode = @Ranande"& _ 
                "PersonalCode)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_MashinRanande] SET [RanandePersonalCode] = @RanandePersonalCode"& _ 
                ", [MashinID] = @MashinID WHERE (([RanandePersonalCode] = @Original_RanandePerson"& _ 
                "alCode) AND ([MashinID] = @Original_MashinID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT RanandePersonalCode, Mas"& _ 
                "hinID FROM tbl_MashinRanande WHERE (MashinID = @MashinID) AND (RanandePersonalCo"& _ 
                "de = @RanandePersonalCode)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RanandePersonalCode, MashinID FROM dbo.tbl_MashinRanande"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     RanandePersonalCode, MashinID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_MashinRanande"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  "& _ 
                "   (RanandePersonalCode = @RanandePersonalCode)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "dbo.usp_InsertData"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_MashinRanandeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_MashinRanandeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_MashinRanandeDataTable = New dsTarabari.tbl_MashinRanandeDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPersonalCode(ByVal RanandePersonalCode As String) As dsTarabari.tbl_MashinRanandeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            Dim dataTable As dsTarabari.tbl_MashinRanandeDataTable = New dsTarabari.tbl_MashinRanandeDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_MashinRanandeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_MashinRanande")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_RanandePersonalCode As String, ByVal Original_MashinID As Integer) As Integer
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RanandePersonalCode,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_MashinID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RanandePersonalCode As String, ByVal MashinID As Integer) As Integer
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(MashinID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal RanandePersonalCode As String, ByVal MashinID As Integer, ByVal Original_RanandePersonalCode As String, ByVal Original_MashinID As Integer) As Integer
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(MashinID,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_RanandePersonalCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_MashinID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_RanandePersonalCode As String, ByVal Original_MashinID As Integer) As Integer
            Return Me.Update(Original_RanandePersonalCode, Original_MashinID, Original_RanandePersonalCode, Original_MashinID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_InsertData(ByVal RanandePersonalCode As String, ByVal MashinID As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (RanandePersonalCode Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            If (MashinID.HasValue = true) Then
                command.Parameters(2).Value = CType(MashinID.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_EzamNavganTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_EzamNavgan"
            tableMapping.ColumnMappings.Add("OperationCode", "OperationCode")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("MahalBargiriID", "MahalBargiriID")
            tableMapping.ColumnMappings.Add("MabdaID", "MabdaID")
            tableMapping.ColumnMappings.Add("MaghsadID", "MaghsadID")
            tableMapping.ColumnMappings.Add("NoeBar", "NoeBar")
            tableMapping.ColumnMappings.Add("Tozihat", "Tozihat")
            tableMapping.ColumnMappings.Add("TarikhEzamBargiri", "TarikhEzamBargiri")
            tableMapping.ColumnMappings.Add("TarikhHozoorMahalBargiri", "TarikhHozoorMahalBargiri")
            tableMapping.ColumnMappings.Add("SaatHozoorMahalBagiri", "SaatHozoorMahalBagiri")
            tableMapping.ColumnMappings.Add("ShomareBarnameRaft", "ShomareBarnameRaft")
            tableMapping.ColumnMappings.Add("TarikhBarnameRaft", "TarikhBarnameRaft")
            tableMapping.ColumnMappings.Add("SaatSodoorBarname", "SaatSodoorBarname")
            tableMapping.ColumnMappings.Add("KiloometrKhorroojMojtame", "KiloometrKhorroojMojtame")
            tableMapping.ColumnMappings.Add("MeghdarSookhtKhorooj", "MeghdarSookhtKhorooj")
            tableMapping.ColumnMappings.Add("TarikhKhoroojMojtame", "TarikhKhoroojMojtame")
            tableMapping.ColumnMappings.Add("SaatKhoroojMojtame", "SaatKhoroojMojtame")
            tableMapping.ColumnMappings.Add("KiloometrVoroodMojtame", "KiloometrVoroodMojtame")
            tableMapping.ColumnMappings.Add("MeghdarSookhtVorood", "MeghdarSookhtVorood")
            tableMapping.ColumnMappings.Add("MasafatTeyShode", "MasafatTeyShode")
            tableMapping.ColumnMappings.Add("SookhtMasrafShode", "SookhtMasrafShode")
            tableMapping.ColumnMappings.Add("TarikhHozoorMahalTakhliyeAval", "TarikhHozoorMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("SaatHozoorMahalTakhliyeAval", "SaatHozoorMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("TarikhBargiriMojadad", "TarikhBargiriMojadad")
            tableMapping.ColumnMappings.Add("SaatBargiriMojadad", "SaatBargiriMojadad")
            tableMapping.ColumnMappings.Add("TarikhKhoroojMahalTakhliyeAval", "TarikhKhoroojMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("SaatKhooojMahalTakhliyeAval", "SaatKhooojMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("ShomareBarnameBargasht", "ShomareBarnameBargasht")
            tableMapping.ColumnMappings.Add("TarikhBarnameBargasht", "TarikhBarnameBargasht")
            tableMapping.ColumnMappings.Add("MablaghKerayeBargasht", "MablaghKerayeBargasht")
            tableMapping.ColumnMappings.Add("MablaghKerayeRaft", "MablaghKerayeRaft")
            tableMapping.ColumnMappings.Add("TarikhVoroodMojtame", "TarikhVoroodMojtame")
            tableMapping.ColumnMappings.Add("SaatVoroodMojtame", "SaatVoroodMojtame")
            tableMapping.ColumnMappings.Add("DarMamooriyat", "DarMamooriyat")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_EzamNavgan] WHERE (([OperationCode] = @Original_OperationC"& _ 
                "ode) AND ([RanandePersonalCode] = @Original_RanandePersonalCode) AND ([MashinID]"& _ 
                " = @Original_MashinID) AND ([MahalBargiriID] = @Original_MahalBargiriID) AND ([M"& _ 
                "abdaID] = @Original_MabdaID) AND ([MaghsadID] = @Original_MaghsadID) AND ([NoeBa"& _ 
                "r] = @Original_NoeBar) AND ((@IsNull_Tozihat = 1 AND [Tozihat] IS NULL) OR ([Toz"& _ 
                "ihat] = @Original_Tozihat)) AND ([TarikhEzamBargiri] = @Original_TarikhEzamBargi"& _ 
                "ri) AND ([TarikhHozoorMahalBargiri] = @Original_TarikhHozoorMahalBargiri) AND (["& _ 
                "SaatHozoorMahalBagiri] = @Original_SaatHozoorMahalBagiri) AND ([ShomareBarnameRa"& _ 
                "ft] = @Original_ShomareBarnameRaft) AND ([TarikhBarnameRaft] = @Original_TarikhB"& _ 
                "arnameRaft) AND ([SaatSodoorBarname] = @Original_SaatSodoorBarname) AND ([Kiloom"& _ 
                "etrKhorroojMojtame] = @Original_KiloometrKhorroojMojtame) AND ([MeghdarSookhtKho"& _ 
                "rooj] = @Original_MeghdarSookhtKhorooj) AND ([TarikhKhoroojMojtame] = @Original_"& _ 
                "TarikhKhoroojMojtame) AND ([SaatKhoroojMojtame] = @Original_SaatKhoroojMojtame) "& _ 
                "AND ((@IsNull_KiloometrVoroodMojtame = 1 AND [KiloometrVoroodMojtame] IS NULL) O"& _ 
                "R ([KiloometrVoroodMojtame] = @Original_KiloometrVoroodMojtame)) AND ((@IsNull_M"& _ 
                "eghdarSookhtVorood = 1 AND [MeghdarSookhtVorood] IS NULL) OR ([MeghdarSookhtVoro"& _ 
                "od] = @Original_MeghdarSookhtVorood)) AND ((@IsNull_MasafatTeyShode = 1 AND [Mas"& _ 
                "afatTeyShode] IS NULL) OR ([MasafatTeyShode] = @Original_MasafatTeyShode)) AND ("& _ 
                "(@IsNull_SookhtMasrafShode = 1 AND [SookhtMasrafShode] IS NULL) OR ([SookhtMasra"& _ 
                "fShode] = @Original_SookhtMasrafShode)) AND ((@IsNull_TarikhHozoorMahalTakhliyeA"& _ 
                "val = 1 AND [TarikhHozoorMahalTakhliyeAval] IS NULL) OR ([TarikhHozoorMahalTakhl"& _ 
                "iyeAval] = @Original_TarikhHozoorMahalTakhliyeAval)) AND ((@IsNull_SaatHozoorMah"& _ 
                "alTakhliyeAval = 1 AND [SaatHozoorMahalTakhliyeAval] IS NULL) OR ([SaatHozoorMah"& _ 
                "alTakhliyeAval] = @Original_SaatHozoorMahalTakhliyeAval)) AND ((@IsNull_TarikhBa"& _ 
                "rgiriMojadad = 1 AND [TarikhBargiriMojadad] IS NULL) OR ([TarikhBargiriMojadad] "& _ 
                "= @Original_TarikhBargiriMojadad)) AND ((@IsNull_SaatBargiriMojadad = 1 AND [Saa"& _ 
                "tBargiriMojadad] IS NULL) OR ([SaatBargiriMojadad] = @Original_SaatBargiriMojada"& _ 
                "d)) AND ((@IsNull_TarikhKhoroojMahalTakhliyeAval = 1 AND [TarikhKhoroojMahalTakh"& _ 
                "liyeAval] IS NULL) OR ([TarikhKhoroojMahalTakhliyeAval] = @Original_TarikhKhoroo"& _ 
                "jMahalTakhliyeAval)) AND ((@IsNull_SaatKhooojMahalTakhliyeAval = 1 AND [SaatKhoo"& _ 
                "ojMahalTakhliyeAval] IS NULL) OR ([SaatKhooojMahalTakhliyeAval] = @Original_Saat"& _ 
                "KhooojMahalTakhliyeAval)) AND ((@IsNull_ShomareBarnameBargasht = 1 AND [ShomareB"& _ 
                "arnameBargasht] IS NULL) OR ([ShomareBarnameBargasht] = @Original_ShomareBarname"& _ 
                "Bargasht)) AND ((@IsNull_TarikhBarnameBargasht = 1 AND [TarikhBarnameBargasht] I"& _ 
                "S NULL) OR ([TarikhBarnameBargasht] = @Original_TarikhBarnameBargasht)) AND ((@I"& _ 
                "sNull_MablaghKerayeBargasht = 1 AND [MablaghKerayeBargasht] IS NULL) OR ([Mablag"& _ 
                "hKerayeBargasht] = @Original_MablaghKerayeBargasht)) AND ((@IsNull_MablaghKeraye"& _ 
                "Raft = 1 AND [MablaghKerayeRaft] IS NULL) OR ([MablaghKerayeRaft] = @Original_Ma"& _ 
                "blaghKerayeRaft)) AND ((@IsNull_TarikhVoroodMojtame = 1 AND [TarikhVoroodMojtame"& _ 
                "] IS NULL) OR ([TarikhVoroodMojtame] = @Original_TarikhVoroodMojtame)) AND ((@Is"& _ 
                "Null_SaatVoroodMojtame = 1 AND [SaatVoroodMojtame] IS NULL) OR ([SaatVoroodMojta"& _ 
                "me] = @Original_SaatVoroodMojtame)) AND ([DarMamooriyat] = @Original_DarMamooriy"& _ 
                "at))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MahalBargiriID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tozihat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tozihat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhEzamBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhEzamBargiri", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhHozoorMahalBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalBargiri", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatHozoorMahalBagiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalBagiri", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareBarnameRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameRaft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBarnameRaft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameRaft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatSodoorBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatSodoorBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KiloometrKhorroojMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrKhorroojMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MeghdarSookhtKhorooj", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtKhorooj", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhoroojMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasafatTeyShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasafatTeyShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhBargiriMojadad", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatBargiriMojadad", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBarnameBargasht", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DarMamooriyat", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DarMamooriyat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_EzamNavgan] ([OperationCode], [RanandePersonalCode], [Mash"& _ 
                "inID], [MahalBargiriID], [MabdaID], [MaghsadID], [NoeBar], [Tozihat], [TarikhEza"& _ 
                "mBargiri], [TarikhHozoorMahalBargiri], [SaatHozoorMahalBagiri], [ShomareBarnameR"& _ 
                "aft], [TarikhBarnameRaft], [SaatSodoorBarname], [KiloometrKhorroojMojtame], [Meg"& _ 
                "hdarSookhtKhorooj], [TarikhKhoroojMojtame], [SaatKhoroojMojtame], [KiloometrVoro"& _ 
                "odMojtame], [MeghdarSookhtVorood], [MasafatTeyShode], [SookhtMasrafShode], [Tari"& _ 
                "khHozoorMahalTakhliyeAval], [SaatHozoorMahalTakhliyeAval], [TarikhBargiriMojadad"& _ 
                "], [SaatBargiriMojadad], [TarikhKhoroojMahalTakhliyeAval], [SaatKhooojMahalTakhl"& _ 
                "iyeAval], [ShomareBarnameBargasht], [TarikhBarnameBargasht], [MablaghKerayeBarga"& _ 
                "sht], [MablaghKerayeRaft], [TarikhVoroodMojtame], [SaatVoroodMojtame], [DarMamoo"& _ 
                "riyat]) VALUES (@OperationCode, @RanandePersonalCode, @MashinID, @MahalBargiriID"& _ 
                ", @MabdaID, @MaghsadID, @NoeBar, @Tozihat, @TarikhEzamBargiri, @TarikhHozoorMaha"& _ 
                "lBargiri, @SaatHozoorMahalBagiri, @ShomareBarnameRaft, @TarikhBarnameRaft, @Saat"& _ 
                "SodoorBarname, @KiloometrKhorroojMojtame, @MeghdarSookhtKhorooj, @TarikhKhoroojM"& _ 
                "ojtame, @SaatKhoroojMojtame, @KiloometrVoroodMojtame, @MeghdarSookhtVorood, @Mas"& _ 
                "afatTeyShode, @SookhtMasrafShode, @TarikhHozoorMahalTakhliyeAval, @SaatHozoorMah"& _ 
                "alTakhliyeAval, @TarikhBargiriMojadad, @SaatBargiriMojadad, @TarikhKhoroojMahalT"& _ 
                "akhliyeAval, @SaatKhooojMahalTakhliyeAval, @ShomareBarnameBargasht, @TarikhBarna"& _ 
                "meBargasht, @MablaghKerayeBargasht, @MablaghKerayeRaft, @TarikhVoroodMojtame, @S"& _ 
                "aatVoroodMojtame, @DarMamooriyat);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OperationCode, RanandePersonalCode, M"& _ 
                "ashinID, MahalBargiriID, MabdaID, MaghsadID, NoeBar, Tozihat, TarikhEzamBargiri,"& _ 
                " TarikhHozoorMahalBargiri, SaatHozoorMahalBagiri, ShomareBarnameRaft, TarikhBarn"& _ 
                "ameRaft, SaatSodoorBarname, KiloometrKhorroojMojtame, MeghdarSookhtKhorooj, Tari"& _ 
                "khKhoroojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojtame, MeghdarSookhtVoroo"& _ 
                "d, MasafatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTakhliyeAval, SaatHozoor"& _ 
                "MahalTakhliyeAval, TarikhBargiriMojadad, SaatBargiriMojadad, TarikhKhoroojMahalT"& _ 
                "akhliyeAval, SaatKhooojMahalTakhliyeAval, ShomareBarnameBargasht, TarikhBarnameB"& _ 
                "argasht, MablaghKerayeBargasht, MablaghKerayeRaft, TarikhVoroodMojtame, SaatVoro"& _ 
                "odMojtame, DarMamooriyat FROM tbl_EzamNavgan WHERE (OperationCode = @OperationCo"& _ 
                "de)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MahalBargiriID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tozihat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhEzamBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhEzamBargiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhHozoorMahalBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalBargiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatHozoorMahalBagiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalBagiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarnameRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarnameRaft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatSodoorBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatSodoorBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KiloometrKhorroojMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrKhorroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookhtKhorooj", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtKhorooj", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhoroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasafatTeyShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarnameBargasht", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DarMamooriyat", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DarMamooriyat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_EzamNavgan] SET [OperationCode] = @OperationCode, [RanandePerso"& _ 
                "nalCode] = @RanandePersonalCode, [MashinID] = @MashinID, [MahalBargiriID] = @Mah"& _ 
                "alBargiriID, [MabdaID] = @MabdaID, [MaghsadID] = @MaghsadID, [NoeBar] = @NoeBar,"& _ 
                " [Tozihat] = @Tozihat, [TarikhEzamBargiri] = @TarikhEzamBargiri, [TarikhHozoorMa"& _ 
                "halBargiri] = @TarikhHozoorMahalBargiri, [SaatHozoorMahalBagiri] = @SaatHozoorMa"& _ 
                "halBagiri, [ShomareBarnameRaft] = @ShomareBarnameRaft, [TarikhBarnameRaft] = @Ta"& _ 
                "rikhBarnameRaft, [SaatSodoorBarname] = @SaatSodoorBarname, [KiloometrKhorroojMoj"& _ 
                "tame] = @KiloometrKhorroojMojtame, [MeghdarSookhtKhorooj] = @MeghdarSookhtKhoroo"& _ 
                "j, [TarikhKhoroojMojtame] = @TarikhKhoroojMojtame, [SaatKhoroojMojtame] = @SaatK"& _ 
                "horoojMojtame, [KiloometrVoroodMojtame] = @KiloometrVoroodMojtame, [MeghdarSookh"& _ 
                "tVorood] = @MeghdarSookhtVorood, [MasafatTeyShode] = @MasafatTeyShode, [SookhtMa"& _ 
                "srafShode] = @SookhtMasrafShode, [TarikhHozoorMahalTakhliyeAval] = @TarikhHozoor"& _ 
                "MahalTakhliyeAval, [SaatHozoorMahalTakhliyeAval] = @SaatHozoorMahalTakhliyeAval,"& _ 
                " [TarikhBargiriMojadad] = @TarikhBargiriMojadad, [SaatBargiriMojadad] = @SaatBar"& _ 
                "giriMojadad, [TarikhKhoroojMahalTakhliyeAval] = @TarikhKhoroojMahalTakhliyeAval,"& _ 
                " [SaatKhooojMahalTakhliyeAval] = @SaatKhooojMahalTakhliyeAval, [ShomareBarnameBa"& _ 
                "rgasht] = @ShomareBarnameBargasht, [TarikhBarnameBargasht] = @TarikhBarnameBarga"& _ 
                "sht, [MablaghKerayeBargasht] = @MablaghKerayeBargasht, [MablaghKerayeRaft] = @Ma"& _ 
                "blaghKerayeRaft, [TarikhVoroodMojtame] = @TarikhVoroodMojtame, [SaatVoroodMojtam"& _ 
                "e] = @SaatVoroodMojtame, [DarMamooriyat] = @DarMamooriyat WHERE (([OperationCode"& _ 
                "] = @Original_OperationCode) AND ([RanandePersonalCode] = @Original_RanandePerso"& _ 
                "nalCode) AND ([MashinID] = @Original_MashinID) AND ([MahalBargiriID] = @Original"& _ 
                "_MahalBargiriID) AND ([MabdaID] = @Original_MabdaID) AND ([MaghsadID] = @Origina"& _ 
                "l_MaghsadID) AND ([NoeBar] = @Original_NoeBar) AND ((@IsNull_Tozihat = 1 AND [To"& _ 
                "zihat] IS NULL) OR ([Tozihat] = @Original_Tozihat)) AND ([TarikhEzamBargiri] = @"& _ 
                "Original_TarikhEzamBargiri) AND ([TarikhHozoorMahalBargiri] = @Original_TarikhHo"& _ 
                "zoorMahalBargiri) AND ([SaatHozoorMahalBagiri] = @Original_SaatHozoorMahalBagiri"& _ 
                ") AND ([ShomareBarnameRaft] = @Original_ShomareBarnameRaft) AND ([TarikhBarnameR"& _ 
                "aft] = @Original_TarikhBarnameRaft) AND ([SaatSodoorBarname] = @Original_SaatSod"& _ 
                "oorBarname) AND ([KiloometrKhorroojMojtame] = @Original_KiloometrKhorroojMojtame"& _ 
                ") AND ([MeghdarSookhtKhorooj] = @Original_MeghdarSookhtKhorooj) AND ([TarikhKhor"& _ 
                "oojMojtame] = @Original_TarikhKhoroojMojtame) AND ([SaatKhoroojMojtame] = @Origi"& _ 
                "nal_SaatKhoroojMojtame) AND ((@IsNull_KiloometrVoroodMojtame = 1 AND [KiloometrV"& _ 
                "oroodMojtame] IS NULL) OR ([KiloometrVoroodMojtame] = @Original_KiloometrVoroodM"& _ 
                "ojtame)) AND ((@IsNull_MeghdarSookhtVorood = 1 AND [MeghdarSookhtVorood] IS NULL"& _ 
                ") OR ([MeghdarSookhtVorood] = @Original_MeghdarSookhtVorood)) AND ((@IsNull_Masa"& _ 
                "fatTeyShode = 1 AND [MasafatTeyShode] IS NULL) OR ([MasafatTeyShode] = @Original"& _ 
                "_MasafatTeyShode)) AND ((@IsNull_SookhtMasrafShode = 1 AND [SookhtMasrafShode] I"& _ 
                "S NULL) OR ([SookhtMasrafShode] = @Original_SookhtMasrafShode)) AND ((@IsNull_Ta"& _ 
                "rikhHozoorMahalTakhliyeAval = 1 AND [TarikhHozoorMahalTakhliyeAval] IS NULL) OR "& _ 
                "([TarikhHozoorMahalTakhliyeAval] = @Original_TarikhHozoorMahalTakhliyeAval)) AND"& _ 
                " ((@IsNull_SaatHozoorMahalTakhliyeAval = 1 AND [SaatHozoorMahalTakhliyeAval] IS "& _ 
                "NULL) OR ([SaatHozoorMahalTakhliyeAval] = @Original_SaatHozoorMahalTakhliyeAval)"& _ 
                ") AND ((@IsNull_TarikhBargiriMojadad = 1 AND [TarikhBargiriMojadad] IS NULL) OR "& _ 
                "([TarikhBargiriMojadad] = @Original_TarikhBargiriMojadad)) AND ((@IsNull_SaatBar"& _ 
                "giriMojadad = 1 AND [SaatBargiriMojadad] IS NULL) OR ([SaatBargiriMojadad] = @Or"& _ 
                "iginal_SaatBargiriMojadad)) AND ((@IsNull_TarikhKhoroojMahalTakhliyeAval = 1 AND"& _ 
                " [TarikhKhoroojMahalTakhliyeAval] IS NULL) OR ([TarikhKhoroojMahalTakhliyeAval] "& _ 
                "= @Original_TarikhKhoroojMahalTakhliyeAval)) AND ((@IsNull_SaatKhooojMahalTakhli"& _ 
                "yeAval = 1 AND [SaatKhooojMahalTakhliyeAval] IS NULL) OR ([SaatKhooojMahalTakhli"& _ 
                "yeAval] = @Original_SaatKhooojMahalTakhliyeAval)) AND ((@IsNull_ShomareBarnameBa"& _ 
                "rgasht = 1 AND [ShomareBarnameBargasht] IS NULL) OR ([ShomareBarnameBargasht] = "& _ 
                "@Original_ShomareBarnameBargasht)) AND ((@IsNull_TarikhBarnameBargasht = 1 AND ["& _ 
                "TarikhBarnameBargasht] IS NULL) OR ([TarikhBarnameBargasht] = @Original_TarikhBa"& _ 
                "rnameBargasht)) AND ((@IsNull_MablaghKerayeBargasht = 1 AND [MablaghKerayeBargas"& _ 
                "ht] IS NULL) OR ([MablaghKerayeBargasht] = @Original_MablaghKerayeBargasht)) AND"& _ 
                " ((@IsNull_MablaghKerayeRaft = 1 AND [MablaghKerayeRaft] IS NULL) OR ([MablaghKe"& _ 
                "rayeRaft] = @Original_MablaghKerayeRaft)) AND ((@IsNull_TarikhVoroodMojtame = 1 "& _ 
                "AND [TarikhVoroodMojtame] IS NULL) OR ([TarikhVoroodMojtame] = @Original_TarikhV"& _ 
                "oroodMojtame)) AND ((@IsNull_SaatVoroodMojtame = 1 AND [SaatVoroodMojtame] IS NU"& _ 
                "LL) OR ([SaatVoroodMojtame] = @Original_SaatVoroodMojtame)) AND ([DarMamooriyat]"& _ 
                " = @Original_DarMamooriyat));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OperationCode, RanandePersonalCode, Mashin"& _ 
                "ID, MahalBargiriID, MabdaID, MaghsadID, NoeBar, Tozihat, TarikhEzamBargiri, Tari"& _ 
                "khHozoorMahalBargiri, SaatHozoorMahalBagiri, ShomareBarnameRaft, TarikhBarnameRa"& _ 
                "ft, SaatSodoorBarname, KiloometrKhorroojMojtame, MeghdarSookhtKhorooj, TarikhKho"& _ 
                "roojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojtame, MeghdarSookhtVorood, Ma"& _ 
                "safatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTakhliyeAval, SaatHozoorMahal"& _ 
                "TakhliyeAval, TarikhBargiriMojadad, SaatBargiriMojadad, TarikhKhoroojMahalTakhli"& _ 
                "yeAval, SaatKhooojMahalTakhliyeAval, ShomareBarnameBargasht, TarikhBarnameBargas"& _ 
                "ht, MablaghKerayeBargasht, MablaghKerayeRaft, TarikhVoroodMojtame, SaatVoroodMoj"& _ 
                "tame, DarMamooriyat FROM tbl_EzamNavgan WHERE (OperationCode = @OperationCode)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MahalBargiriID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tozihat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhEzamBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhEzamBargiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhHozoorMahalBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalBargiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatHozoorMahalBagiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalBagiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarnameRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarnameRaft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatSodoorBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatSodoorBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KiloometrKhorroojMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrKhorroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookhtKhorooj", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtKhorooj", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhoroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasafatTeyShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarnameBargasht", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DarMamooriyat", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DarMamooriyat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MahalBargiriID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tozihat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tozihat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhEzamBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhEzamBargiri", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhHozoorMahalBargiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalBargiri", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatHozoorMahalBagiri", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalBagiri", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareBarnameRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameRaft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBarnameRaft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameRaft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatSodoorBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatSodoorBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KiloometrKhorroojMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrKhorroojMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MeghdarSookhtKhorooj", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtKhorooj", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhoroojMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasafatTeyShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasafatTeyShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhBargiriMojadad", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatBargiriMojadad", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhBarnameBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBarnameBargasht", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SaatVoroodMojtame", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SaatVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DarMamooriyat", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DarMamooriyat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT OperationCode, RanandePersonalCode, MashinID, MahalBargiriID, MabdaID, Mag"& _ 
                "hsadID, NoeBar, Tozihat, TarikhEzamBargiri, TarikhHozoorMahalBargiri, SaatHozoor"& _ 
                "MahalBagiri, ShomareBarnameRaft, TarikhBarnameRaft, SaatSodoorBarname, Kiloometr"& _ 
                "KhorroojMojtame, MeghdarSookhtKhorooj, TarikhKhoroojMojtame, SaatKhoroojMojtame,"& _ 
                " KiloometrVoroodMojtame, MeghdarSookhtVorood, MasafatTeyShode, SookhtMasrafShode"& _ 
                ", TarikhHozoorMahalTakhliyeAval, SaatHozoorMahalTakhliyeAval, TarikhBargiriMojad"& _ 
                "ad, SaatBargiriMojadad, TarikhKhoroojMahalTakhliyeAval, SaatKhooojMahalTakhliyeA"& _ 
                "val, ShomareBarnameBargasht, TarikhBarnameBargasht, MablaghKerayeBargasht, Mabla"& _ 
                "ghKerayeRaft, TarikhVoroodMojtame, SaatVoroodMojtame, DarMamooriyat FROM dbo.tbl"& _ 
                "_EzamNavgan"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "UPDATE    tbl_EzamNavgan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              KiloometrVoroodMojtame = @KiloometrVor"& _ 
                "oodMojtame, MeghdarSookhtVorood = @MeghdarSookhtVorood, MasafatTeyShode = @Masaf"& _ 
                "atTeyShode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SookhtMasrafShode = @SookhtMasrafShode, Tari"& _ 
                "khHozoorMahalTakhliyeAval = @TarikhHozoorMahalTakhliyeAval, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    SaatHozoorMahalTakhliyeAval = @SaatHozoorMahalTakhliyeAval, TarikhBargiriMoj"& _ 
                "adad = @TarikhBargiriMojadad, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SaatBargiriMojadad = @Saat"& _ 
                "BargiriMojadad, TarikhKhoroojMahalTakhliyeAval = @TarikhKhoroojMahalTakhliyeAval"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SaatKhooojMahalTakhliyeAval = @SaatKhooojMahalTakhliye"& _ 
                "Aval, ShomareBarnameBargasht = @ShomareBarnameBargasht, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "TarikhBarnameBargasht = @TarikhBarnameBargasht, MablaghKerayeBargasht = @Mablagh"& _ 
                "KerayeBargasht, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MablaghKerayeRaft = @MablaghKerayeRaft, "& _ 
                "TarikhVoroodMojtame = @TarikhVoroodMojtame, SaatVoroodMojtame = @SaatVoroodMojta"& _ 
                "me, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      DarMamooriyat = 0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OperationCode = @Opera"& _ 
                "tionCode);"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KiloometrVoroodMojtame", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookhtVorood", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtVorood", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasafatTeyShode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MasafatTeyShode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SookhtMasrafShode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SookhtMasrafShode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatHozoorMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBargiriMojadad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatBargiriMojadad", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatBargiriMojadad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhKhoroojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatKhooojMahalTakhliyeAval", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhooojMahalTakhliyeAval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarnameBargasht", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarnameBargasht", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghKerayeBargasht", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeBargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghKerayeRaft", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghKerayeRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatVoroodMojtame", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatVoroodMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO tbl_EzamNavgan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (OperationCode, RanandePersonal"& _ 
                "Code, MashinID, MahalBargiriID, MabdaID, MaghsadID, NoeBar, Tozihat, TarikhEzamB"& _ 
                "argiri, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      TarikhHozoorMahalBargiri, SaatHozoorMahalBagiri,"& _ 
                " ShomareBarnameRaft, TarikhBarnameRaft, SaatSodoorBarname, KiloometrKhorroojMojt"& _ 
                "ame, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MeghdarSookhtKhorooj, TarikhKhoroojMojtame, SaatKho"& _ 
                "roojMojtame, DarMamooriyat)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES     (@OperationCode,@RanandePersonalCode,@Ma"& _ 
                "shinID,@MahalBargiriID,@MabdaID,@MaghsadID,@NoeBar,@Tozihat,@TarikhEzamBargiri,@"& _ 
                "TarikhHozoorMahalBargiri,@SaatHozoorMahalBagiri,@ShomareBarnameRaft,@TarikhBarna"& _ 
                "meRaft,@SaatSodoorBarname,@KiloometrKhorroojMojtame,@MeghdarSookhtKhorooj,@Tarik"& _ 
                "hKhoroojMojtame,@SaatKhoroojMojtame,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       1);"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MahalBargiriID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MahalBargiriID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoeBar", Global.System.Data.SqlDbType.NVarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tozihat", Global.System.Data.SqlDbType.NVarChar, 500, Global.System.Data.ParameterDirection.Input, 0, 0, "Tozihat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhEzamBargiri", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhEzamBargiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhHozoorMahalBargiri", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhHozoorMahalBargiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatHozoorMahalBagiri", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatHozoorMahalBagiri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarnameRaft", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarnameRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarnameRaft", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarnameRaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatSodoorBarname", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatSodoorBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KiloometrKhorroojMojtame", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KiloometrKhorroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookhtKhorooj", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookhtKhorooj", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhKhoroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaatKhoroojMojtame", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SaatKhoroojMojtame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT DarMamooriyat, KiloometrKhorroojMojtame, KiloometrVoroodMojtame, MabdaID, "& _ 
                "MablaghKerayeBargasht, MablaghKerayeRaft, MaghsadID, MahalBargiriID, MasafatTeyS"& _ 
                "hode, MashinID, MeghdarSookhtKhorooj, MeghdarSookhtVorood, NoeBar, OperationCode"& _ 
                ", RanandePersonalCode, SaatBargiriMojadad, SaatHozoorMahalBagiri, SaatHozoorMaha"& _ 
                "lTakhliyeAval, SaatKhooojMahalTakhliyeAval, SaatKhoroojMojtame, SaatSodoorBarnam"& _ 
                "e, SaatVoroodMojtame, ShomareBarnameBargasht, ShomareBarnameRaft, SookhtMasrafSh"& _ 
                "ode, TarikhBargiriMojadad, TarikhBarnameBargasht, TarikhBarnameRaft, TarikhEzamB"& _ 
                "argiri, TarikhHozoorMahalBargiri, TarikhHozoorMahalTakhliyeAval, TarikhKhoroojMa"& _ 
                "halTakhliyeAval, TarikhKhoroojMojtame, TarikhVoroodMojtame, Tozihat FROM tbl_Eza"& _ 
                "mNavgan WHERE (OperationCode = @OperationCode)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "dbo.usp_GetCurrentOperationCode"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_EzamNavganDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_EzamNavganDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_EzamNavganDataTable = New dsTarabari.tbl_EzamNavganDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOperationCode(ByVal OperationCode As Integer) As dsTarabari.tbl_EzamNavganDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(OperationCode,Integer)
            Dim dataTable As dsTarabari.tbl_EzamNavganDataTable = New dsTarabari.tbl_EzamNavganDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_EzamNavganDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_EzamNavgan")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_OperationCode As Integer,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_MashinID As Integer,  _
                    ByVal Original_MahalBargiriID As Integer,  _
                    ByVal Original_MabdaID As Integer,  _
                    ByVal Original_MaghsadID As Integer,  _
                    ByVal Original_NoeBar As String,  _
                    ByVal Original_Tozihat As String,  _
                    ByVal Original_TarikhEzamBargiri As String,  _
                    ByVal Original_TarikhHozoorMahalBargiri As String,  _
                    ByVal Original_SaatHozoorMahalBagiri As String,  _
                    ByVal Original_ShomareBarnameRaft As Integer,  _
                    ByVal Original_TarikhBarnameRaft As String,  _
                    ByVal Original_SaatSodoorBarname As String,  _
                    ByVal Original_KiloometrKhorroojMojtame As Integer,  _
                    ByVal Original_MeghdarSookhtKhorooj As Integer,  _
                    ByVal Original_TarikhKhoroojMojtame As String,  _
                    ByVal Original_SaatKhoroojMojtame As String,  _
                    ByVal Original_KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal Original_SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal Original_TarikhBargiriMojadad As String,  _
                    ByVal Original_SaatBargiriMojadad As String,  _
                    ByVal Original_TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal Original_SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal Original_ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhBarnameBargasht As String,  _
                    ByVal Original_MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhVoroodMojtame As String,  _
                    ByVal Original_SaatVoroodMojtame As String,  _
                    ByVal Original_DarMamooriyat As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_OperationCode,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RanandePersonalCode,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MashinID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_MahalBargiriID,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MabdaID,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_MaghsadID,Integer)
            If (Original_NoeBar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoeBar")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NoeBar,String)
            End If
            If (Original_Tozihat Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Tozihat,String)
            End If
            If (Original_TarikhEzamBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhEzamBargiri")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_TarikhEzamBargiri,String)
            End If
            If (Original_TarikhHozoorMahalBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhHozoorMahalBargiri")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_TarikhHozoorMahalBargiri,String)
            End If
            If (Original_SaatHozoorMahalBagiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SaatHozoorMahalBagiri")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SaatHozoorMahalBagiri,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ShomareBarnameRaft,Integer)
            If (Original_TarikhBarnameRaft Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhBarnameRaft")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_TarikhBarnameRaft,String)
            End If
            If (Original_SaatSodoorBarname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SaatSodoorBarname")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_SaatSodoorBarname,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_KiloometrKhorroojMojtame,Integer)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_MeghdarSookhtKhorooj,Integer)
            If (Original_TarikhKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhKhoroojMojtame")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_TarikhKhoroojMojtame,String)
            End If
            If (Original_SaatKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SaatKhoroojMojtame")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SaatKhoroojMojtame,String)
            End If
            If (Original_KiloometrVoroodMojtame.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_KiloometrVoroodMojtame.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_MeghdarSookhtVorood.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_MeghdarSookhtVorood.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_MasafatTeyShode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_MasafatTeyShode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_SookhtMasrafShode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_SookhtMasrafShode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_TarikhHozoorMahalTakhliyeAval,String)
            End If
            If (Original_SaatHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_SaatHozoorMahalTakhliyeAval,String)
            End If
            If (Original_TarikhBargiriMojadad Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_TarikhBargiriMojadad,String)
            End If
            If (Original_SaatBargiriMojadad Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_SaatBargiriMojadad,String)
            End If
            If (Original_TarikhKhoroojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_TarikhKhoroojMahalTakhliyeAval,String)
            End If
            If (Original_SaatKhooojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_SaatKhooojMahalTakhliyeAval,String)
            End If
            If (Original_ShomareBarnameBargasht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_ShomareBarnameBargasht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhBarnameBargasht Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_TarikhBarnameBargasht,String)
            End If
            If (Original_MablaghKerayeBargasht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_MablaghKerayeBargasht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_MablaghKerayeRaft.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_MablaghKerayeRaft.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhVoroodMojtame Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_TarikhVoroodMojtame,String)
            End If
            If (Original_SaatVoroodMojtame Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_SaatVoroodMojtame,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_DarMamooriyat,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal OperationCode As Integer,  _
                    ByVal RanandePersonalCode As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal MahalBargiriID As Integer,  _
                    ByVal MabdaID As Integer,  _
                    ByVal MaghsadID As Integer,  _
                    ByVal NoeBar As String,  _
                    ByVal Tozihat As String,  _
                    ByVal TarikhEzamBargiri As String,  _
                    ByVal TarikhHozoorMahalBargiri As String,  _
                    ByVal SaatHozoorMahalBagiri As String,  _
                    ByVal ShomareBarnameRaft As Integer,  _
                    ByVal TarikhBarnameRaft As String,  _
                    ByVal SaatSodoorBarname As String,  _
                    ByVal KiloometrKhorroojMojtame As Integer,  _
                    ByVal MeghdarSookhtKhorooj As Integer,  _
                    ByVal TarikhKhoroojMojtame As String,  _
                    ByVal SaatKhoroojMojtame As String,  _
                    ByVal KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal TarikhBargiriMojadad As String,  _
                    ByVal SaatBargiriMojadad As String,  _
                    ByVal TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarnameBargasht As String,  _
                    ByVal MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhVoroodMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal DarMamooriyat As Boolean) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(OperationCode,Integer)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(MashinID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(MahalBargiriID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(MabdaID,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(MaghsadID,Integer)
            If (NoeBar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoeBar")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(NoeBar,String)
            End If
            If (Tozihat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Tozihat,String)
            End If
            If (TarikhEzamBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhEzamBargiri")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(TarikhEzamBargiri,String)
            End If
            If (TarikhHozoorMahalBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhHozoorMahalBargiri")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TarikhHozoorMahalBargiri,String)
            End If
            If (SaatHozoorMahalBagiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatHozoorMahalBagiri")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SaatHozoorMahalBagiri,String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(ShomareBarnameRaft,Integer)
            If (TarikhBarnameRaft Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhBarnameRaft")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TarikhBarnameRaft,String)
            End If
            If (SaatSodoorBarname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatSodoorBarname")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SaatSodoorBarname,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(KiloometrKhorroojMojtame,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(MeghdarSookhtKhorooj,Integer)
            If (TarikhKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhKhoroojMojtame")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(TarikhKhoroojMojtame,String)
            End If
            If (SaatKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatKhoroojMojtame")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(SaatKhoroojMojtame,String)
            End If
            If (KiloometrVoroodMojtame.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(KiloometrVoroodMojtame.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (MeghdarSookhtVorood.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MeghdarSookhtVorood.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (MasafatTeyShode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(MasafatTeyShode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SookhtMasrafShode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SookhtMasrafShode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TarikhHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(TarikhHozoorMahalTakhliyeAval,String)
            End If
            If (SaatHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(SaatHozoorMahalTakhliyeAval,String)
            End If
            If (TarikhBargiriMojadad Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TarikhBargiriMojadad,String)
            End If
            If (SaatBargiriMojadad Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(SaatBargiriMojadad,String)
            End If
            If (TarikhKhoroojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(TarikhKhoroojMahalTakhliyeAval,String)
            End If
            If (SaatKhooojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SaatKhooojMahalTakhliyeAval,String)
            End If
            If (ShomareBarnameBargasht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ShomareBarnameBargasht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (TarikhBarnameBargasht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(TarikhBarnameBargasht,String)
            End If
            If (MablaghKerayeBargasht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(MablaghKerayeBargasht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (MablaghKerayeRaft.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(MablaghKerayeRaft.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (TarikhVoroodMojtame Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TarikhVoroodMojtame,String)
            End If
            If (SaatVoroodMojtame Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(SaatVoroodMojtame,String)
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(DarMamooriyat,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OperationCode As Integer,  _
                    ByVal RanandePersonalCode As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal MahalBargiriID As Integer,  _
                    ByVal MabdaID As Integer,  _
                    ByVal MaghsadID As Integer,  _
                    ByVal NoeBar As String,  _
                    ByVal Tozihat As String,  _
                    ByVal TarikhEzamBargiri As String,  _
                    ByVal TarikhHozoorMahalBargiri As String,  _
                    ByVal SaatHozoorMahalBagiri As String,  _
                    ByVal ShomareBarnameRaft As Integer,  _
                    ByVal TarikhBarnameRaft As String,  _
                    ByVal SaatSodoorBarname As String,  _
                    ByVal KiloometrKhorroojMojtame As Integer,  _
                    ByVal MeghdarSookhtKhorooj As Integer,  _
                    ByVal TarikhKhoroojMojtame As String,  _
                    ByVal SaatKhoroojMojtame As String,  _
                    ByVal KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal TarikhBargiriMojadad As String,  _
                    ByVal SaatBargiriMojadad As String,  _
                    ByVal TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarnameBargasht As String,  _
                    ByVal MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhVoroodMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal DarMamooriyat As Boolean,  _
                    ByVal Original_OperationCode As Integer,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_MashinID As Integer,  _
                    ByVal Original_MahalBargiriID As Integer,  _
                    ByVal Original_MabdaID As Integer,  _
                    ByVal Original_MaghsadID As Integer,  _
                    ByVal Original_NoeBar As String,  _
                    ByVal Original_Tozihat As String,  _
                    ByVal Original_TarikhEzamBargiri As String,  _
                    ByVal Original_TarikhHozoorMahalBargiri As String,  _
                    ByVal Original_SaatHozoorMahalBagiri As String,  _
                    ByVal Original_ShomareBarnameRaft As Integer,  _
                    ByVal Original_TarikhBarnameRaft As String,  _
                    ByVal Original_SaatSodoorBarname As String,  _
                    ByVal Original_KiloometrKhorroojMojtame As Integer,  _
                    ByVal Original_MeghdarSookhtKhorooj As Integer,  _
                    ByVal Original_TarikhKhoroojMojtame As String,  _
                    ByVal Original_SaatKhoroojMojtame As String,  _
                    ByVal Original_KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal Original_SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal Original_TarikhBargiriMojadad As String,  _
                    ByVal Original_SaatBargiriMojadad As String,  _
                    ByVal Original_TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal Original_SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal Original_ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhBarnameBargasht As String,  _
                    ByVal Original_MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhVoroodMojtame As String,  _
                    ByVal Original_SaatVoroodMojtame As String,  _
                    ByVal Original_DarMamooriyat As Boolean) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OperationCode,Integer)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(MashinID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MahalBargiriID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MabdaID,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(MaghsadID,Integer)
            If (NoeBar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoeBar")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NoeBar,String)
            End If
            If (Tozihat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Tozihat,String)
            End If
            If (TarikhEzamBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhEzamBargiri")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(TarikhEzamBargiri,String)
            End If
            If (TarikhHozoorMahalBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhHozoorMahalBargiri")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(TarikhHozoorMahalBargiri,String)
            End If
            If (SaatHozoorMahalBagiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatHozoorMahalBagiri")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SaatHozoorMahalBagiri,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ShomareBarnameRaft,Integer)
            If (TarikhBarnameRaft Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhBarnameRaft")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TarikhBarnameRaft,String)
            End If
            If (SaatSodoorBarname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatSodoorBarname")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SaatSodoorBarname,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(KiloometrKhorroojMojtame,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(MeghdarSookhtKhorooj,Integer)
            If (TarikhKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhKhoroojMojtame")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(TarikhKhoroojMojtame,String)
            End If
            If (SaatKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatKhoroojMojtame")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(SaatKhoroojMojtame,String)
            End If
            If (KiloometrVoroodMojtame.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(KiloometrVoroodMojtame.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (MeghdarSookhtVorood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(MeghdarSookhtVorood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (MasafatTeyShode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(MasafatTeyShode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SookhtMasrafShode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SookhtMasrafShode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TarikhHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(TarikhHozoorMahalTakhliyeAval,String)
            End If
            If (SaatHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(SaatHozoorMahalTakhliyeAval,String)
            End If
            If (TarikhBargiriMojadad Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TarikhBargiriMojadad,String)
            End If
            If (SaatBargiriMojadad Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(SaatBargiriMojadad,String)
            End If
            If (TarikhKhoroojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(TarikhKhoroojMahalTakhliyeAval,String)
            End If
            If (SaatKhooojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(SaatKhooojMahalTakhliyeAval,String)
            End If
            If (ShomareBarnameBargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(ShomareBarnameBargasht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (TarikhBarnameBargasht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(TarikhBarnameBargasht,String)
            End If
            If (MablaghKerayeBargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(MablaghKerayeBargasht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (MablaghKerayeRaft.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(MablaghKerayeRaft.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (TarikhVoroodMojtame Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(TarikhVoroodMojtame,String)
            End If
            If (SaatVoroodMojtame Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(SaatVoroodMojtame,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(DarMamooriyat,Boolean)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_OperationCode,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_RanandePersonalCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_MashinID,Integer)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_MahalBargiriID,Integer)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MabdaID,Integer)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_MaghsadID,Integer)
            If (Original_NoeBar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoeBar")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_NoeBar,String)
            End If
            If (Original_Tozihat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_Tozihat,String)
            End If
            If (Original_TarikhEzamBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhEzamBargiri")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_TarikhEzamBargiri,String)
            End If
            If (Original_TarikhHozoorMahalBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhHozoorMahalBargiri")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_TarikhHozoorMahalBargiri,String)
            End If
            If (Original_SaatHozoorMahalBagiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SaatHozoorMahalBagiri")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_SaatHozoorMahalBagiri,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_ShomareBarnameRaft,Integer)
            If (Original_TarikhBarnameRaft Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhBarnameRaft")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_TarikhBarnameRaft,String)
            End If
            If (Original_SaatSodoorBarname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SaatSodoorBarname")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_SaatSodoorBarname,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_KiloometrKhorroojMojtame,Integer)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_MeghdarSookhtKhorooj,Integer)
            If (Original_TarikhKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TarikhKhoroojMojtame")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_TarikhKhoroojMojtame,String)
            End If
            If (Original_SaatKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SaatKhoroojMojtame")
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_SaatKhoroojMojtame,String)
            End If
            If (Original_KiloometrVoroodMojtame.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_KiloometrVoroodMojtame.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_MeghdarSookhtVorood.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_MeghdarSookhtVorood.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_MasafatTeyShode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_MasafatTeyShode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_SookhtMasrafShode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_SookhtMasrafShode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_TarikhHozoorMahalTakhliyeAval,String)
            End If
            If (Original_SaatHozoorMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_SaatHozoorMahalTakhliyeAval,String)
            End If
            If (Original_TarikhBargiriMojadad Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_TarikhBargiriMojadad,String)
            End If
            If (Original_SaatBargiriMojadad Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_SaatBargiriMojadad,String)
            End If
            If (Original_TarikhKhoroojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_TarikhKhoroojMahalTakhliyeAval,String)
            End If
            If (Original_SaatKhooojMahalTakhliyeAval Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_SaatKhooojMahalTakhliyeAval,String)
            End If
            If (Original_ShomareBarnameBargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_ShomareBarnameBargasht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhBarnameBargasht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_TarikhBarnameBargasht,String)
            End If
            If (Original_MablaghKerayeBargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_MablaghKerayeBargasht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_MablaghKerayeRaft.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_MablaghKerayeRaft.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhVoroodMojtame Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_TarikhVoroodMojtame,String)
            End If
            If (Original_SaatVoroodMojtame Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_SaatVoroodMojtame,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_DarMamooriyat,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RanandePersonalCode As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal MahalBargiriID As Integer,  _
                    ByVal MabdaID As Integer,  _
                    ByVal MaghsadID As Integer,  _
                    ByVal NoeBar As String,  _
                    ByVal Tozihat As String,  _
                    ByVal TarikhEzamBargiri As String,  _
                    ByVal TarikhHozoorMahalBargiri As String,  _
                    ByVal SaatHozoorMahalBagiri As String,  _
                    ByVal ShomareBarnameRaft As Integer,  _
                    ByVal TarikhBarnameRaft As String,  _
                    ByVal SaatSodoorBarname As String,  _
                    ByVal KiloometrKhorroojMojtame As Integer,  _
                    ByVal MeghdarSookhtKhorooj As Integer,  _
                    ByVal TarikhKhoroojMojtame As String,  _
                    ByVal SaatKhoroojMojtame As String,  _
                    ByVal KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal TarikhBargiriMojadad As String,  _
                    ByVal SaatBargiriMojadad As String,  _
                    ByVal TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarnameBargasht As String,  _
                    ByVal MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhVoroodMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal DarMamooriyat As Boolean,  _
                    ByVal Original_OperationCode As Integer,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_MashinID As Integer,  _
                    ByVal Original_MahalBargiriID As Integer,  _
                    ByVal Original_MabdaID As Integer,  _
                    ByVal Original_MaghsadID As Integer,  _
                    ByVal Original_NoeBar As String,  _
                    ByVal Original_Tozihat As String,  _
                    ByVal Original_TarikhEzamBargiri As String,  _
                    ByVal Original_TarikhHozoorMahalBargiri As String,  _
                    ByVal Original_SaatHozoorMahalBagiri As String,  _
                    ByVal Original_ShomareBarnameRaft As Integer,  _
                    ByVal Original_TarikhBarnameRaft As String,  _
                    ByVal Original_SaatSodoorBarname As String,  _
                    ByVal Original_KiloometrKhorroojMojtame As Integer,  _
                    ByVal Original_MeghdarSookhtKhorooj As Integer,  _
                    ByVal Original_TarikhKhoroojMojtame As String,  _
                    ByVal Original_SaatKhoroojMojtame As String,  _
                    ByVal Original_KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal Original_SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal Original_TarikhBargiriMojadad As String,  _
                    ByVal Original_SaatBargiriMojadad As String,  _
                    ByVal Original_TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal Original_SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal Original_ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhBarnameBargasht As String,  _
                    ByVal Original_MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhVoroodMojtame As String,  _
                    ByVal Original_SaatVoroodMojtame As String,  _
                    ByVal Original_DarMamooriyat As Boolean) As Integer
            Return Me.Update(Original_OperationCode, RanandePersonalCode, MashinID, MahalBargiriID, MabdaID, MaghsadID, NoeBar, Tozihat, TarikhEzamBargiri, TarikhHozoorMahalBargiri, SaatHozoorMahalBagiri, ShomareBarnameRaft, TarikhBarnameRaft, SaatSodoorBarname, KiloometrKhorroojMojtame, MeghdarSookhtKhorooj, TarikhKhoroojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojtame, MeghdarSookhtVorood, MasafatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTakhliyeAval, SaatHozoorMahalTakhliyeAval, TarikhBargiriMojadad, SaatBargiriMojadad, TarikhKhoroojMahalTakhliyeAval, SaatKhooojMahalTakhliyeAval, ShomareBarnameBargasht, TarikhBarnameBargasht, MablaghKerayeBargasht, MablaghKerayeRaft, TarikhVoroodMojtame, SaatVoroodMojtame, DarMamooriyat, Original_OperationCode, Original_RanandePersonalCode, Original_MashinID, Original_MahalBargiriID, Original_MabdaID, Original_MaghsadID, Original_NoeBar, Original_Tozihat, Original_TarikhEzamBargiri, Original_TarikhHozoorMahalBargiri, Original_SaatHozoorMahalBagiri, Original_ShomareBarnameRaft, Original_TarikhBarnameRaft, Original_SaatSodoorBarname, Original_KiloometrKhorroojMojtame, Original_MeghdarSookhtKhorooj, Original_TarikhKhoroojMojtame, Original_SaatKhoroojMojtame, Original_KiloometrVoroodMojtame, Original_MeghdarSookhtVorood, Original_MasafatTeyShode, Original_SookhtMasrafShode, Original_TarikhHozoorMahalTakhliyeAval, Original_SaatHozoorMahalTakhliyeAval, Original_TarikhBargiriMojadad, Original_SaatBargiriMojadad, Original_TarikhKhoroojMahalTakhliyeAval, Original_SaatKhooojMahalTakhliyeAval, Original_ShomareBarnameBargasht, Original_TarikhBarnameBargasht, Original_MablaghKerayeBargasht, Original_MablaghKerayeRaft, Original_TarikhVoroodMojtame, Original_SaatVoroodMojtame, Original_DarMamooriyat)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function BazgashtKhodro( _
                    ByVal KiloometrVoroodMojtame As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookhtVorood As Global.System.Nullable(Of Integer),  _
                    ByVal MasafatTeyShode As Global.System.Nullable(Of Integer),  _
                    ByVal SookhtMasrafShode As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhHozoorMahalTakhliyeAval As String,  _
                    ByVal SaatHozoorMahalTakhliyeAval As String,  _
                    ByVal TarikhBargiriMojadad As String,  _
                    ByVal SaatBargiriMojadad As String,  _
                    ByVal TarikhKhoroojMahalTakhliyeAval As String,  _
                    ByVal SaatKhooojMahalTakhliyeAval As String,  _
                    ByVal ShomareBarnameBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarnameBargasht As String,  _
                    ByVal MablaghKerayeBargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MablaghKerayeRaft As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhVoroodMojtame As String,  _
                    ByVal SaatVoroodMojtame As String,  _
                    ByVal OperationCode As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (KiloometrVoroodMojtame.HasValue = true) Then
                command.Parameters(0).Value = CType(KiloometrVoroodMojtame.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (MeghdarSookhtVorood.HasValue = true) Then
                command.Parameters(1).Value = CType(MeghdarSookhtVorood.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (MasafatTeyShode.HasValue = true) Then
                command.Parameters(2).Value = CType(MasafatTeyShode.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SookhtMasrafShode.HasValue = true) Then
                command.Parameters(3).Value = CType(SookhtMasrafShode.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (TarikhHozoorMahalTakhliyeAval Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(TarikhHozoorMahalTakhliyeAval,String)
            End If
            If (SaatHozoorMahalTakhliyeAval Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(SaatHozoorMahalTakhliyeAval,String)
            End If
            If (TarikhBargiriMojadad Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(TarikhBargiriMojadad,String)
            End If
            If (SaatBargiriMojadad Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SaatBargiriMojadad,String)
            End If
            If (TarikhKhoroojMahalTakhliyeAval Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(TarikhKhoroojMahalTakhliyeAval,String)
            End If
            If (SaatKhooojMahalTakhliyeAval Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(SaatKhooojMahalTakhliyeAval,String)
            End If
            If (ShomareBarnameBargasht.HasValue = true) Then
                command.Parameters(10).Value = CType(ShomareBarnameBargasht.Value,Integer)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TarikhBarnameBargasht Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(TarikhBarnameBargasht,String)
            End If
            If (MablaghKerayeBargasht.HasValue = true) Then
                command.Parameters(12).Value = CType(MablaghKerayeBargasht.Value,Integer)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MablaghKerayeRaft.HasValue = true) Then
                command.Parameters(13).Value = CType(MablaghKerayeRaft.Value,Integer)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TarikhVoroodMojtame Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(TarikhVoroodMojtame,String)
            End If
            If (SaatVoroodMojtame Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(SaatVoroodMojtame,String)
            End If
            command.Parameters(16).Value = CType(OperationCode,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function EzamKhodro( _
                    ByVal OperationCode As Integer,  _
                    ByVal RanandePersonalCode As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal MahalBargiriID As Integer,  _
                    ByVal MabdaID As Integer,  _
                    ByVal MaghsadID As Integer,  _
                    ByVal NoeBar As String,  _
                    ByVal Tozihat As String,  _
                    ByVal TarikhEzamBargiri As String,  _
                    ByVal TarikhHozoorMahalBargiri As String,  _
                    ByVal SaatHozoorMahalBagiri As String,  _
                    ByVal ShomareBarnameRaft As Integer,  _
                    ByVal TarikhBarnameRaft As String,  _
                    ByVal SaatSodoorBarname As String,  _
                    ByVal KiloometrKhorroojMojtame As Integer,  _
                    ByVal MeghdarSookhtKhorooj As Integer,  _
                    ByVal TarikhKhoroojMojtame As String,  _
                    ByVal SaatKhoroojMojtame As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(OperationCode,Integer)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                command.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            command.Parameters(2).Value = CType(MashinID,Integer)
            command.Parameters(3).Value = CType(MahalBargiriID,Integer)
            command.Parameters(4).Value = CType(MabdaID,Integer)
            command.Parameters(5).Value = CType(MaghsadID,Integer)
            If (NoeBar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoeBar")
            Else
                command.Parameters(6).Value = CType(NoeBar,String)
            End If
            If (Tozihat Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Tozihat,String)
            End If
            If (TarikhEzamBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhEzamBargiri")
            Else
                command.Parameters(8).Value = CType(TarikhEzamBargiri,String)
            End If
            If (TarikhHozoorMahalBargiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhHozoorMahalBargiri")
            Else
                command.Parameters(9).Value = CType(TarikhHozoorMahalBargiri,String)
            End If
            If (SaatHozoorMahalBagiri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatHozoorMahalBagiri")
            Else
                command.Parameters(10).Value = CType(SaatHozoorMahalBagiri,String)
            End If
            command.Parameters(11).Value = CType(ShomareBarnameRaft,Integer)
            If (TarikhBarnameRaft Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhBarnameRaft")
            Else
                command.Parameters(12).Value = CType(TarikhBarnameRaft,String)
            End If
            If (SaatSodoorBarname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatSodoorBarname")
            Else
                command.Parameters(13).Value = CType(SaatSodoorBarname,String)
            End If
            command.Parameters(14).Value = CType(KiloometrKhorroojMojtame,Integer)
            command.Parameters(15).Value = CType(MeghdarSookhtKhorooj,Integer)
            If (TarikhKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TarikhKhoroojMojtame")
            Else
                command.Parameters(16).Value = CType(TarikhKhoroojMojtame,String)
            End If
            If (SaatKhoroojMojtame Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SaatKhoroojMojtame")
            Else
                command.Parameters(17).Value = CType(SaatKhoroojMojtame,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetCurrentOperationCode() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vSelectNavganTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vSelectNavgan"
            tableMapping.ColumnMappings.Add("OperationCode", "OperationCode")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("RanandeFullName", "RanandeFullName")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("MahalBargiriID", "MahalBargiriID")
            tableMapping.ColumnMappings.Add("NameMahal", "NameMahal")
            tableMapping.ColumnMappings.Add("MabdaID", "MabdaID")
            tableMapping.ColumnMappings.Add("NameMabda", "NameMabda")
            tableMapping.ColumnMappings.Add("MaghsadID", "MaghsadID")
            tableMapping.ColumnMappings.Add("NameMaghsad", "NameMaghsad")
            tableMapping.ColumnMappings.Add("NoeBar", "NoeBar")
            tableMapping.ColumnMappings.Add("Tozihat", "Tozihat")
            tableMapping.ColumnMappings.Add("TarikhEzamBargiri", "TarikhEzamBargiri")
            tableMapping.ColumnMappings.Add("TarikhHozoorMahalBargiri", "TarikhHozoorMahalBargiri")
            tableMapping.ColumnMappings.Add("SaatHozoorMahalBagiri", "SaatHozoorMahalBagiri")
            tableMapping.ColumnMappings.Add("ShomareBarnameRaft", "ShomareBarnameRaft")
            tableMapping.ColumnMappings.Add("TarikhBarnameRaft", "TarikhBarnameRaft")
            tableMapping.ColumnMappings.Add("SaatSodoorBarname", "SaatSodoorBarname")
            tableMapping.ColumnMappings.Add("KiloometrKhorroojMojtame", "KiloometrKhorroojMojtame")
            tableMapping.ColumnMappings.Add("MeghdarSookhtKhorooj", "MeghdarSookhtKhorooj")
            tableMapping.ColumnMappings.Add("TarikhKhoroojMojtame", "TarikhKhoroojMojtame")
            tableMapping.ColumnMappings.Add("SaatKhoroojMojtame", "SaatKhoroojMojtame")
            tableMapping.ColumnMappings.Add("KiloometrVoroodMojtame", "KiloometrVoroodMojtame")
            tableMapping.ColumnMappings.Add("MeghdarSookhtVorood", "MeghdarSookhtVorood")
            tableMapping.ColumnMappings.Add("MasafatTeyShode", "MasafatTeyShode")
            tableMapping.ColumnMappings.Add("SookhtMasrafShode", "SookhtMasrafShode")
            tableMapping.ColumnMappings.Add("TarikhHozoorMahalTakhliyeAval", "TarikhHozoorMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("SaatHozoorMahalTakhliyeAval", "SaatHozoorMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("TarikhBargiriMojadad", "TarikhBargiriMojadad")
            tableMapping.ColumnMappings.Add("SaatBargiriMojadad", "SaatBargiriMojadad")
            tableMapping.ColumnMappings.Add("TarikhKhoroojMahalTakhliyeAval", "TarikhKhoroojMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("SaatKhooojMahalTakhliyeAval", "SaatKhooojMahalTakhliyeAval")
            tableMapping.ColumnMappings.Add("ShomareBarnameBargasht", "ShomareBarnameBargasht")
            tableMapping.ColumnMappings.Add("TarikhBarnameBargasht", "TarikhBarnameBargasht")
            tableMapping.ColumnMappings.Add("MablaghKerayeBargasht", "MablaghKerayeBargasht")
            tableMapping.ColumnMappings.Add("MablaghKerayeRaft", "MablaghKerayeRaft")
            tableMapping.ColumnMappings.Add("TarikhVoroodMojtame", "TarikhVoroodMojtame")
            tableMapping.ColumnMappings.Add("SaatVoroodMojtame", "SaatVoroodMojtame")
            tableMapping.ColumnMappings.Add("DarMamooriyat", "DarMamooriyat")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT OperationCode, RanandePersonalCode, RanandeFullName, MashinID, Pelak, Maha"& _ 
                "lBargiriID, NameMahal, MabdaID, NameMabda, MaghsadID, NameMaghsad, NoeBar, Tozih"& _ 
                "at, TarikhEzamBargiri, TarikhHozoorMahalBargiri, SaatHozoorMahalBagiri, ShomareB"& _ 
                "arnameRaft, TarikhBarnameRaft, SaatSodoorBarname, KiloometrKhorroojMojtame, Megh"& _ 
                "darSookhtKhorooj, TarikhKhoroojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojta"& _ 
                "me, MeghdarSookhtVorood, MasafatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTa"& _ 
                "khliyeAval, SaatHozoorMahalTakhliyeAval, TarikhBargiriMojadad, SaatBargiriMojada"& _ 
                "d, TarikhKhoroojMahalTakhliyeAval, SaatKhooojMahalTakhliyeAval, ShomareBarnameBa"& _ 
                "rgasht, TarikhBarnameBargasht, MablaghKerayeBargasht, MablaghKerayeRaft, TarikhV"& _ 
                "oroodMojtame, SaatVoroodMojtame, DarMamooriyat FROM dbo.vSelectNavgan"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     OperationCode, RanandePersonalCode, RanandeFullName, MashinID, Pelak, "& _ 
                "MahalBargiriID, NameMahal, MabdaID, NameMabda, MaghsadID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  NameMaghsad, NoeBar, Tozihat, TarikhEzamBargiri, TarikhHozoorMahalBargiri, Saa"& _ 
                "tHozoorMahalBagiri, ShomareBarnameRaft, TarikhBarnameRaft, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "   SaatSodoorBarname, KiloometrKhorroojMojtame, MeghdarSookhtKhorooj, TarikhKhor"& _ 
                "oojMojtame, SaatKhoroojMojtame, KiloometrVoroodMojtame, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "MeghdarSookhtVorood, MasafatTeyShode, SookhtMasrafShode, TarikhHozoorMahalTakhli"& _ 
                "yeAval, SaatHozoorMahalTakhliyeAval, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      TarikhBargiriMojada"& _ 
                "d, SaatBargiriMojadad, TarikhKhoroojMahalTakhliyeAval, SaatKhooojMahalTakhliyeAv"& _ 
                "al, ShomareBarnameBargasht, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      TarikhBarnameBargasht, Mabla"& _ 
                "ghKerayeBargasht, MablaghKerayeRaft, TarikhVoroodMojtame, SaatVoroodMojtame, Dar"& _ 
                "Mamooriyat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         vSelectNavgan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OperationCode = @operationcod"& _ 
                "e)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@operationcode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.vSelectNavganDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.vSelectNavganDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.vSelectNavganDataTable = New dsTarabari.vSelectNavganDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOperationCode(ByVal operationcode As Integer) As dsTarabari.vSelectNavganDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(operationcode,Integer)
            Dim dataTable As dsTarabari.vSelectNavganDataTable = New dsTarabari.vSelectNavganDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_TamiratTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Tamirat"
            tableMapping.ColumnMappings.Add("FactorID", "FactorID")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("NameTamirgah", "NameTamirgah")
            tableMapping.ColumnMappings.Add("KhesaratSales", "KhesaratSales")
            tableMapping.ColumnMappings.Add("KhesaratBadane", "KhesaratBadane")
            tableMapping.ColumnMappings.Add("IsProcess", "IsProcess")
            tableMapping.ColumnMappings.Add("PaymentStatus", "PaymentStatus")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Tamirat] WHERE (([FactorID] = @Original_FactorID) AND ([RanandeP"& _ 
                "ersonalCode] = @Original_RanandePersonalCode) AND ([MashinID] = @Original_Mashin"& _ 
                "ID) AND ([pDate] = @Original_pDate) AND ([NameTamirgah] = @Original_NameTamirgah"& _ 
                ") AND ((@IsNull_KhesaratSales = 1 AND [KhesaratSales] IS NULL) OR ([KhesaratSale"& _ 
                "s] = @Original_KhesaratSales)) AND ((@IsNull_KhesaratBadane = 1 AND [KhesaratBad"& _ 
                "ane] IS NULL) OR ([KhesaratBadane] = @Original_KhesaratBadane)) AND ([IsProcess]"& _ 
                " = @Original_IsProcess) AND ([PaymentStatus] = @Original_PaymentStatus))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameTamirgah", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameTamirgah", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KhesaratSales", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KhesaratSales", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KhesaratBadane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KhesaratBadane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentStatus", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO tbl_Tamirat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (FactorID, RanandePersonalCode, Ma"& _ 
                "shinID, pDate, NameTamirgah, KhesaratSales, KhesaratBadane)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES     (@Factor"& _ 
                "ID,@RanandePersonalCode,@MashinID,@pDate,@NameTamirgah,@KhesaratSales,@KhesaratB"& _ 
                "adane); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FactorID, RanandePersonalCode, MashinID, pDate, NameTamirgah, K"& _ 
                "hesaratSales, KhesaratBadane, IsProcess, PaymentStatus FROM tbl_Tamirat WHERE (F"& _ 
                "actorID = @FactorID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameTamirgah", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "NameTamirgah", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhesaratSales", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhesaratBadane", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Tamirat] SET [FactorID] = @FactorID, [RanandePersonalCode] = @Ranande"& _ 
                "PersonalCode, [MashinID] = @MashinID, [pDate] = @pDate, [NameTamirgah] = @NameTa"& _ 
                "mirgah, [KhesaratSales] = @KhesaratSales, [KhesaratBadane] = @KhesaratBadane, [I"& _ 
                "sProcess] = @IsProcess, [PaymentStatus] = @PaymentStatus WHERE (([FactorID] = @O"& _ 
                "riginal_FactorID) AND ([RanandePersonalCode] = @Original_RanandePersonalCode) AN"& _ 
                "D ([MashinID] = @Original_MashinID) AND ([pDate] = @Original_pDate) AND ([NameTa"& _ 
                "mirgah] = @Original_NameTamirgah) AND ((@IsNull_KhesaratSales = 1 AND [KhesaratS"& _ 
                "ales] IS NULL) OR ([KhesaratSales] = @Original_KhesaratSales)) AND ((@IsNull_Khe"& _ 
                "saratBadane = 1 AND [KhesaratBadane] IS NULL) OR ([KhesaratBadane] = @Original_K"& _ 
                "hesaratBadane)) AND ([IsProcess] = @Original_IsProcess) AND ([PaymentStatus] = @"& _ 
                "Original_PaymentStatus));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FactorID, RanandePersonalCode, MashinID, pDate"& _ 
                ", NameTamirgah, KhesaratSales, KhesaratBadane, IsProcess, PaymentStatus FROM tbl"& _ 
                "_Tamirat WHERE (FactorID = @FactorID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameTamirgah", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameTamirgah", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhesaratSales", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhesaratBadane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentStatus", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameTamirgah", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameTamirgah", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KhesaratSales", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KhesaratSales", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KhesaratBadane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KhesaratBadane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentStatus", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(7) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     FactorID, RanandePersonalCode, MashinID, pDate, NameTamirgah, Khesarat"& _ 
                "Sales, KhesaratBadane, IsProcess, PaymentStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Tamirat"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "UPDATE    tbl_Tamirat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              PaymentStatus = @PaymentStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                " (FactorID = @FactorID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentStatus", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM tbl_Tamirat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (FactorID = @FactorID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE    tbl_Tamirat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              IsProcess = @IsProcess"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Factor"& _ 
                "ID = @FactorID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcess", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE    tbl_Tamirat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              RanandePersonalCode = @RanandePersonalCod"& _ 
                "e, MashinID = @MashinID, pDate = @pDate, NameTamirgah = @NameTamirgah, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               KhesaratSales = @KhesaratSales, KhesaratBadane = @KhesaratBadane"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (FactorID = @Original_FactorID);"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameTamirgah", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "NameTamirgah", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhesaratSales", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratSales", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhesaratBadane", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KhesaratBadane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "dbo.usp_GetFactorID"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "dbo.usp_GetTotalBadane"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "dbo.usp_GetTotalSales"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_TamiratDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_TamiratDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_TamiratDataTable = New dsTarabari.tbl_TamiratDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_TamiratDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Tamirat")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FactorID As Integer, ByVal Original_RanandePersonalCode As String, ByVal Original_MashinID As Integer, ByVal Original_pDate As String, ByVal Original_NameTamirgah As String, ByVal Original_KhesaratSales As Global.System.Nullable(Of Integer), ByVal Original_KhesaratBadane As Global.System.Nullable(Of Integer), ByVal Original_IsProcess As Boolean, ByVal Original_PaymentStatus As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FactorID,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RanandePersonalCode,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MashinID,Integer)
            If (Original_pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pDate")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_pDate,String)
            End If
            If (Original_NameTamirgah Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameTamirgah")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NameTamirgah,String)
            End If
            If (Original_KhesaratSales.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_KhesaratSales.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_KhesaratBadane.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_KhesaratBadane.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_IsProcess,Boolean)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PaymentStatus,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FactorID As Integer, ByVal RanandePersonalCode As String, ByVal MashinID As Integer, ByVal pDate As String, ByVal NameTamirgah As String, ByVal KhesaratSales As Global.System.Nullable(Of Integer), ByVal KhesaratBadane As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FactorID,Integer)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(MashinID,Integer)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(pDate,String)
            End If
            If (NameTamirgah Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameTamirgah")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NameTamirgah,String)
            End If
            If (KhesaratSales.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(KhesaratSales.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (KhesaratBadane.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(KhesaratBadane.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FactorID As Integer,  _
                    ByVal RanandePersonalCode As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal pDate As String,  _
                    ByVal NameTamirgah As String,  _
                    ByVal KhesaratSales As Global.System.Nullable(Of Integer),  _
                    ByVal KhesaratBadane As Global.System.Nullable(Of Integer),  _
                    ByVal IsProcess As Boolean,  _
                    ByVal PaymentStatus As Boolean,  _
                    ByVal Original_FactorID As Integer,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_MashinID As Integer,  _
                    ByVal Original_pDate As String,  _
                    ByVal Original_NameTamirgah As String,  _
                    ByVal Original_KhesaratSales As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KhesaratBadane As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsProcess As Boolean,  _
                    ByVal Original_PaymentStatus As Boolean) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FactorID,Integer)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(MashinID,Integer)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(pDate,String)
            End If
            If (NameTamirgah Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameTamirgah")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NameTamirgah,String)
            End If
            If (KhesaratSales.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(KhesaratSales.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (KhesaratBadane.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(KhesaratBadane.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IsProcess,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PaymentStatus,Boolean)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_FactorID,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_RanandePersonalCode,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_MashinID,Integer)
            If (Original_pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_pDate,String)
            End If
            If (Original_NameTamirgah Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NameTamirgah")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_NameTamirgah,String)
            End If
            If (Original_KhesaratSales.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_KhesaratSales.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_KhesaratBadane.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_KhesaratBadane.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_IsProcess,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_PaymentStatus,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RanandePersonalCode As String,  _
                    ByVal MashinID As Integer,  _
                    ByVal pDate As String,  _
                    ByVal NameTamirgah As String,  _
                    ByVal KhesaratSales As Global.System.Nullable(Of Integer),  _
                    ByVal KhesaratBadane As Global.System.Nullable(Of Integer),  _
                    ByVal IsProcess As Boolean,  _
                    ByVal PaymentStatus As Boolean,  _
                    ByVal Original_FactorID As Integer,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_MashinID As Integer,  _
                    ByVal Original_pDate As String,  _
                    ByVal Original_NameTamirgah As String,  _
                    ByVal Original_KhesaratSales As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KhesaratBadane As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsProcess As Boolean,  _
                    ByVal Original_PaymentStatus As Boolean) As Integer
            Return Me.Update(Original_FactorID, RanandePersonalCode, MashinID, pDate, NameTamirgah, KhesaratSales, KhesaratBadane, IsProcess, PaymentStatus, Original_FactorID, Original_RanandePersonalCode, Original_MashinID, Original_pDate, Original_NameTamirgah, Original_KhesaratSales, Original_KhesaratBadane, Original_IsProcess, Original_PaymentStatus)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function ChangePaymentStatus(ByVal PaymentStatus As Boolean, ByVal FactorID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(PaymentStatus,Boolean)
            command.Parameters(1).Value = CType(FactorID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal FactorID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(FactorID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateProcess(ByVal IsProcess As Boolean, ByVal FactorID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            command.Parameters(0).Value = CType(IsProcess,Boolean)
            command.Parameters(1).Value = CType(FactorID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal RanandePersonalCode As String, ByVal MashinID As Integer, ByVal pDate As String, ByVal NameTamirgah As String, ByVal KhesaratSales As Global.System.Nullable(Of Integer), ByVal KhesaratBadane As Global.System.Nullable(Of Integer), ByVal Original_FactorID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                command.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            command.Parameters(1).Value = CType(MashinID,Integer)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                command.Parameters(2).Value = CType(pDate,String)
            End If
            If (NameTamirgah Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NameTamirgah")
            Else
                command.Parameters(3).Value = CType(NameTamirgah,String)
            End If
            If (KhesaratSales.HasValue = true) Then
                command.Parameters(4).Value = CType(KhesaratSales.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (KhesaratBadane.HasValue = true) Then
                command.Parameters(5).Value = CType(KhesaratBadane.Value,Integer)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            command.Parameters(6).Value = CType(Original_FactorID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetFactorID() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetTotalBadane(ByVal MashinID As Global.System.Nullable(Of Integer), ByVal Year As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            If (MashinID.HasValue = true) Then
                command.Parameters(1).Value = CType(MashinID.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Year Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Year,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetTotalSales(ByVal MashinID As Global.System.Nullable(Of Integer), ByVal Year As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            If (MashinID.HasValue = true) Then
                command.Parameters(1).Value = CType(MashinID.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Year Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Year,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_TamiratJoziyatTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_TamiratJoziyat"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("FactorID", "FactorID")
            tableMapping.ColumnMappings.Add("SharhTamirat", "SharhTamirat")
            tableMapping.ColumnMappings.Add("Mablagh", "Mablagh")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_TamiratJoziyat] WHERE (([ID] = @Original_ID) AND ([FactorI"& _ 
                "D] = @Original_FactorID) AND ((@IsNull_SharhTamirat = 1 AND [SharhTamirat] IS NU"& _ 
                "LL) OR ([SharhTamirat] = @Original_SharhTamirat)) AND ((@IsNull_Mablagh = 1 AND "& _ 
                "[Mablagh] IS NULL) OR ([Mablagh] = @Original_Mablagh)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SharhTamirat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SharhTamirat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SharhTamirat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SharhTamirat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mablagh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mablagh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mablagh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mablagh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_TamiratJoziyat] ([FactorID], [SharhTamirat], [Mablagh]) VA"& _ 
                "LUES (@FactorID, @SharhTamirat, @Mablagh);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, FactorID, SharhTamirat, M"& _ 
                "ablagh FROM tbl_TamiratJoziyat WHERE (ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SharhTamirat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SharhTamirat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mablagh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mablagh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_TamiratJoziyat] SET [FactorID] = @FactorID, [SharhTamirat] = @S"& _ 
                "harhTamirat, [Mablagh] = @Mablagh WHERE (([ID] = @Original_ID) AND ([FactorID] ="& _ 
                " @Original_FactorID) AND ((@IsNull_SharhTamirat = 1 AND [SharhTamirat] IS NULL) "& _ 
                "OR ([SharhTamirat] = @Original_SharhTamirat)) AND ((@IsNull_Mablagh = 1 AND [Mab"& _ 
                "lagh] IS NULL) OR ([Mablagh] = @Original_Mablagh)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, FactorID, Sharh"& _ 
                "Tamirat, Mablagh FROM tbl_TamiratJoziyat WHERE (ID = @ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SharhTamirat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SharhTamirat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mablagh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mablagh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SharhTamirat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SharhTamirat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SharhTamirat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SharhTamirat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mablagh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mablagh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mablagh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mablagh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, FactorID, SharhTamirat, Mablagh FROM dbo.tbl_TamiratJoziyat"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_TamiratJoziyat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (FactorID = @Original_FactorID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     ID, FactorID, SharhTamirat, Mablagh"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_TamiratJoziyat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE     (FactorID = @FactorID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_TamiratJoziyatDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_TamiratJoziyatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_TamiratJoziyatDataTable = New dsTarabari.tbl_TamiratJoziyatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetFactorDetail(ByVal FactorID As Integer) As dsTarabari.tbl_TamiratJoziyatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FactorID,Integer)
            Dim dataTable As dsTarabari.tbl_TamiratJoziyatDataTable = New dsTarabari.tbl_TamiratJoziyatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_TamiratJoziyatDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_TamiratJoziyat")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_FactorID As Integer, ByVal Original_SharhTamirat As String, ByVal Original_Mablagh As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FactorID,Integer)
            If (Original_SharhTamirat Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_SharhTamirat,String)
            End If
            If (Original_Mablagh.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Mablagh.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FactorID As Integer, ByVal SharhTamirat As String, ByVal Mablagh As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FactorID,Integer)
            If (SharhTamirat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SharhTamirat,String)
            End If
            If (Mablagh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Mablagh.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FactorID As Integer, ByVal SharhTamirat As String, ByVal Mablagh As Global.System.Nullable(Of Integer), ByVal Original_ID As Integer, ByVal Original_FactorID As Integer, ByVal Original_SharhTamirat As String, ByVal Original_Mablagh As Global.System.Nullable(Of Integer), ByVal ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FactorID,Integer)
            If (SharhTamirat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SharhTamirat,String)
            End If
            If (Mablagh.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Mablagh.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_FactorID,Integer)
            If (Original_SharhTamirat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_SharhTamirat,String)
            End If
            If (Original_Mablagh.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Mablagh.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FactorID As Integer, ByVal SharhTamirat As String, ByVal Mablagh As Global.System.Nullable(Of Integer), ByVal Original_ID As Integer, ByVal Original_FactorID As Integer, ByVal Original_SharhTamirat As String, ByVal Original_Mablagh As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(FactorID, SharhTamirat, Mablagh, Original_ID, Original_FactorID, Original_SharhTamirat, Original_Mablagh, Original_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteDetail(ByVal Original_FactorID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Original_FactorID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SelectYearsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SelectYears"
            tableMapping.ColumnMappings.Add("Years", "Years")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.usp_SelectYears"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.SelectYearsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.SelectYearsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.SelectYearsDataTable = New dsTarabari.SelectYearsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class usp_GetFactorPriceByMonthsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "usp_GetFactorPriceByMonths"
            tableMapping.ColumnMappings.Add("Months", "Months")
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.usp_GetFactorPriceByMonths"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.usp_GetFactorPriceByMonthsDataTable, ByVal MashinID As Global.System.Nullable(Of Integer), ByVal Year As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (MashinID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(MashinID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Year Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Year,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal MashinID As Global.System.Nullable(Of Integer), ByVal Year As String) As dsTarabari.usp_GetFactorPriceByMonthsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (MashinID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(MashinID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Year Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Year,String)
            End If
            Dim dataTable As dsTarabari.usp_GetFactorPriceByMonthsDataTable = New dsTarabari.usp_GetFactorPriceByMonthsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_SettingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Setting"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("SahmRanande", "SahmRanande")
            tableMapping.ColumnMappings.Add("HazineGhaza_Raft", "HazineGhaza_Raft")
            tableMapping.ColumnMappings.Add("HazineGhaza_Bargasht", "HazineGhaza_Bargasht")
            tableMapping.ColumnMappings.Add("MablaghSookht", "MablaghSookht")
            tableMapping.ColumnMappings.Add("HaghPayane", "HaghPayane")
            tableMapping.ColumnMappings.Add("KomisionBarname", "KomisionBarname")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Setting] WHERE (([ID] = @Original_ID) AND ([SahmRanande] ="& _ 
                " @Original_SahmRanande) AND ([HazineGhaza_Raft] = @Original_HazineGhaza_Raft) AN"& _ 
                "D ([HazineGhaza_Bargasht] = @Original_HazineGhaza_Bargasht) AND ([MablaghSookht]"& _ 
                " = @Original_MablaghSookht) AND ([HaghPayane] = @Original_HaghPayane) AND ([Komi"& _ 
                "sionBarname] = @Original_KomisionBarname))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SahmRanande", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Raft", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HaghPayane", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KomisionBarname", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Setting] ([ID], [SahmRanande], [HazineGhaza_Raft], [Hazine"& _ 
                "Ghaza_Bargasht], [MablaghSookht], [HaghPayane], [KomisionBarname]) VALUES (@ID, "& _ 
                "@SahmRanande, @HazineGhaza_Raft, @HazineGhaza_Bargasht, @MablaghSookht, @HaghPay"& _ 
                "ane, @KomisionBarname);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, SahmRanande, HazineGhaza_Raft, HazineGhaza_B"& _ 
                "argasht, MablaghSookht, HaghPayane, KomisionBarname FROM tbl_Setting WHERE (ID ="& _ 
                " @ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SahmRanande", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Raft", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Bargasht", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaghPayane", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KomisionBarname", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Setting] SET [ID] = @ID, [SahmRanande] = @SahmRanande, [HazineG"& _ 
                "haza_Raft] = @HazineGhaza_Raft, [HazineGhaza_Bargasht] = @HazineGhaza_Bargasht, "& _ 
                "[MablaghSookht] = @MablaghSookht, [HaghPayane] = @HaghPayane, [KomisionBarname] "& _ 
                "= @KomisionBarname WHERE (([ID] = @Original_ID) AND ([SahmRanande] = @Original_S"& _ 
                "ahmRanande) AND ([HazineGhaza_Raft] = @Original_HazineGhaza_Raft) AND ([HazineGh"& _ 
                "aza_Bargasht] = @Original_HazineGhaza_Bargasht) AND ([MablaghSookht] = @Original"& _ 
                "_MablaghSookht) AND ([HaghPayane] = @Original_HaghPayane) AND ([KomisionBarname]"& _ 
                " = @Original_KomisionBarname));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, SahmRanande, HazineGhaza_Raft, Hazin"& _ 
                "eGhaza_Bargasht, MablaghSookht, HaghPayane, KomisionBarname FROM tbl_Setting WHE"& _ 
                "RE (ID = @ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SahmRanande", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Raft", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Bargasht", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaghPayane", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KomisionBarname", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SahmRanande", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Raft", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HaghPayane", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KomisionBarname", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, SahmRanande, HazineGhaza_Raft, HazineGhaza_Bargasht, MablaghSookht, Ha"& _ 
                "ghPayane, KomisionBarname FROM dbo.tbl_Setting"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "UPDATE    tbl_Setting"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              SahmRanande = @SahmRanande, HazineGhaza_R"& _ 
                "aft = @HazineGhaza_Raft, HazineGhaza_Bargasht = @HazineGhaza_Bargasht, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               MablaghSookht = @MablaghSookht, HaghPayane = @HaghPayane, Komisio"& _ 
                "nBarname = @KomisionBarname"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (ID = 1);"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SahmRanande", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Raft", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Bargasht", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghSookht", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaghPayane", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KomisionBarname", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_SettingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_SettingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_SettingDataTable = New dsTarabari.tbl_SettingDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_SettingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Setting")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_SahmRanande As Short, ByVal Original_HazineGhaza_Raft As Short, ByVal Original_HazineGhaza_Bargasht As Short, ByVal Original_MablaghSookht As Integer, ByVal Original_HaghPayane As Short, ByVal Original_KomisionBarname As Short) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SahmRanande,Short)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_HazineGhaza_Raft,Short)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_HazineGhaza_Bargasht,Short)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MablaghSookht,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_HaghPayane,Short)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_KomisionBarname,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID As Integer, ByVal SahmRanande As Short, ByVal HazineGhaza_Raft As Short, ByVal HazineGhaza_Bargasht As Short, ByVal MablaghSookht As Integer, ByVal HaghPayane As Short, ByVal KomisionBarname As Short) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(SahmRanande,Short)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(HazineGhaza_Raft,Short)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(HazineGhaza_Bargasht,Short)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(MablaghSookht,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(HaghPayane,Short)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(KomisionBarname,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID As Integer, ByVal SahmRanande As Short, ByVal HazineGhaza_Raft As Short, ByVal HazineGhaza_Bargasht As Short, ByVal MablaghSookht As Integer, ByVal HaghPayane As Short, ByVal KomisionBarname As Short, ByVal Original_ID As Integer, ByVal Original_SahmRanande As Short, ByVal Original_HazineGhaza_Raft As Short, ByVal Original_HazineGhaza_Bargasht As Short, ByVal Original_MablaghSookht As Integer, ByVal Original_HaghPayane As Short, ByVal Original_KomisionBarname As Short) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SahmRanande,Short)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HazineGhaza_Raft,Short)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(HazineGhaza_Bargasht,Short)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MablaghSookht,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(HaghPayane,Short)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(KomisionBarname,Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SahmRanande,Short)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_HazineGhaza_Raft,Short)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_HazineGhaza_Bargasht,Short)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_MablaghSookht,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_HaghPayane,Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_KomisionBarname,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SahmRanande As Short, ByVal HazineGhaza_Raft As Short, ByVal HazineGhaza_Bargasht As Short, ByVal MablaghSookht As Integer, ByVal HaghPayane As Short, ByVal KomisionBarname As Short, ByVal Original_ID As Integer, ByVal Original_SahmRanande As Short, ByVal Original_HazineGhaza_Raft As Short, ByVal Original_HazineGhaza_Bargasht As Short, ByVal Original_MablaghSookht As Integer, ByVal Original_HaghPayane As Short, ByVal Original_KomisionBarname As Short) As Integer
            Return Me.Update(Original_ID, SahmRanande, HazineGhaza_Raft, HazineGhaza_Bargasht, MablaghSookht, HaghPayane, KomisionBarname, Original_ID, Original_SahmRanande, Original_HazineGhaza_Raft, Original_HazineGhaza_Bargasht, Original_MablaghSookht, Original_HaghPayane, Original_KomisionBarname)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal SahmRanande As Short, ByVal HazineGhaza_Raft As Short, ByVal HazineGhaza_Bargasht As Short, ByVal MablaghSookht As Integer, ByVal HaghPayane As Short, ByVal KomisionBarname As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(SahmRanande,Short)
            command.Parameters(1).Value = CType(HazineGhaza_Raft,Short)
            command.Parameters(2).Value = CType(HazineGhaza_Bargasht,Short)
            command.Parameters(3).Value = CType(MablaghSookht,Integer)
            command.Parameters(4).Value = CType(HaghPayane,Short)
            command.Parameters(5).Value = CType(KomisionBarname,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MashinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Mashin"
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("KafiID", "KafiID")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("ShasiNumber", "ShasiNumber")
            tableMapping.ColumnMappings.Add("MotorNumber", "MotorNumber")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Mashin] WHERE (([MashinID] = @Original_MashinID) AND ([Kaf"& _ 
                "iID] = @Original_KafiID) AND ([Pelak] = @Original_Pelak) AND ([ShasiNumber] = @O"& _ 
                "riginal_ShasiNumber) AND ([MotorNumber] = @Original_MotorNumber))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pelak", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MotorNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotorNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Mashin] ([MashinID], [KafiID], [Pelak], [ShasiNumber], [Mo"& _ 
                "torNumber]) VALUES (@MashinID, @KafiID, @Pelak, @ShasiNumber, @MotorNumber);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT MashinID, KafiID, Pelak, ShasiNumber, MotorNumber FROM tbl_Mashin WHERE (Ma"& _ 
                "shinID = @MashinID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelak", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MotorNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotorNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Mashin] SET [MashinID] = @MashinID, [KafiID] = @KafiID, [Pelak]"& _ 
                " = @Pelak, [ShasiNumber] = @ShasiNumber, [MotorNumber] = @MotorNumber WHERE (([M"& _ 
                "ashinID] = @Original_MashinID) AND ([KafiID] = @Original_KafiID) AND ([Pelak] = "& _ 
                "@Original_Pelak) AND ([ShasiNumber] = @Original_ShasiNumber) AND ([MotorNumber] "& _ 
                "= @Original_MotorNumber));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT MashinID, KafiID, Pelak, ShasiNumber, MotorNu"& _ 
                "mber FROM tbl_Mashin WHERE (MashinID = @MashinID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelak", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MotorNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotorNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MashinID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pelak", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MotorNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotorNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MashinID, KafiID, Pelak, ShasiNumber, MotorNumber FROM dbo.tbl_Mashin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_Mashin"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MashinID = @MashinID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE    tbl_Mashin"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              KafiID = @KafiID, Pelak = @Pelak, ShasiNum"& _ 
                "ber = @ShasiNumber, MotorNumber = @MotorNumber"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MashinID = @MashinID)"& _ 
                ""
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelak", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShasiNumber", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MotorNumber", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "MotorNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "dbo.usp_GetMashinID"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_MashinDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_MashinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_MashinDataTable = New dsTarabari.tbl_MashinDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_MashinDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Mashin")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_MashinID As Integer, ByVal Original_KafiID As Integer, ByVal Original_Pelak As String, ByVal Original_ShasiNumber As String, ByVal Original_MotorNumber As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MashinID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_KafiID,Integer)
            If (Original_Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Pelak")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Pelak,String)
            End If
            If (Original_ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ShasiNumber")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ShasiNumber,String)
            End If
            If (Original_MotorNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MotorNumber")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MotorNumber,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal MashinID As Integer, ByVal KafiID As Integer, ByVal Pelak As String, ByVal ShasiNumber As String, ByVal MotorNumber As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(MashinID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(KafiID,Integer)
            If (Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Pelak")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Pelak,String)
            End If
            If (ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShasiNumber")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ShasiNumber,String)
            End If
            If (MotorNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MotorNumber")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MotorNumber,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal MashinID As Integer, ByVal KafiID As Integer, ByVal Pelak As String, ByVal ShasiNumber As String, ByVal MotorNumber As String, ByVal Original_MashinID As Integer, ByVal Original_KafiID As Integer, ByVal Original_Pelak As String, ByVal Original_ShasiNumber As String, ByVal Original_MotorNumber As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(MashinID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(KafiID,Integer)
            If (Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Pelak")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Pelak,String)
            End If
            If (ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShasiNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ShasiNumber,String)
            End If
            If (MotorNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MotorNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MotorNumber,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_MashinID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_KafiID,Integer)
            If (Original_Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Pelak")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Pelak,String)
            End If
            If (Original_ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ShasiNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ShasiNumber,String)
            End If
            If (Original_MotorNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MotorNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_MotorNumber,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal KafiID As Integer, ByVal Pelak As String, ByVal ShasiNumber As String, ByVal MotorNumber As String, ByVal Original_MashinID As Integer, ByVal Original_KafiID As Integer, ByVal Original_Pelak As String, ByVal Original_ShasiNumber As String, ByVal Original_MotorNumber As String) As Integer
            Return Me.Update(Original_MashinID, KafiID, Pelak, ShasiNumber, MotorNumber, Original_MashinID, Original_KafiID, Original_Pelak, Original_ShasiNumber, Original_MotorNumber)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal MashinID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(MashinID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal KafiID As Integer, ByVal Pelak As String, ByVal ShasiNumber As String, ByVal MotorNumber As String, ByVal MashinID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(KafiID,Integer)
            If (Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Pelak")
            Else
                command.Parameters(1).Value = CType(Pelak,String)
            End If
            If (ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShasiNumber")
            Else
                command.Parameters(2).Value = CType(ShasiNumber,String)
            End If
            If (MotorNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MotorNumber")
            Else
                command.Parameters(3).Value = CType(MotorNumber,String)
            End If
            command.Parameters(4).Value = CType(MashinID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetMashinID() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_KafiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Kafi"
            tableMapping.ColumnMappings.Add("KafiID", "KafiID")
            tableMapping.ColumnMappings.Add("ShasiNumber", "ShasiNumber")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Kafi] WHERE (([KafiID] = @Original_KafiID) AND ([ShasiNumb"& _ 
                "er] = @Original_ShasiNumber) AND ([Pelak] = @Original_Pelak))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pelak", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Kafi] ([KafiID], [ShasiNumber], [Pelak]) VALUES (@KafiID, "& _ 
                "@ShasiNumber, @Pelak);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KafiID, ShasiNumber, Pelak FROM tbl_Kafi WHERE (K"& _ 
                "afiID = @KafiID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelak", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Kafi] SET [KafiID] = @KafiID, [ShasiNumber] = @ShasiNumber, [Pe"& _ 
                "lak] = @Pelak WHERE (([KafiID] = @Original_KafiID) AND ([ShasiNumber] = @Origina"& _ 
                "l_ShasiNumber) AND ([Pelak] = @Original_Pelak));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KafiID, ShasiNumber, Pe"& _ 
                "lak FROM tbl_Kafi WHERE (KafiID = @KafiID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelak", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KafiID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShasiNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pelak", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT KafiID, ShasiNumber, Pelak FROM dbo.tbl_Kafi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_Kafi"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (KafiID = @KafiID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE    tbl_Kafi"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              ShasiNumber = @ShasiNumber, Pelak = @Pelak"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE     (KafiID = @KafiID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShasiNumber", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "ShasiNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelak", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KafiID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KafiID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "dbo.usp_GetKafiID"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_KafiDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_KafiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_KafiDataTable = New dsTarabari.tbl_KafiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_KafiDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Kafi")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_KafiID As Integer, ByVal Original_ShasiNumber As String, ByVal Original_Pelak As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_KafiID,Integer)
            If (Original_ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ShasiNumber")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ShasiNumber,String)
            End If
            If (Original_Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Pelak")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Pelak,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal KafiID As Integer, ByVal ShasiNumber As String, ByVal Pelak As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(KafiID,Integer)
            If (ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShasiNumber")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ShasiNumber,String)
            End If
            If (Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Pelak")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Pelak,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal KafiID As Integer, ByVal ShasiNumber As String, ByVal Pelak As String, ByVal Original_KafiID As Integer, ByVal Original_ShasiNumber As String, ByVal Original_Pelak As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(KafiID,Integer)
            If (ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShasiNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ShasiNumber,String)
            End If
            If (Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Pelak")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Pelak,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_KafiID,Integer)
            If (Original_ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ShasiNumber")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ShasiNumber,String)
            End If
            If (Original_Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Pelak")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Pelak,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ShasiNumber As String, ByVal Pelak As String, ByVal Original_KafiID As Integer, ByVal Original_ShasiNumber As String, ByVal Original_Pelak As String) As Integer
            Return Me.Update(Original_KafiID, ShasiNumber, Pelak, Original_KafiID, Original_ShasiNumber, Original_Pelak)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal KafiID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(KafiID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal ShasiNumber As String, ByVal Pelak As String, ByVal KafiID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (ShasiNumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShasiNumber")
            Else
                command.Parameters(0).Value = CType(ShasiNumber,String)
            End If
            If (Pelak Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Pelak")
            Else
                command.Parameters(1).Value = CType(Pelak,String)
            End If
            command.Parameters(2).Value = CType(KafiID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetKafiID() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_RanandeganTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Ranandegan"
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("fname", "fname")
            tableMapping.ColumnMappings.Add("lname", "lname")
            tableMapping.ColumnMappings.Add("CodeMelli", "CodeMelli")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("TelNumbers", "TelNumbers")
            tableMapping.ColumnMappings.Add("Picture", "Picture")
            tableMapping.ColumnMappings.Add("KartHooshmandNo", "KartHooshmandNo")
            tableMapping.ColumnMappings.Add("KH_StartDate", "KH_StartDate")
            tableMapping.ColumnMappings.Add("KH_EndDate", "KH_EndDate")
            tableMapping.ColumnMappings.Add("KartSalamatNo", "KartSalamatNo")
            tableMapping.ColumnMappings.Add("KS_StartDate", "KS_StartDate")
            tableMapping.ColumnMappings.Add("KS_EndDate", "KS_EndDate")
            tableMapping.ColumnMappings.Add("KartGovahinameNo", "KartGovahinameNo")
            tableMapping.ColumnMappings.Add("KG_StartDate", "KG_StartDate")
            tableMapping.ColumnMappings.Add("KG_EndDate", "KG_EndDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Ranandegan] WHERE (([RanandePersonalCode] = @Original_Rana"& _ 
                "ndePersonalCode) AND ([fname] = @Original_fname) AND ([lname] = @Original_lname)"& _ 
                " AND ((@IsNull_CodeMelli = 1 AND [CodeMelli] IS NULL) OR ([CodeMelli] = @Origina"& _ 
                "l_CodeMelli)) AND ([Address] = @Original_Address) AND ([TelNumbers] = @Original_"& _ 
                "TelNumbers) AND ((@IsNull_KartHooshmandNo = 1 AND [KartHooshmandNo] IS NULL) OR "& _ 
                "([KartHooshmandNo] = @Original_KartHooshmandNo)) AND ((@IsNull_KH_StartDate = 1 "& _ 
                "AND [KH_StartDate] IS NULL) OR ([KH_StartDate] = @Original_KH_StartDate)) AND (("& _ 
                "@IsNull_KH_EndDate = 1 AND [KH_EndDate] IS NULL) OR ([KH_EndDate] = @Original_KH"& _ 
                "_EndDate)) AND ((@IsNull_KartSalamatNo = 1 AND [KartSalamatNo] IS NULL) OR ([Kar"& _ 
                "tSalamatNo] = @Original_KartSalamatNo)) AND ((@IsNull_KS_StartDate = 1 AND [KS_S"& _ 
                "tartDate] IS NULL) OR ([KS_StartDate] = @Original_KS_StartDate)) AND ((@IsNull_K"& _ 
                "S_EndDate = 1 AND [KS_EndDate] IS NULL) OR ([KS_EndDate] = @Original_KS_EndDate)"& _ 
                ") AND ((@IsNull_KartGovahinameNo = 1 AND [KartGovahinameNo] IS NULL) OR ([KartGo"& _ 
                "vahinameNo] = @Original_KartGovahinameNo)) AND ((@IsNull_KG_StartDate = 1 AND [K"& _ 
                "G_StartDate] IS NULL) OR ([KG_StartDate] = @Original_KG_StartDate)) AND ((@IsNul"& _ 
                "l_KG_EndDate = 1 AND [KG_EndDate] IS NULL) OR ([KG_EndDate] = @Original_KG_EndDa"& _ 
                "te)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_lname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "lname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CodeMelli", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodeMelli", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TelNumbers", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNumbers", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KartHooshmandNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KartHooshmandNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KH_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KH_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KH_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KH_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KartSalamatNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KartSalamatNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KS_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KS_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KS_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KS_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KartGovahinameNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KartGovahinameNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Ranandegan] ([RanandePersonalCode], [fname], [lname], [Cod"& _ 
                "eMelli], [Address], [TelNumbers], [Picture], [KartHooshmandNo], [KH_StartDate], "& _ 
                "[KH_EndDate], [KartSalamatNo], [KS_StartDate], [KS_EndDate], [KartGovahinameNo],"& _ 
                " [KG_StartDate], [KG_EndDate]) VALUES (@RanandePersonalCode, @fname, @lname, @Co"& _ 
                "deMelli, @Address, @TelNumbers, @Picture, @KartHooshmandNo, @KH_StartDate, @KH_E"& _ 
                "ndDate, @KartSalamatNo, @KS_StartDate, @KS_EndDate, @KartGovahinameNo, @KG_Start"& _ 
                "Date, @KG_EndDate);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT RanandePersonalCode, fname, lname, CodeMelli, Addres"& _ 
                "s, TelNumbers, Picture, KartHooshmandNo, KH_StartDate, KH_EndDate, KartSalamatNo"& _ 
                ", KS_StartDate, KS_EndDate, KartGovahinameNo, KG_StartDate, KG_EndDate FROM tbl_"& _ 
                "Ranandegan WHERE (RanandePersonalCode = @RanandePersonalCode)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "lname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodeMelli", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TelNumbers", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNumbers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Picture", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartHooshmandNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartSalamatNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartGovahinameNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Ranandegan] SET [RanandePersonalCode] = @RanandePersonalCode, ["& _ 
                "fname] = @fname, [lname] = @lname, [CodeMelli] = @CodeMelli, [Address] = @Addres"& _ 
                "s, [TelNumbers] = @TelNumbers, [Picture] = @Picture, [KartHooshmandNo] = @KartHo"& _ 
                "oshmandNo, [KH_StartDate] = @KH_StartDate, [KH_EndDate] = @KH_EndDate, [KartSala"& _ 
                "matNo] = @KartSalamatNo, [KS_StartDate] = @KS_StartDate, [KS_EndDate] = @KS_EndD"& _ 
                "ate, [KartGovahinameNo] = @KartGovahinameNo, [KG_StartDate] = @KG_StartDate, [KG"& _ 
                "_EndDate] = @KG_EndDate WHERE (([RanandePersonalCode] = @Original_RanandePersona"& _ 
                "lCode) AND ([fname] = @Original_fname) AND ([lname] = @Original_lname) AND ((@Is"& _ 
                "Null_CodeMelli = 1 AND [CodeMelli] IS NULL) OR ([CodeMelli] = @Original_CodeMell"& _ 
                "i)) AND ([Address] = @Original_Address) AND ([TelNumbers] = @Original_TelNumbers"& _ 
                ") AND ((@IsNull_KartHooshmandNo = 1 AND [KartHooshmandNo] IS NULL) OR ([KartHoos"& _ 
                "hmandNo] = @Original_KartHooshmandNo)) AND ((@IsNull_KH_StartDate = 1 AND [KH_St"& _ 
                "artDate] IS NULL) OR ([KH_StartDate] = @Original_KH_StartDate)) AND ((@IsNull_KH"& _ 
                "_EndDate = 1 AND [KH_EndDate] IS NULL) OR ([KH_EndDate] = @Original_KH_EndDate))"& _ 
                " AND ((@IsNull_KartSalamatNo = 1 AND [KartSalamatNo] IS NULL) OR ([KartSalamatNo"& _ 
                "] = @Original_KartSalamatNo)) AND ((@IsNull_KS_StartDate = 1 AND [KS_StartDate] "& _ 
                "IS NULL) OR ([KS_StartDate] = @Original_KS_StartDate)) AND ((@IsNull_KS_EndDate "& _ 
                "= 1 AND [KS_EndDate] IS NULL) OR ([KS_EndDate] = @Original_KS_EndDate)) AND ((@I"& _ 
                "sNull_KartGovahinameNo = 1 AND [KartGovahinameNo] IS NULL) OR ([KartGovahinameNo"& _ 
                "] = @Original_KartGovahinameNo)) AND ((@IsNull_KG_StartDate = 1 AND [KG_StartDat"& _ 
                "e] IS NULL) OR ([KG_StartDate] = @Original_KG_StartDate)) AND ((@IsNull_KG_EndDa"& _ 
                "te = 1 AND [KG_EndDate] IS NULL) OR ([KG_EndDate] = @Original_KG_EndDate)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT RanandePersonalCode, fname, lname, CodeMelli, Address, TelNumbers, Picture,"& _ 
                " KartHooshmandNo, KH_StartDate, KH_EndDate, KartSalamatNo, KS_StartDate, KS_EndD"& _ 
                "ate, KartGovahinameNo, KG_StartDate, KG_EndDate FROM tbl_Ranandegan WHERE (Ranan"& _ 
                "dePersonalCode = @RanandePersonalCode)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "lname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodeMelli", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TelNumbers", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNumbers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Picture", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartHooshmandNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartSalamatNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartGovahinameNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_lname", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "lname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CodeMelli", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodeMelli", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TelNumbers", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNumbers", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KartHooshmandNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KartHooshmandNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KH_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KH_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KH_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KH_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KartSalamatNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KartSalamatNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KS_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KS_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KS_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KS_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KartGovahinameNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KartGovahinameNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG_StartDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KG_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KG_EndDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RanandePersonalCode, fname, lname, CodeMelli, Address, TelNumbers, Picture"& _ 
                ", KartHooshmandNo, KH_StartDate, KH_EndDate, KartSalamatNo, KS_StartDate, KS_End"& _ 
                "Date, KartGovahinameNo, KG_StartDate, KG_EndDate FROM dbo.tbl_Ranandegan"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_Ranandegan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (RanandePersonalCode = @RanandePersonalCode"& _ 
                ")"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     fname + ' ' + lname AS FullName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Ranandegan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE   "& _ 
                "  (RanandePersonalCode = @RanandePersonalCode)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE    tbl_Ranandegan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              fname = @fname, lname = @lname, CodeMe"& _ 
                "lli = @CodeMelli, Address = @Address, TelNumbers = @TelNumbers, Picture = @Pictu"& _ 
                "re, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      KartHooshmandNo = @KartHooshmandNo, KH_StartDate = @"& _ 
                "KH_StartDate, KH_EndDate = @KH_EndDate, KartSalamatNo = @KartSalamatNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                KS_StartDate = @KS_StartDate, KS_EndDate = @KS_EndDate, KartGova"& _ 
                "hinameNo = @KartGovahinameNo, KG_StartDate = @KG_StartDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    KG_EndDate = @KG_EndDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (RanandePersonalCode = @RanandePersonalC"& _ 
                "ode);"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fname", Global.System.Data.SqlDbType.NVarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "fname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lname", Global.System.Data.SqlDbType.NVarChar, 35, Global.System.Data.ParameterDirection.Input, 0, 0, "lname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodeMelli", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CodeMelli", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address", Global.System.Data.SqlDbType.NVarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TelNumbers", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNumbers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Picture", Global.System.Data.SqlDbType.VarBinary, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartHooshmandNo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KartHooshmandNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH_StartDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH_EndDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KH_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartSalamatNo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KartSalamatNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS_StartDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS_EndDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KS_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KartGovahinameNo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KartGovahinameNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG_StartDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG_EndDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "KG_EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_RanandeganDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_RanandeganDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_RanandeganDataTable = New dsTarabari.tbl_RanandeganDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_RanandeganDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Ranandegan")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_RanandePersonalCode As String, ByVal Original_fname As String, ByVal Original_lname As String, ByVal Original_CodeMelli As String, ByVal Original_Address As String, ByVal Original_TelNumbers As String, ByVal Original_KartHooshmandNo As String, ByVal Original_KH_StartDate As String, ByVal Original_KH_EndDate As String, ByVal Original_KartSalamatNo As String, ByVal Original_KS_StartDate As String, ByVal Original_KS_EndDate As String, ByVal Original_KartGovahinameNo As String, ByVal Original_KG_StartDate As String, ByVal Original_KG_EndDate As String) As Integer
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RanandePersonalCode,String)
            End If
            If (Original_fname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fname")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_fname,String)
            End If
            If (Original_lname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_lname")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_lname,String)
            End If
            If (Original_CodeMelli Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CodeMelli,String)
            End If
            If (Original_Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Address")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Address,String)
            End If
            If (Original_TelNumbers Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TelNumbers")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TelNumbers,String)
            End If
            If (Original_KartHooshmandNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_KartHooshmandNo,String)
            End If
            If (Original_KH_StartDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_KH_StartDate,String)
            End If
            If (Original_KH_EndDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_KH_EndDate,String)
            End If
            If (Original_KartSalamatNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_KartSalamatNo,String)
            End If
            If (Original_KS_StartDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_KS_StartDate,String)
            End If
            If (Original_KS_EndDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_KS_EndDate,String)
            End If
            If (Original_KartGovahinameNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_KartGovahinameNo,String)
            End If
            If (Original_KG_StartDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_KG_StartDate,String)
            End If
            If (Original_KG_EndDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_KG_EndDate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RanandePersonalCode As String,  _
                    ByVal fname As String,  _
                    ByVal lname As String,  _
                    ByVal CodeMelli As String,  _
                    ByVal Address As String,  _
                    ByVal TelNumbers As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal KartHooshmandNo As String,  _
                    ByVal KH_StartDate As String,  _
                    ByVal KH_EndDate As String,  _
                    ByVal KartSalamatNo As String,  _
                    ByVal KS_StartDate As String,  _
                    ByVal KS_EndDate As String,  _
                    ByVal KartGovahinameNo As String,  _
                    ByVal KG_StartDate As String,  _
                    ByVal KG_EndDate As String) As Integer
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            If (fname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fname")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(fname,String)
            End If
            If (lname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lname")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(lname,String)
            End If
            If (CodeMelli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CodeMelli,String)
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Address,String)
            End If
            If (TelNumbers Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TelNumbers")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TelNumbers,String)
            End If
            If (Picture Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Picture,Byte())
            End If
            If (KartHooshmandNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(KartHooshmandNo,String)
            End If
            If (KH_StartDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(KH_StartDate,String)
            End If
            If (KH_EndDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(KH_EndDate,String)
            End If
            If (KartSalamatNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(KartSalamatNo,String)
            End If
            If (KS_StartDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(KS_StartDate,String)
            End If
            If (KS_EndDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(KS_EndDate,String)
            End If
            If (KartGovahinameNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(KartGovahinameNo,String)
            End If
            If (KG_StartDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(KG_StartDate,String)
            End If
            If (KG_EndDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(KG_EndDate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RanandePersonalCode As String,  _
                    ByVal fname As String,  _
                    ByVal lname As String,  _
                    ByVal CodeMelli As String,  _
                    ByVal Address As String,  _
                    ByVal TelNumbers As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal KartHooshmandNo As String,  _
                    ByVal KH_StartDate As String,  _
                    ByVal KH_EndDate As String,  _
                    ByVal KartSalamatNo As String,  _
                    ByVal KS_StartDate As String,  _
                    ByVal KS_EndDate As String,  _
                    ByVal KartGovahinameNo As String,  _
                    ByVal KG_StartDate As String,  _
                    ByVal KG_EndDate As String,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_fname As String,  _
                    ByVal Original_lname As String,  _
                    ByVal Original_CodeMelli As String,  _
                    ByVal Original_Address As String,  _
                    ByVal Original_TelNumbers As String,  _
                    ByVal Original_KartHooshmandNo As String,  _
                    ByVal Original_KH_StartDate As String,  _
                    ByVal Original_KH_EndDate As String,  _
                    ByVal Original_KartSalamatNo As String,  _
                    ByVal Original_KS_StartDate As String,  _
                    ByVal Original_KS_EndDate As String,  _
                    ByVal Original_KartGovahinameNo As String,  _
                    ByVal Original_KG_StartDate As String,  _
                    ByVal Original_KG_EndDate As String) As Integer
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            If (fname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fname")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(fname,String)
            End If
            If (lname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lname")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(lname,String)
            End If
            If (CodeMelli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CodeMelli,String)
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Address,String)
            End If
            If (TelNumbers Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TelNumbers")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TelNumbers,String)
            End If
            If (Picture Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Picture,Byte())
            End If
            If (KartHooshmandNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(KartHooshmandNo,String)
            End If
            If (KH_StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(KH_StartDate,String)
            End If
            If (KH_EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(KH_EndDate,String)
            End If
            If (KartSalamatNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(KartSalamatNo,String)
            End If
            If (KS_StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(KS_StartDate,String)
            End If
            If (KS_EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(KS_EndDate,String)
            End If
            If (KartGovahinameNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(KartGovahinameNo,String)
            End If
            If (KG_StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(KG_StartDate,String)
            End If
            If (KG_EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(KG_EndDate,String)
            End If
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_RanandePersonalCode,String)
            End If
            If (Original_fname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fname")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_fname,String)
            End If
            If (Original_lname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_lname")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_lname,String)
            End If
            If (Original_CodeMelli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_CodeMelli,String)
            End If
            If (Original_Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Address")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Address,String)
            End If
            If (Original_TelNumbers Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TelNumbers")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_TelNumbers,String)
            End If
            If (Original_KartHooshmandNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_KartHooshmandNo,String)
            End If
            If (Original_KH_StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_KH_StartDate,String)
            End If
            If (Original_KH_EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_KH_EndDate,String)
            End If
            If (Original_KartSalamatNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_KartSalamatNo,String)
            End If
            If (Original_KS_StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_KS_StartDate,String)
            End If
            If (Original_KS_EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_KS_EndDate,String)
            End If
            If (Original_KartGovahinameNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_KartGovahinameNo,String)
            End If
            If (Original_KG_StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_KG_StartDate,String)
            End If
            If (Original_KG_EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_KG_EndDate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal fname As String,  _
                    ByVal lname As String,  _
                    ByVal CodeMelli As String,  _
                    ByVal Address As String,  _
                    ByVal TelNumbers As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal KartHooshmandNo As String,  _
                    ByVal KH_StartDate As String,  _
                    ByVal KH_EndDate As String,  _
                    ByVal KartSalamatNo As String,  _
                    ByVal KS_StartDate As String,  _
                    ByVal KS_EndDate As String,  _
                    ByVal KartGovahinameNo As String,  _
                    ByVal KG_StartDate As String,  _
                    ByVal KG_EndDate As String,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_fname As String,  _
                    ByVal Original_lname As String,  _
                    ByVal Original_CodeMelli As String,  _
                    ByVal Original_Address As String,  _
                    ByVal Original_TelNumbers As String,  _
                    ByVal Original_KartHooshmandNo As String,  _
                    ByVal Original_KH_StartDate As String,  _
                    ByVal Original_KH_EndDate As String,  _
                    ByVal Original_KartSalamatNo As String,  _
                    ByVal Original_KS_StartDate As String,  _
                    ByVal Original_KS_EndDate As String,  _
                    ByVal Original_KartGovahinameNo As String,  _
                    ByVal Original_KG_StartDate As String,  _
                    ByVal Original_KG_EndDate As String) As Integer
            Return Me.Update(Original_RanandePersonalCode, fname, lname, CodeMelli, Address, TelNumbers, Picture, KartHooshmandNo, KH_StartDate, KH_EndDate, KartSalamatNo, KS_StartDate, KS_EndDate, KartGovahinameNo, KG_StartDate, KG_EndDate, Original_RanandePersonalCode, Original_fname, Original_lname, Original_CodeMelli, Original_Address, Original_TelNumbers, Original_KartHooshmandNo, Original_KH_StartDate, Original_KH_EndDate, Original_KartSalamatNo, Original_KS_StartDate, Original_KS_EndDate, Original_KartGovahinameNo, Original_KG_StartDate, Original_KG_EndDate)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal RanandePersonalCode As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                command.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetFullNameByPersonalCode(ByVal RanandePersonalCode As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                command.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery( _
                    ByVal fname As String,  _
                    ByVal lname As String,  _
                    ByVal CodeMelli As String,  _
                    ByVal Address As String,  _
                    ByVal TelNumbers As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal KartHooshmandNo As String,  _
                    ByVal KH_StartDate As String,  _
                    ByVal KH_EndDate As String,  _
                    ByVal KartSalamatNo As String,  _
                    ByVal KS_StartDate As String,  _
                    ByVal KS_EndDate As String,  _
                    ByVal KartGovahinameNo As String,  _
                    ByVal KG_StartDate As String,  _
                    ByVal KG_EndDate As String,  _
                    ByVal RanandePersonalCode As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (fname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fname")
            Else
                command.Parameters(0).Value = CType(fname,String)
            End If
            If (lname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lname")
            Else
                command.Parameters(1).Value = CType(lname,String)
            End If
            If (CodeMelli Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CodeMelli,String)
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                command.Parameters(3).Value = CType(Address,String)
            End If
            If (TelNumbers Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TelNumbers")
            Else
                command.Parameters(4).Value = CType(TelNumbers,String)
            End If
            If (Picture Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Picture,Byte())
            End If
            If (KartHooshmandNo Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(KartHooshmandNo,String)
            End If
            If (KH_StartDate Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(KH_StartDate,String)
            End If
            If (KH_EndDate Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(KH_EndDate,String)
            End If
            If (KartSalamatNo Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(KartSalamatNo,String)
            End If
            If (KS_StartDate Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(KS_StartDate,String)
            End If
            If (KS_EndDate Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(KS_EndDate,String)
            End If
            If (KartGovahinameNo Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(KartGovahinameNo,String)
            End If
            If (KG_StartDate Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(KG_StartDate,String)
            End If
            If (KG_EndDate Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(KG_EndDate,String)
            End If
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                command.Parameters(15).Value = CType(RanandePersonalCode,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vSelectRanandeganMashinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vSelectRanandeganMashin"
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("TelNumbers", "TelNumbers")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RanandePersonalCode, Fullname, Address, TelNumbers, MashinID FROM dbo.vSel"& _ 
                "ectRanandeganMashin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.vSelectRanandeganMashinDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.vSelectRanandeganMashinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.vSelectRanandeganMashinDataTable = New dsTarabari.vSelectRanandeganMashinDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_NavganStatusTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_NavganStatus"
            tableMapping.ColumnMappings.Add("idxRow", "idxRow")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("VaziyatSafar", "VaziyatSafar")
            tableMapping.ColumnMappings.Add("VaziyatBazgasht", "VaziyatBazgasht")
            tableMapping.ColumnMappings.Add("VaziyatTamirgah", "VaziyatTamirgah")
            tableMapping.ColumnMappings.Add("VaziyatRanandeh", "VaziyatRanandeh")
            tableMapping.ColumnMappings.Add("Description", "Description")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_NavganStatus] WHERE (([idxRow] = @Original_idxRow) AND ([R"& _ 
                "anandePersonalCode] = @Original_RanandePersonalCode) AND ([pDate] = @Original_pD"& _ 
                "ate) AND ((@IsNull_VaziyatSafar = 1 AND [VaziyatSafar] IS NULL) OR ([VaziyatSafa"& _ 
                "r] = @Original_VaziyatSafar)) AND ((@IsNull_VaziyatBazgasht = 1 AND [VaziyatBazg"& _ 
                "asht] IS NULL) OR ([VaziyatBazgasht] = @Original_VaziyatBazgasht)) AND ((@IsNull"& _ 
                "_VaziyatTamirgah = 1 AND [VaziyatTamirgah] IS NULL) OR ([VaziyatTamirgah] = @Ori"& _ 
                "ginal_VaziyatTamirgah)) AND ((@IsNull_VaziyatRanandeh = 1 AND [VaziyatRanandeh] "& _ 
                "IS NULL) OR ([VaziyatRanandeh] = @Original_VaziyatRanandeh)) AND ((@IsNull_Descr"& _ 
                "iption = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_idxRow", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "idxRow", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatSafar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatSafar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatSafar", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatSafar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatBazgasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatBazgasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatBazgasht", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatBazgasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatTamirgah", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatTamirgah", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatTamirgah", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatTamirgah", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatRanandeh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatRanandeh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatRanandeh", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatRanandeh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_NavganStatus] ([RanandePersonalCode], [pDate], [VaziyatSaf"& _ 
                "ar], [VaziyatBazgasht], [VaziyatTamirgah], [VaziyatRanandeh], [Description]) VAL"& _ 
                "UES (@RanandePersonalCode, @pDate, @VaziyatSafar, @VaziyatBazgasht, @VaziyatTami"& _ 
                "rgah, @VaziyatRanandeh, @Description);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT idxRow, RanandePersonalCode, pDat"& _ 
                "e, VaziyatSafar, VaziyatBazgasht, VaziyatTamirgah, VaziyatRanandeh, Description "& _ 
                "FROM tbl_NavganStatus WHERE (RanandePersonalCode = @RanandePersonalCode) AND (id"& _ 
                "xRow = SCOPE_IDENTITY()) AND (pDate = @pDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatSafar", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatSafar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatBazgasht", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatBazgasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatTamirgah", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatTamirgah", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatRanandeh", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatRanandeh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_NavganStatus] SET [RanandePersonalCode] = @RanandePersonalCode,"& _ 
                " [pDate] = @pDate, [VaziyatSafar] = @VaziyatSafar, [VaziyatBazgasht] = @VaziyatB"& _ 
                "azgasht, [VaziyatTamirgah] = @VaziyatTamirgah, [VaziyatRanandeh] = @VaziyatRanan"& _ 
                "deh, [Description] = @Description WHERE (([idxRow] = @Original_idxRow) AND ([Ran"& _ 
                "andePersonalCode] = @Original_RanandePersonalCode) AND ([pDate] = @Original_pDat"& _ 
                "e) AND ((@IsNull_VaziyatSafar = 1 AND [VaziyatSafar] IS NULL) OR ([VaziyatSafar]"& _ 
                " = @Original_VaziyatSafar)) AND ((@IsNull_VaziyatBazgasht = 1 AND [VaziyatBazgas"& _ 
                "ht] IS NULL) OR ([VaziyatBazgasht] = @Original_VaziyatBazgasht)) AND ((@IsNull_V"& _ 
                "aziyatTamirgah = 1 AND [VaziyatTamirgah] IS NULL) OR ([VaziyatTamirgah] = @Origi"& _ 
                "nal_VaziyatTamirgah)) AND ((@IsNull_VaziyatRanandeh = 1 AND [VaziyatRanandeh] IS"& _ 
                " NULL) OR ([VaziyatRanandeh] = @Original_VaziyatRanandeh)) AND ((@IsNull_Descrip"& _ 
                "tion = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT idxRow, RanandePersonalCode, pDate, VaziyatSafar, VaziyatBazgasht, Vaz"& _ 
                "iyatTamirgah, VaziyatRanandeh, Description FROM tbl_NavganStatus WHERE (RanandeP"& _ 
                "ersonalCode = @RanandePersonalCode) AND (idxRow = @idxRow) AND (pDate = @pDate)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatSafar", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatSafar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatBazgasht", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatBazgasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatTamirgah", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatTamirgah", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatRanandeh", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatRanandeh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_idxRow", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "idxRow", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatSafar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatSafar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatSafar", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatSafar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatBazgasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatBazgasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatBazgasht", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatBazgasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatTamirgah", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatTamirgah", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatTamirgah", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatTamirgah", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VaziyatRanandeh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatRanandeh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VaziyatRanandeh", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaziyatRanandeh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idxRow", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "idxRow", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT idxRow, RanandePersonalCode, pDate, VaziyatSafar, VaziyatBazgasht, Vaziyat"& _ 
                "Tamirgah, VaziyatRanandeh, Description FROM dbo.tbl_NavganStatus"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     idxRow, RanandePersonalCode, pDate, VaziyatSafar, VaziyatBazgasht, Vaz"& _ 
                "iyatTamirgah, VaziyatRanandeh, Description"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_NavganStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "     (pDate = @pDate)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     idxRow, RanandePersonalCode, pDate, VaziyatSafar, VaziyatBazgasht, Vaz"& _ 
                "iyatTamirgah, VaziyatRanandeh, Description"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_NavganStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "     (pDate = @pDate) AND (RanandePersonalCode = @RanandePersonalCode)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "RanandePersonalCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "dbo.usp_InsertNavagnStatus"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RanandePersonalCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatSafar", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatBazgasht", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatTamirgah", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaziyatRanandeh", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.NVarChar, 500, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_NavganStatusDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_NavganStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_NavganStatusDataTable = New dsTarabari.tbl_NavganStatusDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectByDate(ByVal pDate As String) As dsTarabari.tbl_NavganStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pDate,String)
            End If
            Dim dataTable As dsTarabari.tbl_NavganStatusDataTable = New dsTarabari.tbl_NavganStatusDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectByPersonalCodeAndDate(ByVal pDate As String, ByVal RanandePersonalCode As String) As dsTarabari.tbl_NavganStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pDate,String)
            End If
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            Dim dataTable As dsTarabari.tbl_NavganStatusDataTable = New dsTarabari.tbl_NavganStatusDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_NavganStatusDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_NavganStatus")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_idxRow As Integer, ByVal Original_RanandePersonalCode As String, ByVal Original_pDate As String, ByVal Original_VaziyatSafar As Global.System.Nullable(Of Byte), ByVal Original_VaziyatBazgasht As Global.System.Nullable(Of Byte), ByVal Original_VaziyatTamirgah As Global.System.Nullable(Of Byte), ByVal Original_VaziyatRanandeh As Global.System.Nullable(Of Byte), ByVal Original_Description As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idxRow,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RanandePersonalCode,String)
            End If
            If (Original_pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pDate")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_pDate,String)
            End If
            If (Original_VaziyatSafar.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_VaziyatSafar.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_VaziyatBazgasht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_VaziyatBazgasht.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_VaziyatTamirgah.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_VaziyatTamirgah.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_VaziyatRanandeh.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_VaziyatRanandeh.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Description,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RanandePersonalCode As String, ByVal pDate As String, ByVal VaziyatSafar As Global.System.Nullable(Of Byte), ByVal VaziyatBazgasht As Global.System.Nullable(Of Byte), ByVal VaziyatTamirgah As Global.System.Nullable(Of Byte), ByVal VaziyatRanandeh As Global.System.Nullable(Of Byte), ByVal Description As String) As Integer
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(pDate,String)
            End If
            If (VaziyatSafar.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(VaziyatSafar.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (VaziyatBazgasht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(VaziyatBazgasht.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (VaziyatTamirgah.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(VaziyatTamirgah.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (VaziyatRanandeh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(VaziyatRanandeh.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Description,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RanandePersonalCode As String,  _
                    ByVal pDate As String,  _
                    ByVal VaziyatSafar As Global.System.Nullable(Of Byte),  _
                    ByVal VaziyatBazgasht As Global.System.Nullable(Of Byte),  _
                    ByVal VaziyatTamirgah As Global.System.Nullable(Of Byte),  _
                    ByVal VaziyatRanandeh As Global.System.Nullable(Of Byte),  _
                    ByVal Description As String,  _
                    ByVal Original_idxRow As Integer,  _
                    ByVal Original_RanandePersonalCode As String,  _
                    ByVal Original_pDate As String,  _
                    ByVal Original_VaziyatSafar As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VaziyatBazgasht As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VaziyatTamirgah As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VaziyatRanandeh As Global.System.Nullable(Of Byte),  _
                    ByVal Original_Description As String,  _
                    ByVal idxRow As Integer) As Integer
            If (RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RanandePersonalCode,String)
            End If
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(pDate,String)
            End If
            If (VaziyatSafar.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(VaziyatSafar.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (VaziyatBazgasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(VaziyatBazgasht.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (VaziyatTamirgah.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(VaziyatTamirgah.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (VaziyatRanandeh.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(VaziyatRanandeh.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_idxRow,Integer)
            If (Original_RanandePersonalCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RanandePersonalCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_RanandePersonalCode,String)
            End If
            If (Original_pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_pDate,String)
            End If
            If (Original_VaziyatSafar.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_VaziyatSafar.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_VaziyatBazgasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_VaziyatBazgasht.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_VaziyatTamirgah.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_VaziyatTamirgah.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_VaziyatRanandeh.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_VaziyatRanandeh.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(idxRow,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal VaziyatSafar As Global.System.Nullable(Of Byte), ByVal VaziyatBazgasht As Global.System.Nullable(Of Byte), ByVal VaziyatTamirgah As Global.System.Nullable(Of Byte), ByVal VaziyatRanandeh As Global.System.Nullable(Of Byte), ByVal Description As String, ByVal Original_idxRow As Integer, ByVal Original_RanandePersonalCode As String, ByVal Original_pDate As String, ByVal Original_VaziyatSafar As Global.System.Nullable(Of Byte), ByVal Original_VaziyatBazgasht As Global.System.Nullable(Of Byte), ByVal Original_VaziyatTamirgah As Global.System.Nullable(Of Byte), ByVal Original_VaziyatRanandeh As Global.System.Nullable(Of Byte), ByVal Original_Description As String) As Integer
            Return Me.Update(Original_RanandePersonalCode, Original_pDate, VaziyatSafar, VaziyatBazgasht, VaziyatTamirgah, VaziyatRanandeh, Description, Original_idxRow, Original_RanandePersonalCode, Original_pDate, Original_VaziyatSafar, Original_VaziyatBazgasht, Original_VaziyatTamirgah, Original_VaziyatRanandeh, Original_Description, Original_idxRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_InsertNavagnStatus(ByVal RanandePersonalCode As String, ByVal pDate As String, ByVal VaziyatSafar As Global.System.Nullable(Of Byte), ByVal VaziyatBazgasht As Global.System.Nullable(Of Byte), ByVal VaziyatTamirgah As Global.System.Nullable(Of Byte), ByVal VaziyatRanandeh As Global.System.Nullable(Of Byte), ByVal Description As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (RanandePersonalCode Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(RanandePersonalCode,String)
            End If
            If (pDate Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(pDate,String)
            End If
            If (VaziyatSafar.HasValue = true) Then
                command.Parameters(3).Value = CType(VaziyatSafar.Value,Byte)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (VaziyatBazgasht.HasValue = true) Then
                command.Parameters(4).Value = CType(VaziyatBazgasht.Value,Byte)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (VaziyatTamirgah.HasValue = true) Then
                command.Parameters(5).Value = CType(VaziyatTamirgah.Value,Byte)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (VaziyatRanandeh.HasValue = true) Then
                command.Parameters(6).Value = CType(VaziyatRanandeh.Value,Byte)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Description Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Description,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class usp_KarkardeRoozane4PrintTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "usp_KarkardeRoozane4Print"
            tableMapping.ColumnMappings.Add("OperationCode", "OperationCode")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("RanandeFullName", "RanandeFullName")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("NameMabda", "NameMabda")
            tableMapping.ColumnMappings.Add("NameMaghsad", "NameMaghsad")
            tableMapping.ColumnMappings.Add("NoeBar", "NoeBar")
            tableMapping.ColumnMappings.Add("SaatKhoroojMojtame", "SaatKhoroojMojtame")
            tableMapping.ColumnMappings.Add("SaatVoroodMojtame", "SaatVoroodMojtame")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("DarRahRaft", "DarRahRaft")
            tableMapping.ColumnMappings.Add("DarRahBargasht", "DarRahBargasht")
            tableMapping.ColumnMappings.Add("KarDakheli", "KarDakheli")
            tableMapping.ColumnMappings.Add("Khali", "Khali")
            tableMapping.ColumnMappings.Add("Por", "Por")
            tableMapping.ColumnMappings.Add("Sayer", "Sayer")
            tableMapping.ColumnMappings.Add("TamirRena", "TamirRena")
            tableMapping.ColumnMappings.Add("TamirMotefareghe", "TamirMotefareghe")
            tableMapping.ColumnMappings.Add("TamirKharkhane", "TamirKharkhane")
            tableMapping.ColumnMappings.Add("Morkhasi", "Morkhasi")
            tableMapping.ColumnMappings.Add("Gheybat", "Gheybat")
            tableMapping.ColumnMappings.Add("Esterahat", "Esterahat")
            tableMapping.ColumnMappings.Add("Tasadof", "Tasadof")
            tableMapping.ColumnMappings.Add("Description", "Description")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.usp_KarkardeRoozane4Print"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.usp_KarkardeRoozane4PrintDataTable, ByVal pDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (pDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal pDate As String) As dsTarabari.usp_KarkardeRoozane4PrintDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (pDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pDate,String)
            End If
            Dim dataTable As dsTarabari.usp_KarkardeRoozane4PrintDataTable = New dsTarabari.usp_KarkardeRoozane4PrintDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class usp_KarkardeRoozane4ShowTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "usp_KarkardeRoozane4Show"
            tableMapping.ColumnMappings.Add("OperationCode", "OperationCode")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("RanandeFullName", "RanandeFullName")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("NameMabda", "NameMabda")
            tableMapping.ColumnMappings.Add("NameMaghsad", "NameMaghsad")
            tableMapping.ColumnMappings.Add("NoeBar", "NoeBar")
            tableMapping.ColumnMappings.Add("SaatKhoroojMojtame", "SaatKhoroojMojtame")
            tableMapping.ColumnMappings.Add("SaatVoroodMojtame", "SaatVoroodMojtame")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("VaziyatSafar", "VaziyatSafar")
            tableMapping.ColumnMappings.Add("VaziyatBazgasht", "VaziyatBazgasht")
            tableMapping.ColumnMappings.Add("VaziyatTamirgah", "VaziyatTamirgah")
            tableMapping.ColumnMappings.Add("VaziyatRanandeh", "VaziyatRanandeh")
            tableMapping.ColumnMappings.Add("Description", "Description")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.usp_KarkardeRoozane4Show"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.usp_KarkardeRoozane4ShowDataTable, ByVal pDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (pDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal pDate As String) As dsTarabari.usp_KarkardeRoozane4ShowDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (pDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pDate,String)
            End If
            Dim dataTable As dsTarabari.usp_KarkardeRoozane4ShowDataTable = New dsTarabari.usp_KarkardeRoozane4ShowDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_SanadTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Sanad"
            tableMapping.ColumnMappings.Add("OperationCode", "OperationCode")
            tableMapping.ColumnMappings.Add("OrderID", "OrderID")
            tableMapping.ColumnMappings.Add("ShomareBarname", "ShomareBarname")
            tableMapping.ColumnMappings.Add("TarikhBarname", "TarikhBarname")
            tableMapping.ColumnMappings.Add("MabdaID", "MabdaID")
            tableMapping.ColumnMappings.Add("MaghsadID", "MaghsadID")
            tableMapping.ColumnMappings.Add("NoeBar", "NoeBar")
            tableMapping.ColumnMappings.Add("MabnaKomision", "MabnaKomision")
            tableMapping.ColumnMappings.Add("KolKerayeBarname", "KolKerayeBarname")
            tableMapping.ColumnMappings.Add("PayeKerayeBarname", "PayeKerayeBarname")
            tableMapping.ColumnMappings.Add("DaryaftNaghdi", "DaryaftNaghdi")
            tableMapping.ColumnMappings.Add("HaghPayane", "HaghPayane")
            tableMapping.ColumnMappings.Add("KomisionBarname", "KomisionBarname")
            tableMapping.ColumnMappings.Add("BimeBarbari", "BimeBarbari")
            tableMapping.ColumnMappings.Add("TafavotKomision", "TafavotKomision")
            tableMapping.ColumnMappings.Add("BimeOmr", "BimeOmr")
            tableMapping.ColumnMappings.Add("Bargiri_Takhliye", "Bargiri_Takhliye")
            tableMapping.ColumnMappings.Add("JarimePolice", "JarimePolice")
            tableMapping.ColumnMappings.Add("Nobat", "Nobat")
            tableMapping.ColumnMappings.Add("AvarezOtooban", "AvarezOtooban")
            tableMapping.ColumnMappings.Add("SahmRanande", "SahmRanande")
            tableMapping.ColumnMappings.Add("HazineGhaza_Raft", "HazineGhaza_Raft")
            tableMapping.ColumnMappings.Add("HazineGhaza_Bargasht", "HazineGhaza_Bargasht")
            tableMapping.ColumnMappings.Add("MeghdarSookht", "MeghdarSookht")
            tableMapping.ColumnMappings.Add("Total", "Total")
            tableMapping.ColumnMappings.Add("Darsad_SahmRanande", "Darsad_SahmRanande")
            tableMapping.ColumnMappings.Add("Darsad_HazineGhaza_Raft", "Darsad_HazineGhaza_Raft")
            tableMapping.ColumnMappings.Add("Darsad_HazineGhaza_Bargasht", "Darsad_HazineGhaza_Bargasht")
            tableMapping.ColumnMappings.Add("MablaghSookht", "MablaghSookht")
            tableMapping.ColumnMappings.Add("Darsad_HaghPayane", "Darsad_HaghPayane")
            tableMapping.ColumnMappings.Add("Darsad_KomisionBarname", "Darsad_KomisionBarname")
            tableMapping.ColumnMappings.Add("IsProcess", "IsProcess")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Sanad] WHERE (([OperationCode] = @Original_OperationCode) "& _ 
                "AND ([OrderID] = @Original_OrderID) AND ((@IsNull_ShomareBarname = 1 AND [Shomar"& _ 
                "eBarname] IS NULL) OR ([ShomareBarname] = @Original_ShomareBarname)) AND ((@IsNu"& _ 
                "ll_TarikhBarname = 1 AND [TarikhBarname] IS NULL) OR ([TarikhBarname] = @Origina"& _ 
                "l_TarikhBarname)) AND ((@IsNull_MabdaID = 1 AND [MabdaID] IS NULL) OR ([MabdaID]"& _ 
                " = @Original_MabdaID)) AND ((@IsNull_MaghsadID = 1 AND [MaghsadID] IS NULL) OR ("& _ 
                "[MaghsadID] = @Original_MaghsadID)) AND ((@IsNull_NoeBar = 1 AND [NoeBar] IS NUL"& _ 
                "L) OR ([NoeBar] = @Original_NoeBar)) AND ((@IsNull_MabnaKomision = 1 AND [MabnaK"& _ 
                "omision] IS NULL) OR ([MabnaKomision] = @Original_MabnaKomision)) AND ((@IsNull_"& _ 
                "KolKerayeBarname = 1 AND [KolKerayeBarname] IS NULL) OR ([KolKerayeBarname] = @O"& _ 
                "riginal_KolKerayeBarname)) AND ((@IsNull_PayeKerayeBarname = 1 AND [PayeKerayeBa"& _ 
                "rname] IS NULL) OR ([PayeKerayeBarname] = @Original_PayeKerayeBarname)) AND ((@I"& _ 
                "sNull_DaryaftNaghdi = 1 AND [DaryaftNaghdi] IS NULL) OR ([DaryaftNaghdi] = @Orig"& _ 
                "inal_DaryaftNaghdi)) AND ((@IsNull_HaghPayane = 1 AND [HaghPayane] IS NULL) OR ("& _ 
                "[HaghPayane] = @Original_HaghPayane)) AND ((@IsNull_KomisionBarname = 1 AND [Kom"& _ 
                "isionBarname] IS NULL) OR ([KomisionBarname] = @Original_KomisionBarname)) AND ("& _ 
                "(@IsNull_BimeBarbari = 1 AND [BimeBarbari] IS NULL) OR ([BimeBarbari] = @Origina"& _ 
                "l_BimeBarbari)) AND ((@IsNull_TafavotKomision = 1 AND [TafavotKomision] IS NULL)"& _ 
                " OR ([TafavotKomision] = @Original_TafavotKomision)) AND ((@IsNull_BimeOmr = 1 A"& _ 
                "ND [BimeOmr] IS NULL) OR ([BimeOmr] = @Original_BimeOmr)) AND ((@IsNull_Bargiri_"& _ 
                "Takhliye = 1 AND [Bargiri_Takhliye] IS NULL) OR ([Bargiri_Takhliye] = @Original_"& _ 
                "Bargiri_Takhliye)) AND ((@IsNull_JarimePolice = 1 AND [JarimePolice] IS NULL) OR"& _ 
                " ([JarimePolice] = @Original_JarimePolice)) AND ((@IsNull_Nobat = 1 AND [Nobat] "& _ 
                "IS NULL) OR ([Nobat] = @Original_Nobat)) AND ((@IsNull_AvarezOtooban = 1 AND [Av"& _ 
                "arezOtooban] IS NULL) OR ([AvarezOtooban] = @Original_AvarezOtooban)) AND ((@IsN"& _ 
                "ull_SahmRanande = 1 AND [SahmRanande] IS NULL) OR ([SahmRanande] = @Original_Sah"& _ 
                "mRanande)) AND ((@IsNull_HazineGhaza_Raft = 1 AND [HazineGhaza_Raft] IS NULL) OR"& _ 
                " ([HazineGhaza_Raft] = @Original_HazineGhaza_Raft)) AND ((@IsNull_HazineGhaza_Ba"& _ 
                "rgasht = 1 AND [HazineGhaza_Bargasht] IS NULL) OR ([HazineGhaza_Bargasht] = @Ori"& _ 
                "ginal_HazineGhaza_Bargasht)) AND ((@IsNull_MeghdarSookht = 1 AND [MeghdarSookht]"& _ 
                " IS NULL) OR ([MeghdarSookht] = @Original_MeghdarSookht)) AND ((@IsNull_Total = "& _ 
                "1 AND [Total] IS NULL) OR ([Total] = @Original_Total)) AND ([Darsad_SahmRanande]"& _ 
                " = @Original_Darsad_SahmRanande) AND ((@IsNull_Darsad_HazineGhaza_Raft = 1 AND ["& _ 
                "Darsad_HazineGhaza_Raft] IS NULL) OR ([Darsad_HazineGhaza_Raft] = @Original_Dars"& _ 
                "ad_HazineGhaza_Raft)) AND ((@IsNull_Darsad_HazineGhaza_Bargasht = 1 AND [Darsad_"& _ 
                "HazineGhaza_Bargasht] IS NULL) OR ([Darsad_HazineGhaza_Bargasht] = @Original_Dar"& _ 
                "sad_HazineGhaza_Bargasht)) AND ((@IsNull_MablaghSookht = 1 AND [MablaghSookht] I"& _ 
                "S NULL) OR ([MablaghSookht] = @Original_MablaghSookht)) AND ((@IsNull_Darsad_Hag"& _ 
                "hPayane = 1 AND [Darsad_HaghPayane] IS NULL) OR ([Darsad_HaghPayane] = @Original"& _ 
                "_Darsad_HaghPayane)) AND ((@IsNull_Darsad_KomisionBarname = 1 AND [Darsad_Komisi"& _ 
                "onBarname] IS NULL) OR ([Darsad_KomisionBarname] = @Original_Darsad_KomisionBarn"& _ 
                "ame)) AND ((@IsNull_IsProcess = 1 AND [IsProcess] IS NULL) OR ([IsProcess] = @Or"& _ 
                "iginal_IsProcess)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoeBar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MabnaKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabnaKomision", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabnaKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabnaKomision", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KolKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KolKerayeBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KolKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KolKerayeBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayeKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayeKerayeBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayeKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayeKerayeBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DaryaftNaghdi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaryaftNaghdi", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DaryaftNaghdi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaryaftNaghdi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BimeBarbari", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeBarbari", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BimeBarbari", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeBarbari", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TafavotKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TafavotKomision", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TafavotKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TafavotKomision", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BimeOmr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeOmr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BimeOmr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeOmr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Bargiri_Takhliye", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bargiri_Takhliye", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Bargiri_Takhliye", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bargiri_Takhliye", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JarimePolice", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JarimePolice", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JarimePolice", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JarimePolice", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nobat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nobat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nobat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nobat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AvarezOtooban", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AvarezOtooban", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AvarezOtooban", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AvarezOtooban", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SahmRanande", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SahmRanande", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MeghdarSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MeghdarSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_SahmRanande", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_SahmRanande", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_HazineGhaza_Raft", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HaghPayane", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_HaghPayane", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HaghPayane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_KomisionBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_KomisionBarname", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_KomisionBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsProcess", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Sanad] ([OperationCode], [OrderID], [ShomareBarname], [Tar"& _ 
                "ikhBarname], [MabdaID], [MaghsadID], [NoeBar], [MabnaKomision], [KolKerayeBarnam"& _ 
                "e], [PayeKerayeBarname], [DaryaftNaghdi], [HaghPayane], [KomisionBarname], [Bime"& _ 
                "Barbari], [TafavotKomision], [BimeOmr], [Bargiri_Takhliye], [JarimePolice], [Nob"& _ 
                "at], [AvarezOtooban], [SahmRanande], [HazineGhaza_Raft], [HazineGhaza_Bargasht],"& _ 
                " [MeghdarSookht], [Total], [Darsad_SahmRanande], [Darsad_HazineGhaza_Raft], [Dar"& _ 
                "sad_HazineGhaza_Bargasht], [MablaghSookht], [Darsad_HaghPayane], [Darsad_Komisio"& _ 
                "nBarname], [IsProcess]) VALUES (@OperationCode, @OrderID, @ShomareBarname, @Tari"& _ 
                "khBarname, @MabdaID, @MaghsadID, @NoeBar, @MabnaKomision, @KolKerayeBarname, @Pa"& _ 
                "yeKerayeBarname, @DaryaftNaghdi, @HaghPayane, @KomisionBarname, @BimeBarbari, @T"& _ 
                "afavotKomision, @BimeOmr, @Bargiri_Takhliye, @JarimePolice, @Nobat, @AvarezOtoob"& _ 
                "an, @SahmRanande, @HazineGhaza_Raft, @HazineGhaza_Bargasht, @MeghdarSookht, @Tot"& _ 
                "al, @Darsad_SahmRanande, @Darsad_HazineGhaza_Raft, @Darsad_HazineGhaza_Bargasht,"& _ 
                " @MablaghSookht, @Darsad_HaghPayane, @Darsad_KomisionBarname, @IsProcess);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT OperationCode, OrderID, ShomareBarname, TarikhBarname, MabdaID, MaghsadID, No"& _ 
                "eBar, MabnaKomision, KolKerayeBarname, PayeKerayeBarname, DaryaftNaghdi, HaghPay"& _ 
                "ane, KomisionBarname, BimeBarbari, TafavotKomision, BimeOmr, Bargiri_Takhliye, J"& _ 
                "arimePolice, Nobat, AvarezOtooban, SahmRanande, HazineGhaza_Raft, HazineGhaza_Ba"& _ 
                "rgasht, MeghdarSookht, Total, Darsad_SahmRanande, Darsad_HazineGhaza_Raft, Darsa"& _ 
                "d_HazineGhaza_Bargasht, MablaghSookht, Darsad_HaghPayane, Darsad_KomisionBarname"& _ 
                ", IsProcess FROM tbl_Sanad WHERE (OperationCode = @OperationCode) AND (OrderID ="& _ 
                " @OrderID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabnaKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabnaKomision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KolKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KolKerayeBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayeKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayeKerayeBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaryaftNaghdi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaryaftNaghdi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BimeBarbari", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeBarbari", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TafavotKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TafavotKomision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BimeOmr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeOmr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bargiri_Takhliye", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bargiri_Takhliye", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JarimePolice", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JarimePolice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nobat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nobat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AvarezOtooban", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AvarezOtooban", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SahmRanande", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_SahmRanande", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_HazineGhaza_Raft", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_HaghPayane", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_KomisionBarname", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Sanad] SET [OperationCode] = @OperationCode, [OrderID] = @Order"& _ 
                "ID, [ShomareBarname] = @ShomareBarname, [TarikhBarname] = @TarikhBarname, [Mabda"& _ 
                "ID] = @MabdaID, [MaghsadID] = @MaghsadID, [NoeBar] = @NoeBar, [MabnaKomision] = "& _ 
                "@MabnaKomision, [KolKerayeBarname] = @KolKerayeBarname, [PayeKerayeBarname] = @P"& _ 
                "ayeKerayeBarname, [DaryaftNaghdi] = @DaryaftNaghdi, [HaghPayane] = @HaghPayane, "& _ 
                "[KomisionBarname] = @KomisionBarname, [BimeBarbari] = @BimeBarbari, [TafavotKomi"& _ 
                "sion] = @TafavotKomision, [BimeOmr] = @BimeOmr, [Bargiri_Takhliye] = @Bargiri_Ta"& _ 
                "khliye, [JarimePolice] = @JarimePolice, [Nobat] = @Nobat, [AvarezOtooban] = @Ava"& _ 
                "rezOtooban, [SahmRanande] = @SahmRanande, [HazineGhaza_Raft] = @HazineGhaza_Raft"& _ 
                ", [HazineGhaza_Bargasht] = @HazineGhaza_Bargasht, [MeghdarSookht] = @MeghdarSook"& _ 
                "ht, [Total] = @Total, [Darsad_SahmRanande] = @Darsad_SahmRanande, [Darsad_Hazine"& _ 
                "Ghaza_Raft] = @Darsad_HazineGhaza_Raft, [Darsad_HazineGhaza_Bargasht] = @Darsad_"& _ 
                "HazineGhaza_Bargasht, [MablaghSookht] = @MablaghSookht, [Darsad_HaghPayane] = @D"& _ 
                "arsad_HaghPayane, [Darsad_KomisionBarname] = @Darsad_KomisionBarname, [IsProcess"& _ 
                "] = @IsProcess WHERE (([OperationCode] = @Original_OperationCode) AND ([OrderID]"& _ 
                " = @Original_OrderID) AND ((@IsNull_ShomareBarname = 1 AND [ShomareBarname] IS N"& _ 
                "ULL) OR ([ShomareBarname] = @Original_ShomareBarname)) AND ((@IsNull_TarikhBarna"& _ 
                "me = 1 AND [TarikhBarname] IS NULL) OR ([TarikhBarname] = @Original_TarikhBarnam"& _ 
                "e)) AND ((@IsNull_MabdaID = 1 AND [MabdaID] IS NULL) OR ([MabdaID] = @Original_M"& _ 
                "abdaID)) AND ((@IsNull_MaghsadID = 1 AND [MaghsadID] IS NULL) OR ([MaghsadID] = "& _ 
                "@Original_MaghsadID)) AND ((@IsNull_NoeBar = 1 AND [NoeBar] IS NULL) OR ([NoeBar"& _ 
                "] = @Original_NoeBar)) AND ((@IsNull_MabnaKomision = 1 AND [MabnaKomision] IS NU"& _ 
                "LL) OR ([MabnaKomision] = @Original_MabnaKomision)) AND ((@IsNull_KolKerayeBarna"& _ 
                "me = 1 AND [KolKerayeBarname] IS NULL) OR ([KolKerayeBarname] = @Original_KolKer"& _ 
                "ayeBarname)) AND ((@IsNull_PayeKerayeBarname = 1 AND [PayeKerayeBarname] IS NULL"& _ 
                ") OR ([PayeKerayeBarname] = @Original_PayeKerayeBarname)) AND ((@IsNull_DaryaftN"& _ 
                "aghdi = 1 AND [DaryaftNaghdi] IS NULL) OR ([DaryaftNaghdi] = @Original_DaryaftNa"& _ 
                "ghdi)) AND ((@IsNull_HaghPayane = 1 AND [HaghPayane] IS NULL) OR ([HaghPayane] ="& _ 
                " @Original_HaghPayane)) AND ((@IsNull_KomisionBarname = 1 AND [KomisionBarname] "& _ 
                "IS NULL) OR ([KomisionBarname] = @Original_KomisionBarname)) AND ((@IsNull_BimeB"& _ 
                "arbari = 1 AND [BimeBarbari] IS NULL) OR ([BimeBarbari] = @Original_BimeBarbari)"& _ 
                ") AND ((@IsNull_TafavotKomision = 1 AND [TafavotKomision] IS NULL) OR ([TafavotK"& _ 
                "omision] = @Original_TafavotKomision)) AND ((@IsNull_BimeOmr = 1 AND [BimeOmr] I"& _ 
                "S NULL) OR ([BimeOmr] = @Original_BimeOmr)) AND ((@IsNull_Bargiri_Takhliye = 1 A"& _ 
                "ND [Bargiri_Takhliye] IS NULL) OR ([Bargiri_Takhliye] = @Original_Bargiri_Takhli"& _ 
                "ye)) AND ((@IsNull_JarimePolice = 1 AND [JarimePolice] IS NULL) OR ([JarimePolic"& _ 
                "e] = @Original_JarimePolice)) AND ((@IsNull_Nobat = 1 AND [Nobat] IS NULL) OR (["& _ 
                "Nobat] = @Original_Nobat)) AND ((@IsNull_AvarezOtooban = 1 AND [AvarezOtooban] I"& _ 
                "S NULL) OR ([AvarezOtooban] = @Original_AvarezOtooban)) AND ((@IsNull_SahmRanand"& _ 
                "e = 1 AND [SahmRanande] IS NULL) OR ([SahmRanande] = @Original_SahmRanande)) AND"& _ 
                " ((@IsNull_HazineGhaza_Raft = 1 AND [HazineGhaza_Raft] IS NULL) OR ([HazineGhaza"& _ 
                "_Raft] = @Original_HazineGhaza_Raft)) AND ((@IsNull_HazineGhaza_Bargasht = 1 AND"& _ 
                " [HazineGhaza_Bargasht] IS NULL) OR ([HazineGhaza_Bargasht] = @Original_HazineGh"& _ 
                "aza_Bargasht)) AND ((@IsNull_MeghdarSookht = 1 AND [MeghdarSookht] IS NULL) OR ("& _ 
                "[MeghdarSookht] = @Original_MeghdarSookht)) AND ((@IsNull_Total = 1 AND [Total] "& _ 
                "IS NULL) OR ([Total] = @Original_Total)) AND ([Darsad_SahmRanande] = @Original_D"& _ 
                "arsad_SahmRanande) AND ((@IsNull_Darsad_HazineGhaza_Raft = 1 AND [Darsad_HazineG"& _ 
                "haza_Raft] IS NULL) OR ([Darsad_HazineGhaza_Raft] = @Original_Darsad_HazineGhaza"& _ 
                "_Raft)) AND ((@IsNull_Darsad_HazineGhaza_Bargasht = 1 AND [Darsad_HazineGhaza_Ba"& _ 
                "rgasht] IS NULL) OR ([Darsad_HazineGhaza_Bargasht] = @Original_Darsad_HazineGhaz"& _ 
                "a_Bargasht)) AND ((@IsNull_MablaghSookht = 1 AND [MablaghSookht] IS NULL) OR ([M"& _ 
                "ablaghSookht] = @Original_MablaghSookht)) AND ((@IsNull_Darsad_HaghPayane = 1 AN"& _ 
                "D [Darsad_HaghPayane] IS NULL) OR ([Darsad_HaghPayane] = @Original_Darsad_HaghPa"& _ 
                "yane)) AND ((@IsNull_Darsad_KomisionBarname = 1 AND [Darsad_KomisionBarname] IS "& _ 
                "NULL) OR ([Darsad_KomisionBarname] = @Original_Darsad_KomisionBarname)) AND ((@I"& _ 
                "sNull_IsProcess = 1 AND [IsProcess] IS NULL) OR ([IsProcess] = @Original_IsProce"& _ 
                "ss)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OperationCode, OrderID, ShomareBarname, TarikhBarname, MabdaID, M"& _ 
                "aghsadID, NoeBar, MabnaKomision, KolKerayeBarname, PayeKerayeBarname, DaryaftNag"& _ 
                "hdi, HaghPayane, KomisionBarname, BimeBarbari, TafavotKomision, BimeOmr, Bargiri"& _ 
                "_Takhliye, JarimePolice, Nobat, AvarezOtooban, SahmRanande, HazineGhaza_Raft, Ha"& _ 
                "zineGhaza_Bargasht, MeghdarSookht, Total, Darsad_SahmRanande, Darsad_HazineGhaza"& _ 
                "_Raft, Darsad_HazineGhaza_Bargasht, MablaghSookht, Darsad_HaghPayane, Darsad_Kom"& _ 
                "isionBarname, IsProcess FROM tbl_Sanad WHERE (OperationCode = @OperationCode) AN"& _ 
                "D (OrderID = @OrderID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MabnaKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabnaKomision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KolKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KolKerayeBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayeKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayeKerayeBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaryaftNaghdi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaryaftNaghdi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BimeBarbari", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeBarbari", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TafavotKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TafavotKomision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BimeOmr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeOmr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bargiri_Takhliye", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bargiri_Takhliye", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JarimePolice", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JarimePolice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nobat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nobat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AvarezOtooban", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AvarezOtooban", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SahmRanande", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MeghdarSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_SahmRanande", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_SahmRanande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_HazineGhaza_Raft", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Raft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_HaghPayane", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HaghPayane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Darsad_KomisionBarname", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_KomisionBarname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TarikhBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TarikhBarname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TarikhBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabdaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabdaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaghsadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaghsadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoeBar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoeBar", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoeBar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MabnaKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabnaKomision", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MabnaKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MabnaKomision", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KolKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KolKerayeBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KolKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KolKerayeBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayeKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayeKerayeBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayeKerayeBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayeKerayeBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DaryaftNaghdi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaryaftNaghdi", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DaryaftNaghdi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaryaftNaghdi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaghPayane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KomisionBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BimeBarbari", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeBarbari", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BimeBarbari", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeBarbari", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TafavotKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TafavotKomision", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TafavotKomision", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TafavotKomision", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BimeOmr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeOmr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BimeOmr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BimeOmr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Bargiri_Takhliye", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bargiri_Takhliye", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Bargiri_Takhliye", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bargiri_Takhliye", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JarimePolice", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JarimePolice", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JarimePolice", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JarimePolice", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nobat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nobat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nobat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nobat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AvarezOtooban", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AvarezOtooban", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AvarezOtooban", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AvarezOtooban", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SahmRanande", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SahmRanande", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SahmRanande", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MeghdarSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MeghdarSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MeghdarSookht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_SahmRanande", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_SahmRanande", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_HazineGhaza_Raft", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_HazineGhaza_Raft", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Raft", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_HazineGhaza_Bargasht", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HazineGhaza_Bargasht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MablaghSookht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MablaghSookht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_HaghPayane", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HaghPayane", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_HaghPayane", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_HaghPayane", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Darsad_KomisionBarname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_KomisionBarname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Darsad_KomisionBarname", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Darsad_KomisionBarname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsProcess", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsProcess", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT OperationCode, OrderID, ShomareBarname, TarikhBarname, MabdaID, MaghsadID,"& _ 
                " NoeBar, MabnaKomision, KolKerayeBarname, PayeKerayeBarname, DaryaftNaghdi, Hagh"& _ 
                "Payane, KomisionBarname, BimeBarbari, TafavotKomision, BimeOmr, Bargiri_Takhliye"& _ 
                ", JarimePolice, Nobat, AvarezOtooban, SahmRanande, HazineGhaza_Raft, HazineGhaza"& _ 
                "_Bargasht, MeghdarSookht, Total, Darsad_SahmRanande, Darsad_HazineGhaza_Raft, Da"& _ 
                "rsad_HazineGhaza_Bargasht, MablaghSookht, Darsad_HaghPayane, Darsad_KomisionBarn"& _ 
                "ame, IsProcess FROM dbo.tbl_Sanad"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "UPDATE    tbl_Sanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              PaymentStatus = @PaymentStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     ("& _ 
                "OperationCode = @OperationCode);"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentStatus", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM tbl_Sanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OperationCode = @OperationCode)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     OperationCode, OrderID, ShomareBarname, TarikhBarname, MabdaID, Maghsa"& _ 
                "dID, NoeBar, MabnaKomision, KolKerayeBarname, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      PayeKeraye"& _ 
                "Barname, DaryaftNaghdi, HaghPayane, KomisionBarname, BimeBarbari, TafavotKomisio"& _ 
                "n, BimeOmr, Bargiri_Takhliye, JarimePolice, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Nobat, Avare"& _ 
                "zOtooban, SahmRanande, HazineGhaza_Raft, HazineGhaza_Bargasht, MeghdarSookht, To"& _ 
                "tal, Darsad_SahmRanande, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Darsad_HazineGhaza_Raft, Darsad"& _ 
                "_HazineGhaza_Bargasht, MablaghSookht, Darsad_HaghPayane, Darsad_KomisionBarname,"& _ 
                " IsProcess"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Sanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OperationCode = @OperationCode)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE    tbl_Sanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              IsProcess = @IsProcess"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Operatio"& _ 
                "nCode = @OperationCode)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcess", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_SanadDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_SanadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_SanadDataTable = New dsTarabari.tbl_SanadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOperationCode(ByVal OperationCode As Integer) As dsTarabari.tbl_SanadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(OperationCode,Integer)
            Dim dataTable As dsTarabari.tbl_SanadDataTable = New dsTarabari.tbl_SanadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_SanadDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Sanad")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_OperationCode As Integer,  _
                    ByVal Original_OrderID As Integer,  _
                    ByVal Original_ShomareBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhBarname As String,  _
                    ByVal Original_MabdaID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaghsadID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NoeBar As String,  _
                    ByVal Original_MabnaKomision As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KolKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PayeKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DaryaftNaghdi As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HaghPayane As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KomisionBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BimeBarbari As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TafavotKomision As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BimeOmr As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Bargiri_Takhliye As Global.System.Nullable(Of Integer),  _
                    ByVal Original_JarimePolice As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Nobat As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AvarezOtooban As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SahmRanande As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HazineGhaza_Raft As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HazineGhaza_Bargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MeghdarSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Total As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Darsad_SahmRanande As Single,  _
                    ByVal Original_Darsad_HazineGhaza_Raft As Global.System.Nullable(Of Single),  _
                    ByVal Original_Darsad_HazineGhaza_Bargasht As Global.System.Nullable(Of Single),  _
                    ByVal Original_MablaghSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Darsad_HaghPayane As Global.System.Nullable(Of Single),  _
                    ByVal Original_Darsad_KomisionBarname As Global.System.Nullable(Of Single),  _
                    ByVal Original_IsProcess As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_OperationCode,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_OrderID,Integer)
            If (Original_ShomareBarname.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ShomareBarname.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhBarname Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_TarikhBarname,String)
            End If
            If (Original_MabdaID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_MabdaID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_MaghsadID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_MaghsadID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_NoeBar Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_NoeBar,String)
            End If
            If (Original_MabnaKomision.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_MabnaKomision.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_KolKerayeBarname.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_KolKerayeBarname.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_PayeKerayeBarname.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_PayeKerayeBarname.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_DaryaftNaghdi.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_DaryaftNaghdi.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_HaghPayane.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_HaghPayane.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_KomisionBarname.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_KomisionBarname.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_BimeBarbari.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_BimeBarbari.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_TafavotKomision.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_TafavotKomision.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_BimeOmr.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_BimeOmr.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_Bargiri_Takhliye.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Bargiri_Takhliye.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_JarimePolice.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_JarimePolice.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_Nobat.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Nobat.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_AvarezOtooban.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_AvarezOtooban.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_SahmRanande.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_SahmRanande.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_HazineGhaza_Raft.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_HazineGhaza_Bargasht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_MeghdarSookht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_MeghdarSookht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_Total.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_Total.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Darsad_SahmRanande,Single)
            If (Original_Darsad_HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Darsad_HazineGhaza_Raft.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_Darsad_HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_Darsad_HazineGhaza_Bargasht.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_MablaghSookht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_MablaghSookht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_Darsad_HaghPayane.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_Darsad_HaghPayane.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_Darsad_KomisionBarname.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_Darsad_KomisionBarname.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IsProcess.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IsProcess.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal OperationCode As Integer,  _
                    ByVal OrderID As Integer,  _
                    ByVal ShomareBarname As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarname As String,  _
                    ByVal MabdaID As Global.System.Nullable(Of Integer),  _
                    ByVal MaghsadID As Global.System.Nullable(Of Integer),  _
                    ByVal NoeBar As String,  _
                    ByVal MabnaKomision As Global.System.Nullable(Of Integer),  _
                    ByVal KolKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal PayeKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal DaryaftNaghdi As Global.System.Nullable(Of Integer),  _
                    ByVal HaghPayane As Global.System.Nullable(Of Integer),  _
                    ByVal KomisionBarname As Global.System.Nullable(Of Integer),  _
                    ByVal BimeBarbari As Global.System.Nullable(Of Integer),  _
                    ByVal TafavotKomision As Global.System.Nullable(Of Integer),  _
                    ByVal BimeOmr As Global.System.Nullable(Of Integer),  _
                    ByVal Bargiri_Takhliye As Global.System.Nullable(Of Integer),  _
                    ByVal JarimePolice As Global.System.Nullable(Of Integer),  _
                    ByVal Nobat As Global.System.Nullable(Of Integer),  _
                    ByVal AvarezOtooban As Global.System.Nullable(Of Integer),  _
                    ByVal SahmRanande As Global.System.Nullable(Of Integer),  _
                    ByVal HazineGhaza_Raft As Global.System.Nullable(Of Integer),  _
                    ByVal HazineGhaza_Bargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Total As Global.System.Nullable(Of Integer),  _
                    ByVal Darsad_SahmRanande As Single,  _
                    ByVal Darsad_HazineGhaza_Raft As Global.System.Nullable(Of Single),  _
                    ByVal Darsad_HazineGhaza_Bargasht As Global.System.Nullable(Of Single),  _
                    ByVal MablaghSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Darsad_HaghPayane As Global.System.Nullable(Of Single),  _
                    ByVal Darsad_KomisionBarname As Global.System.Nullable(Of Single),  _
                    ByVal IsProcess As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(OperationCode,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(OrderID,Integer)
            If (ShomareBarname.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ShomareBarname.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TarikhBarname Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TarikhBarname,String)
            End If
            If (MabdaID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MabdaID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MaghsadID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MaghsadID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (NoeBar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(NoeBar,String)
            End If
            If (MabnaKomision.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(MabnaKomision.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (KolKerayeBarname.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(KolKerayeBarname.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PayeKerayeBarname.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PayeKerayeBarname.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DaryaftNaghdi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DaryaftNaghdi.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (HaghPayane.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(HaghPayane.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (KomisionBarname.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(KomisionBarname.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BimeBarbari.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(BimeBarbari.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TafavotKomision.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TafavotKomision.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (BimeOmr.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BimeOmr.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Bargiri_Takhliye.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Bargiri_Takhliye.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (JarimePolice.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(JarimePolice.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Nobat.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Nobat.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (AvarezOtooban.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(AvarezOtooban.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (SahmRanande.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SahmRanande.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(HazineGhaza_Raft.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(HazineGhaza_Bargasht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (MeghdarSookht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(MeghdarSookht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Total.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Total.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(Darsad_SahmRanande,Single)
            If (Darsad_HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Darsad_HazineGhaza_Raft.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Darsad_HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Darsad_HazineGhaza_Bargasht.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (MablaghSookht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(MablaghSookht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Darsad_HaghPayane.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Darsad_HaghPayane.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Darsad_KomisionBarname.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Darsad_KomisionBarname.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (IsProcess.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(IsProcess.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OperationCode As Integer,  _
                    ByVal OrderID As Integer,  _
                    ByVal ShomareBarname As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarname As String,  _
                    ByVal MabdaID As Global.System.Nullable(Of Integer),  _
                    ByVal MaghsadID As Global.System.Nullable(Of Integer),  _
                    ByVal NoeBar As String,  _
                    ByVal MabnaKomision As Global.System.Nullable(Of Integer),  _
                    ByVal KolKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal PayeKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal DaryaftNaghdi As Global.System.Nullable(Of Integer),  _
                    ByVal HaghPayane As Global.System.Nullable(Of Integer),  _
                    ByVal KomisionBarname As Global.System.Nullable(Of Integer),  _
                    ByVal BimeBarbari As Global.System.Nullable(Of Integer),  _
                    ByVal TafavotKomision As Global.System.Nullable(Of Integer),  _
                    ByVal BimeOmr As Global.System.Nullable(Of Integer),  _
                    ByVal Bargiri_Takhliye As Global.System.Nullable(Of Integer),  _
                    ByVal JarimePolice As Global.System.Nullable(Of Integer),  _
                    ByVal Nobat As Global.System.Nullable(Of Integer),  _
                    ByVal AvarezOtooban As Global.System.Nullable(Of Integer),  _
                    ByVal SahmRanande As Global.System.Nullable(Of Integer),  _
                    ByVal HazineGhaza_Raft As Global.System.Nullable(Of Integer),  _
                    ByVal HazineGhaza_Bargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Total As Global.System.Nullable(Of Integer),  _
                    ByVal Darsad_SahmRanande As Single,  _
                    ByVal Darsad_HazineGhaza_Raft As Global.System.Nullable(Of Single),  _
                    ByVal Darsad_HazineGhaza_Bargasht As Global.System.Nullable(Of Single),  _
                    ByVal MablaghSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Darsad_HaghPayane As Global.System.Nullable(Of Single),  _
                    ByVal Darsad_KomisionBarname As Global.System.Nullable(Of Single),  _
                    ByVal IsProcess As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OperationCode As Integer,  _
                    ByVal Original_OrderID As Integer,  _
                    ByVal Original_ShomareBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhBarname As String,  _
                    ByVal Original_MabdaID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaghsadID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NoeBar As String,  _
                    ByVal Original_MabnaKomision As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KolKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PayeKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DaryaftNaghdi As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HaghPayane As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KomisionBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BimeBarbari As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TafavotKomision As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BimeOmr As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Bargiri_Takhliye As Global.System.Nullable(Of Integer),  _
                    ByVal Original_JarimePolice As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Nobat As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AvarezOtooban As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SahmRanande As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HazineGhaza_Raft As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HazineGhaza_Bargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MeghdarSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Total As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Darsad_SahmRanande As Single,  _
                    ByVal Original_Darsad_HazineGhaza_Raft As Global.System.Nullable(Of Single),  _
                    ByVal Original_Darsad_HazineGhaza_Bargasht As Global.System.Nullable(Of Single),  _
                    ByVal Original_MablaghSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Darsad_HaghPayane As Global.System.Nullable(Of Single),  _
                    ByVal Original_Darsad_KomisionBarname As Global.System.Nullable(Of Single),  _
                    ByVal Original_IsProcess As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OperationCode,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OrderID,Integer)
            If (ShomareBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ShomareBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TarikhBarname Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TarikhBarname,String)
            End If
            If (MabdaID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MabdaID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MaghsadID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(MaghsadID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (NoeBar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NoeBar,String)
            End If
            If (MabnaKomision.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(MabnaKomision.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (KolKerayeBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(KolKerayeBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PayeKerayeBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PayeKerayeBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DaryaftNaghdi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DaryaftNaghdi.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (HaghPayane.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(HaghPayane.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (KomisionBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(KomisionBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BimeBarbari.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(BimeBarbari.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TafavotKomision.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(TafavotKomision.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (BimeOmr.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(BimeOmr.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Bargiri_Takhliye.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Bargiri_Takhliye.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (JarimePolice.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(JarimePolice.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Nobat.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Nobat.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (AvarezOtooban.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(AvarezOtooban.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (SahmRanande.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(SahmRanande.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(HazineGhaza_Raft.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(HazineGhaza_Bargasht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (MeghdarSookht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(MeghdarSookht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Total.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Darsad_SahmRanande,Single)
            If (Darsad_HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Darsad_HazineGhaza_Raft.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Darsad_HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Darsad_HazineGhaza_Bargasht.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (MablaghSookht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(MablaghSookht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Darsad_HaghPayane.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Darsad_HaghPayane.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Darsad_KomisionBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Darsad_KomisionBarname.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (IsProcess.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(IsProcess.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_OperationCode,Integer)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_OrderID,Integer)
            If (Original_ShomareBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ShomareBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_TarikhBarname Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_TarikhBarname,String)
            End If
            If (Original_MabdaID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MabdaID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_MaghsadID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_MaghsadID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_NoeBar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_NoeBar,String)
            End If
            If (Original_MabnaKomision.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_MabnaKomision.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_KolKerayeBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_KolKerayeBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_PayeKerayeBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_PayeKerayeBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_DaryaftNaghdi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_DaryaftNaghdi.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_HaghPayane.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_HaghPayane.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_KomisionBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_KomisionBarname.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_BimeBarbari.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_BimeBarbari.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_TafavotKomision.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_TafavotKomision.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_BimeOmr.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_BimeOmr.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_Bargiri_Takhliye.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Bargiri_Takhliye.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_JarimePolice.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_JarimePolice.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_Nobat.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Nobat.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_AvarezOtooban.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_AvarezOtooban.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_SahmRanande.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_SahmRanande.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_HazineGhaza_Raft.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_HazineGhaza_Bargasht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_MeghdarSookht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_MeghdarSookht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_Total.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Darsad_SahmRanande,Single)
            If (Original_Darsad_HazineGhaza_Raft.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_Darsad_HazineGhaza_Raft.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_Darsad_HazineGhaza_Bargasht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_Darsad_HazineGhaza_Bargasht.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_MablaghSookht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_MablaghSookht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_Darsad_HaghPayane.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_Darsad_HaghPayane.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_Darsad_KomisionBarname.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_Darsad_KomisionBarname.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_IsProcess.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_IsProcess.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ShomareBarname As Global.System.Nullable(Of Integer),  _
                    ByVal TarikhBarname As String,  _
                    ByVal MabdaID As Global.System.Nullable(Of Integer),  _
                    ByVal MaghsadID As Global.System.Nullable(Of Integer),  _
                    ByVal NoeBar As String,  _
                    ByVal MabnaKomision As Global.System.Nullable(Of Integer),  _
                    ByVal KolKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal PayeKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal DaryaftNaghdi As Global.System.Nullable(Of Integer),  _
                    ByVal HaghPayane As Global.System.Nullable(Of Integer),  _
                    ByVal KomisionBarname As Global.System.Nullable(Of Integer),  _
                    ByVal BimeBarbari As Global.System.Nullable(Of Integer),  _
                    ByVal TafavotKomision As Global.System.Nullable(Of Integer),  _
                    ByVal BimeOmr As Global.System.Nullable(Of Integer),  _
                    ByVal Bargiri_Takhliye As Global.System.Nullable(Of Integer),  _
                    ByVal JarimePolice As Global.System.Nullable(Of Integer),  _
                    ByVal Nobat As Global.System.Nullable(Of Integer),  _
                    ByVal AvarezOtooban As Global.System.Nullable(Of Integer),  _
                    ByVal SahmRanande As Global.System.Nullable(Of Integer),  _
                    ByVal HazineGhaza_Raft As Global.System.Nullable(Of Integer),  _
                    ByVal HazineGhaza_Bargasht As Global.System.Nullable(Of Integer),  _
                    ByVal MeghdarSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Total As Global.System.Nullable(Of Integer),  _
                    ByVal Darsad_SahmRanande As Single,  _
                    ByVal Darsad_HazineGhaza_Raft As Global.System.Nullable(Of Single),  _
                    ByVal Darsad_HazineGhaza_Bargasht As Global.System.Nullable(Of Single),  _
                    ByVal MablaghSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Darsad_HaghPayane As Global.System.Nullable(Of Single),  _
                    ByVal Darsad_KomisionBarname As Global.System.Nullable(Of Single),  _
                    ByVal IsProcess As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OperationCode As Integer,  _
                    ByVal Original_OrderID As Integer,  _
                    ByVal Original_ShomareBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TarikhBarname As String,  _
                    ByVal Original_MabdaID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaghsadID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NoeBar As String,  _
                    ByVal Original_MabnaKomision As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KolKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PayeKerayeBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DaryaftNaghdi As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HaghPayane As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KomisionBarname As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BimeBarbari As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TafavotKomision As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BimeOmr As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Bargiri_Takhliye As Global.System.Nullable(Of Integer),  _
                    ByVal Original_JarimePolice As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Nobat As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AvarezOtooban As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SahmRanande As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HazineGhaza_Raft As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HazineGhaza_Bargasht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MeghdarSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Total As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Darsad_SahmRanande As Single,  _
                    ByVal Original_Darsad_HazineGhaza_Raft As Global.System.Nullable(Of Single),  _
                    ByVal Original_Darsad_HazineGhaza_Bargasht As Global.System.Nullable(Of Single),  _
                    ByVal Original_MablaghSookht As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Darsad_HaghPayane As Global.System.Nullable(Of Single),  _
                    ByVal Original_Darsad_KomisionBarname As Global.System.Nullable(Of Single),  _
                    ByVal Original_IsProcess As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(Original_OperationCode, Original_OrderID, ShomareBarname, TarikhBarname, MabdaID, MaghsadID, NoeBar, MabnaKomision, KolKerayeBarname, PayeKerayeBarname, DaryaftNaghdi, HaghPayane, KomisionBarname, BimeBarbari, TafavotKomision, BimeOmr, Bargiri_Takhliye, JarimePolice, Nobat, AvarezOtooban, SahmRanande, HazineGhaza_Raft, HazineGhaza_Bargasht, MeghdarSookht, Total, Darsad_SahmRanande, Darsad_HazineGhaza_Raft, Darsad_HazineGhaza_Bargasht, MablaghSookht, Darsad_HaghPayane, Darsad_KomisionBarname, IsProcess, Original_OperationCode, Original_OrderID, Original_ShomareBarname, Original_TarikhBarname, Original_MabdaID, Original_MaghsadID, Original_NoeBar, Original_MabnaKomision, Original_KolKerayeBarname, Original_PayeKerayeBarname, Original_DaryaftNaghdi, Original_HaghPayane, Original_KomisionBarname, Original_BimeBarbari, Original_TafavotKomision, Original_BimeOmr, Original_Bargiri_Takhliye, Original_JarimePolice, Original_Nobat, Original_AvarezOtooban, Original_SahmRanande, Original_HazineGhaza_Raft, Original_HazineGhaza_Bargasht, Original_MeghdarSookht, Original_Total, Original_Darsad_SahmRanande, Original_Darsad_HazineGhaza_Raft, Original_Darsad_HazineGhaza_Bargasht, Original_MablaghSookht, Original_Darsad_HaghPayane, Original_Darsad_KomisionBarname, Original_IsProcess)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function ChangePaymentStatus(ByVal PaymentStatus As Boolean, ByVal OperationCode As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(PaymentStatus,Boolean)
            command.Parameters(1).Value = CType(OperationCode,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteSanad(ByVal OperationCode As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(OperationCode,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateProcess(ByVal IsProcess As Global.System.Nullable(Of Boolean), ByVal OperationCode As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (IsProcess.HasValue = true) Then
                command.Parameters(0).Value = CType(IsProcess.Value,Boolean)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(OperationCode,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_TankhahTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Tankhah"
            tableMapping.ColumnMappings.Add("TankhahID", "TankhahID")
            tableMapping.ColumnMappings.Add("TankhahSanadID", "TankhahSanadID")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("Vajhe", "Vajhe")
            tableMapping.ColumnMappings.Add("TotalValue", "TotalValue")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_Tankhah] WHERE (([TankhahID] = @Original_TankhahID) AND (["& _ 
                "TankhahSanadID] = @Original_TankhahSanadID) AND ([pDate] = @Original_pDate) AND "& _ 
                "([Vajhe] = @Original_Vajhe) AND ([TotalValue] = @Original_TotalValue))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahSanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahSanadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Vajhe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vajhe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalValue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalValue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_Tankhah] ([TankhahID], [TankhahSanadID], [pDate], [Vajhe],"& _ 
                " [TotalValue]) VALUES (@TankhahID, @TankhahSanadID, @pDate, @Vajhe, @TotalValue)"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TankhahID, TankhahSanadID, pDate, Vajhe, TotalValue FROM tbl_Tankhah W"& _ 
                "HERE (TankhahID = @TankhahID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahSanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahSanadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vajhe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vajhe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalValue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_Tankhah] SET [TankhahID] = @TankhahID, [TankhahSanadID] = @Tank"& _ 
                "hahSanadID, [pDate] = @pDate, [Vajhe] = @Vajhe, [TotalValue] = @TotalValue WHERE"& _ 
                " (([TankhahID] = @Original_TankhahID) AND ([TankhahSanadID] = @Original_TankhahS"& _ 
                "anadID) AND ([pDate] = @Original_pDate) AND ([Vajhe] = @Original_Vajhe) AND ([To"& _ 
                "talValue] = @Original_TotalValue));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TankhahID, TankhahSanadID, pDate, Va"& _ 
                "jhe, TotalValue FROM tbl_Tankhah WHERE (TankhahID = @TankhahID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahSanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahSanadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vajhe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vajhe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalValue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahSanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahSanadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_pDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Vajhe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vajhe", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalValue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalValue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TankhahID, TankhahSanadID, pDate, Vajhe, TotalValue FROM dbo.tbl_Tankhah"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_Tankhah"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (TankhahID = @TankhahID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE    tbl_Tankhah"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              TankhahSanadID = @TankhahSanadID, pDate ="& _ 
                " @pDate, Vajhe = @Vajhe, TotalValue = @TotalValue"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (TankhahID = @Tankh"& _ 
                "ahID);"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahSanadID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahSanadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "pDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vajhe", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Vajhe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalValue", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "dbo.usp_GetTankhahID"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_TankhahDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_TankhahDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_TankhahDataTable = New dsTarabari.tbl_TankhahDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_TankhahDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Tankhah")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_TankhahID As Integer, ByVal Original_TankhahSanadID As Integer, ByVal Original_pDate As String, ByVal Original_Vajhe As String, ByVal Original_TotalValue As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TankhahID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TankhahSanadID,Integer)
            If (Original_pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pDate")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_pDate,String)
            End If
            If (Original_Vajhe Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Vajhe")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Vajhe,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TotalValue,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TankhahID As Integer, ByVal TankhahSanadID As Integer, ByVal pDate As String, ByVal Vajhe As String, ByVal TotalValue As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(TankhahSanadID,Integer)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(pDate,String)
            End If
            If (Vajhe Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Vajhe")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Vajhe,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(TotalValue,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TankhahID As Integer, ByVal TankhahSanadID As Integer, ByVal pDate As String, ByVal Vajhe As String, ByVal TotalValue As Integer, ByVal Original_TankhahID As Integer, ByVal Original_TankhahSanadID As Integer, ByVal Original_pDate As String, ByVal Original_Vajhe As String, ByVal Original_TotalValue As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TankhahSanadID,Integer)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(pDate,String)
            End If
            If (Vajhe Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Vajhe")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Vajhe,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TotalValue,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_TankhahID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TankhahSanadID,Integer)
            If (Original_pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_pDate,String)
            End If
            If (Original_Vajhe Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Vajhe")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Vajhe,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_TotalValue,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TankhahSanadID As Integer, ByVal pDate As String, ByVal Vajhe As String, ByVal TotalValue As Integer, ByVal Original_TankhahID As Integer, ByVal Original_TankhahSanadID As Integer, ByVal Original_pDate As String, ByVal Original_Vajhe As String, ByVal Original_TotalValue As Integer) As Integer
            Return Me.Update(Original_TankhahID, TankhahSanadID, pDate, Vajhe, TotalValue, Original_TankhahID, Original_TankhahSanadID, Original_pDate, Original_Vajhe, Original_TotalValue)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteTankhah(ByVal TankhahID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(TankhahID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal TankhahSanadID As Integer, ByVal pDate As String, ByVal Vajhe As String, ByVal TotalValue As Integer, ByVal TankhahID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(TankhahSanadID,Integer)
            If (pDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pDate")
            Else
                command.Parameters(1).Value = CType(pDate,String)
            End If
            If (Vajhe Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Vajhe")
            Else
                command.Parameters(2).Value = CType(Vajhe,String)
            End If
            command.Parameters(3).Value = CType(TotalValue,Integer)
            command.Parameters(4).Value = CType(TankhahID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function usp_GetTankhahID() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Try 
                command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(0).Value Is Nothing)  _
                        OrElse (command.Parameters(0).Value.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(command.Parameters(0).Value,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_TankhahDetail_FactorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_TankhahDetail_Factor"
            tableMapping.ColumnMappings.Add("TankhahID", "TankhahID")
            tableMapping.ColumnMappings.Add("FactorID", "FactorID")
            tableMapping.ColumnMappings.Add("TedadBargZamime", "TedadBargZamime")
            tableMapping.ColumnMappings.Add("ShomareSanadPardakht", "ShomareSanadPardakht")
            tableMapping.ColumnMappings.Add("ShomareResidAnbar", "ShomareResidAnbar")
            tableMapping.ColumnMappings.Add("Molahezat", "Molahezat")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_TankhahDetail_Factor] WHERE (([TankhahID] = @Original_Tank"& _ 
                "hahID) AND ([FactorID] = @Original_FactorID) AND ((@IsNull_TedadBargZamime = 1 A"& _ 
                "ND [TedadBargZamime] IS NULL) OR ([TedadBargZamime] = @Original_TedadBargZamime)"& _ 
                ") AND ((@IsNull_ShomareSanadPardakht = 1 AND [ShomareSanadPardakht] IS NULL) OR "& _ 
                "([ShomareSanadPardakht] = @Original_ShomareSanadPardakht)) AND ((@IsNull_Shomare"& _ 
                "ResidAnbar = 1 AND [ShomareResidAnbar] IS NULL) OR ([ShomareResidAnbar] = @Origi"& _ 
                "nal_ShomareResidAnbar)) AND ((@IsNull_Molahezat = 1 AND [Molahezat] IS NULL) OR "& _ 
                "([Molahezat] = @Original_Molahezat)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Molahezat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_TankhahDetail_Factor] ([TankhahID], [FactorID], [TedadBarg"& _ 
                "Zamime], [ShomareSanadPardakht], [ShomareResidAnbar], [Molahezat]) VALUES (@Tank"& _ 
                "hahID, @FactorID, @TedadBargZamime, @ShomareSanadPardakht, @ShomareResidAnbar, @"& _ 
                "Molahezat);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TankhahID, FactorID, TedadBargZamime, ShomareSanadPardakht, "& _ 
                "ShomareResidAnbar, Molahezat FROM tbl_TankhahDetail_Factor WHERE (FactorID = @Fa"& _ 
                "ctorID) AND (TankhahID = @TankhahID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_TankhahDetail_Factor] SET [TankhahID] = @TankhahID, [FactorID] "& _ 
                "= @FactorID, [TedadBargZamime] = @TedadBargZamime, [ShomareSanadPardakht] = @Sho"& _ 
                "mareSanadPardakht, [ShomareResidAnbar] = @ShomareResidAnbar, [Molahezat] = @Mola"& _ 
                "hezat WHERE (([TankhahID] = @Original_TankhahID) AND ([FactorID] = @Original_Fac"& _ 
                "torID) AND ((@IsNull_TedadBargZamime = 1 AND [TedadBargZamime] IS NULL) OR ([Ted"& _ 
                "adBargZamime] = @Original_TedadBargZamime)) AND ((@IsNull_ShomareSanadPardakht ="& _ 
                " 1 AND [ShomareSanadPardakht] IS NULL) OR ([ShomareSanadPardakht] = @Original_Sh"& _ 
                "omareSanadPardakht)) AND ((@IsNull_ShomareResidAnbar = 1 AND [ShomareResidAnbar]"& _ 
                " IS NULL) OR ([ShomareResidAnbar] = @Original_ShomareResidAnbar)) AND ((@IsNull_"& _ 
                "Molahezat = 1 AND [Molahezat] IS NULL) OR ([Molahezat] = @Original_Molahezat)));"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TankhahID, FactorID, TedadBargZamime, ShomareSanadPardakht, ShomareResi"& _ 
                "dAnbar, Molahezat FROM tbl_TankhahDetail_Factor WHERE (FactorID = @FactorID) AND"& _ 
                " (TankhahID = @TankhahID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FactorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Molahezat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TankhahID, FactorID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAn"& _ 
                "bar, Molahezat FROM dbo.tbl_TankhahDetail_Factor"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_TankhahDetail_Factor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (TankhahID = @TankhahID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT TankhahID, FactorID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAn"& _ 
                "bar, Molahezat FROM dbo.tbl_TankhahDetail_Factor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (TankhahID = @Tankha"& _ 
                "hID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_TankhahDetail_FactorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_TankhahDetail_FactorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_TankhahDetail_FactorDataTable = New dsTarabari.tbl_TankhahDetail_FactorDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetTankhahDetail(ByVal TankhahID As Integer) As dsTarabari.tbl_TankhahDetail_FactorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Dim dataTable As dsTarabari.tbl_TankhahDetail_FactorDataTable = New dsTarabari.tbl_TankhahDetail_FactorDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_TankhahDetail_FactorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_TankhahDetail_Factor")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_TankhahID As Integer, ByVal Original_FactorID As Integer, ByVal Original_TedadBargZamime As Global.System.Nullable(Of Integer), ByVal Original_ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal Original_ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Original_Molahezat As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TankhahID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FactorID,Integer)
            If (Original_TedadBargZamime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_Molahezat Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Molahezat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TankhahID As Integer, ByVal FactorID As Integer, ByVal TedadBargZamime As Global.System.Nullable(Of Integer), ByVal ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Molahezat As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FactorID,Integer)
            If (TedadBargZamime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Molahezat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Molahezat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TankhahID As Integer, ByVal FactorID As Integer, ByVal TedadBargZamime As Global.System.Nullable(Of Integer), ByVal ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Molahezat As String, ByVal Original_TankhahID As Integer, ByVal Original_FactorID As Integer, ByVal Original_TedadBargZamime As Global.System.Nullable(Of Integer), ByVal Original_ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal Original_ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Original_Molahezat As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FactorID,Integer)
            If (TedadBargZamime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Molahezat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Molahezat,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TankhahID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FactorID,Integer)
            If (Original_TedadBargZamime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_Molahezat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Molahezat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TedadBargZamime As Global.System.Nullable(Of Integer), ByVal ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Molahezat As String, ByVal Original_TankhahID As Integer, ByVal Original_FactorID As Integer, ByVal Original_TedadBargZamime As Global.System.Nullable(Of Integer), ByVal Original_ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal Original_ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Original_Molahezat As String) As Integer
            Return Me.Update(Original_TankhahID, Original_FactorID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnbar, Molahezat, Original_TankhahID, Original_FactorID, Original_TedadBargZamime, Original_ShomareSanadPardakht, Original_ShomareResidAnbar, Original_Molahezat)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal TankhahID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(TankhahID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_TankhahDetail_SanadTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_TankhahDetail_Sanad"
            tableMapping.ColumnMappings.Add("TankhahID", "TankhahID")
            tableMapping.ColumnMappings.Add("SanadID", "SanadID")
            tableMapping.ColumnMappings.Add("TedadBargZamime", "TedadBargZamime")
            tableMapping.ColumnMappings.Add("ShomareSanadPardakht", "ShomareSanadPardakht")
            tableMapping.ColumnMappings.Add("ShomareResidAnbar", "ShomareResidAnbar")
            tableMapping.ColumnMappings.Add("Molahezat", "Molahezat")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_TankhahDetail_Sanad] WHERE (([TankhahID] = @Original_Tankh"& _ 
                "ahID) AND ([SanadID] = @Original_SanadID) AND ((@IsNull_TedadBargZamime = 1 AND "& _ 
                "[TedadBargZamime] IS NULL) OR ([TedadBargZamime] = @Original_TedadBargZamime)) A"& _ 
                "ND ((@IsNull_ShomareSanadPardakht = 1 AND [ShomareSanadPardakht] IS NULL) OR ([S"& _ 
                "homareSanadPardakht] = @Original_ShomareSanadPardakht)) AND ((@IsNull_ShomareRes"& _ 
                "idAnbar = 1 AND [ShomareResidAnbar] IS NULL) OR ([ShomareResidAnbar] = @Original"& _ 
                "_ShomareResidAnbar)) AND ((@IsNull_Molahezat = 1 AND [Molahezat] IS NULL) OR ([M"& _ 
                "olahezat] = @Original_Molahezat)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SanadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Molahezat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_TankhahDetail_Sanad] ([TankhahID], [SanadID], [TedadBargZa"& _ 
                "mime], [ShomareSanadPardakht], [ShomareResidAnbar], [Molahezat]) VALUES (@Tankha"& _ 
                "hID, @SanadID, @TedadBargZamime, @ShomareSanadPardakht, @ShomareResidAnbar, @Mol"& _ 
                "ahezat);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TankhahID, SanadID, TedadBargZamime, ShomareSanadPardakht, Shom"& _ 
                "areResidAnbar, Molahezat FROM tbl_TankhahDetail_Sanad WHERE (SanadID = @SanadID)"& _ 
                " AND (TankhahID = @TankhahID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SanadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_TankhahDetail_Sanad] SET [TankhahID] = @TankhahID, [SanadID] = "& _ 
                "@SanadID, [TedadBargZamime] = @TedadBargZamime, [ShomareSanadPardakht] = @Shomar"& _ 
                "eSanadPardakht, [ShomareResidAnbar] = @ShomareResidAnbar, [Molahezat] = @Molahez"& _ 
                "at WHERE (([TankhahID] = @Original_TankhahID) AND ([SanadID] = @Original_SanadID"& _ 
                ") AND ((@IsNull_TedadBargZamime = 1 AND [TedadBargZamime] IS NULL) OR ([TedadBar"& _ 
                "gZamime] = @Original_TedadBargZamime)) AND ((@IsNull_ShomareSanadPardakht = 1 AN"& _ 
                "D [ShomareSanadPardakht] IS NULL) OR ([ShomareSanadPardakht] = @Original_Shomare"& _ 
                "SanadPardakht)) AND ((@IsNull_ShomareResidAnbar = 1 AND [ShomareResidAnbar] IS N"& _ 
                "ULL) OR ([ShomareResidAnbar] = @Original_ShomareResidAnbar)) AND ((@IsNull_Molah"& _ 
                "ezat = 1 AND [Molahezat] IS NULL) OR ([Molahezat] = @Original_Molahezat)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT TankhahID, SanadID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnbar"& _ 
                ", Molahezat FROM tbl_TankhahDetail_Sanad WHERE (SanadID = @SanadID) AND (Tankhah"& _ 
                "ID = @TankhahID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SanadID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TankhahID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SanadID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SanadID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TedadBargZamime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TedadBargZamime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareSanadPardakht", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareSanadPardakht", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShomareResidAnbar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShomareResidAnbar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Molahezat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Molahezat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Molahezat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TankhahID, SanadID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnb"& _ 
                "ar, Molahezat FROM dbo.tbl_TankhahDetail_Sanad"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tbl_TankhahDetail_Sanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (TankhahID = @TankhahID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     TankhahID, SanadID, TedadBargZamime, ShomareSanadPardakht, ShomareResi"& _ 
                "dAnbar, Molahezat"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_TankhahDetail_Sanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (TankhahID = "& _ 
                "@TankhahID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TankhahID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.tbl_TankhahDetail_SanadDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.tbl_TankhahDetail_SanadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.tbl_TankhahDetail_SanadDataTable = New dsTarabari.tbl_TankhahDetail_SanadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetTankhahDetail(ByVal TankhahID As Integer) As dsTarabari.tbl_TankhahDetail_SanadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Dim dataTable As dsTarabari.tbl_TankhahDetail_SanadDataTable = New dsTarabari.tbl_TankhahDetail_SanadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTarabari.tbl_TankhahDetail_SanadDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTarabari) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_TankhahDetail_Sanad")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_TankhahID As Integer, ByVal Original_SanadID As Integer, ByVal Original_TedadBargZamime As Global.System.Nullable(Of Integer), ByVal Original_ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal Original_ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Original_Molahezat As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TankhahID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SanadID,Integer)
            If (Original_TedadBargZamime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_Molahezat Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Molahezat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TankhahID As Integer, ByVal SanadID As Integer, ByVal TedadBargZamime As Global.System.Nullable(Of Integer), ByVal ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Molahezat As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(SanadID,Integer)
            If (TedadBargZamime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Molahezat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Molahezat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TankhahID As Integer, ByVal SanadID As Integer, ByVal TedadBargZamime As Global.System.Nullable(Of Integer), ByVal ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Molahezat As String, ByVal Original_TankhahID As Integer, ByVal Original_SanadID As Integer, ByVal Original_TedadBargZamime As Global.System.Nullable(Of Integer), ByVal Original_ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal Original_ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Original_Molahezat As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TankhahID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SanadID,Integer)
            If (TedadBargZamime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Molahezat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Molahezat,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TankhahID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_SanadID,Integer)
            If (Original_TedadBargZamime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_TedadBargZamime.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareSanadPardakht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ShomareSanadPardakht.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_ShomareResidAnbar.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_ShomareResidAnbar.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_Molahezat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Molahezat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TedadBargZamime As Global.System.Nullable(Of Integer), ByVal ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Molahezat As String, ByVal Original_TankhahID As Integer, ByVal Original_SanadID As Integer, ByVal Original_TedadBargZamime As Global.System.Nullable(Of Integer), ByVal Original_ShomareSanadPardakht As Global.System.Nullable(Of Integer), ByVal Original_ShomareResidAnbar As Global.System.Nullable(Of Integer), ByVal Original_Molahezat As String) As Integer
            Return Me.Update(Original_TankhahID, Original_SanadID, TedadBargZamime, ShomareSanadPardakht, ShomareResidAnbar, Molahezat, Original_TankhahID, Original_SanadID, Original_TedadBargZamime, Original_ShomareSanadPardakht, Original_ShomareResidAnbar, Original_Molahezat)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal TankhahID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(TankhahID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class usp_GetTankhahDetailByTankhahIDTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "usp_GetTankhahDetailByTankhahID"
            tableMapping.ColumnMappings.Add("TankhahID", "TankhahID")
            tableMapping.ColumnMappings.Add("TankhahSanadID", "TankhahSanadID")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("Vajhe", "Vajhe")
            tableMapping.ColumnMappings.Add("TotalValue", "TotalValue")
            tableMapping.ColumnMappings.Add("FS_ID", "FS_ID")
            tableMapping.ColumnMappings.Add("TedadBargZamime", "TedadBargZamime")
            tableMapping.ColumnMappings.Add("ShomareSanadPardakht", "ShomareSanadPardakht")
            tableMapping.ColumnMappings.Add("ShomareResidAnbar", "ShomareResidAnbar")
            tableMapping.ColumnMappings.Add("Molahezat", "Molahezat")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal")
            tableMapping.ColumnMappings.Add("Type", "Type")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.usp_GetTankhahDetailByTankhahID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TankhahID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.usp_GetTankhahDetailByTankhahIDDataTable, ByVal TankhahID As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TankhahID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TankhahID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal TankhahID As Global.System.Nullable(Of Integer)) As dsTarabari.usp_GetTankhahDetailByTankhahIDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TankhahID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TankhahID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsTarabari.usp_GetTankhahDetailByTankhahIDDataTable = New dsTarabari.usp_GetTankhahDetailByTankhahIDDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vSanadListTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vSanadList"
            tableMapping.ColumnMappings.Add("OperationCode", "OperationCode")
            tableMapping.ColumnMappings.Add("RanandeFullName", "RanandeFullName")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("MabdaID", "MabdaID")
            tableMapping.ColumnMappings.Add("NameMabda", "NameMabda")
            tableMapping.ColumnMappings.Add("MaghsadID", "MaghsadID")
            tableMapping.ColumnMappings.Add("NameMaghsad", "NameMaghsad")
            tableMapping.ColumnMappings.Add("TarikhKhoroojMojtame", "TarikhKhoroojMojtame")
            tableMapping.ColumnMappings.Add("TarikhVoroodMojtame", "TarikhVoroodMojtame")
            tableMapping.ColumnMappings.Add("Total", "Total")
            tableMapping.ColumnMappings.Add("IsProcess", "IsProcess")
            tableMapping.ColumnMappings.Add("PaymentStatus", "PaymentStatus")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     OperationCode, RanandeFullName, RanandePersonalCode, MashinID, Pelak, "& _ 
                "MabdaID, NameMabda, MaghsadID, NameMaghsad, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      TarikhKhoroo"& _ 
                "jMojtame, TarikhVoroodMojtame, Total, IsProcess, PaymentStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         vSa"& _ 
                "nadList"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT IsProcess, MabdaID, MaghsadID, MashinID, NameMabda, NameMaghsad, Operation"& _ 
                "Code, PaymentStatus, Pelak, RanandeFullName, RanandePersonalCode, TarikhKhoroojM"& _ 
                "ojtame, TarikhVoroodMojtame, Total FROM vSanadList WHERE (IsProcess = 0)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT IsProcess, MabdaID, MaghsadID, MashinID, NameMabda, NameMaghsad, Operation"& _ 
                "Code, PaymentStatus, Pelak, RanandeFullName, RanandePersonalCode, TarikhKhoroojM"& _ 
                "ojtame, TarikhVoroodMojtame, Total FROM vSanadList WHERE (OperationCode = @Opera"& _ 
                "tionCode)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.vSanadListDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.vSanadListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.vSanadListDataTable = New dsTarabari.vSanadListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData4Tankhah() As dsTarabari.vSanadListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As dsTarabari.vSanadListDataTable = New dsTarabari.vSanadListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOperationCode(ByVal OperationCode As Integer) As dsTarabari.vSanadListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(OperationCode,Integer)
            Dim dataTable As dsTarabari.vSanadListDataTable = New dsTarabari.vSanadListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vFactorListTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vFactorList"
            tableMapping.ColumnMappings.Add("FactorID", "FactorID")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("NameTamirgah", "NameTamirgah")
            tableMapping.ColumnMappings.Add("IsProcess", "IsProcess")
            tableMapping.ColumnMappings.Add("PaymentStatus", "PaymentStatus")
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FactorID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak, NameTamir"& _ 
                "gah, IsProcess, PaymentStatus, SubTotal FROM dbo.vFactorList"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     FactorID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak, NameT"& _ 
                "amirgah, IsProcess, PaymentStatus, SubTotal"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         vFactorList"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                " (FactorID = @FactorID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FactorID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FactorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     FactorID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak, NameT"& _ 
                "amirgah, IsProcess, PaymentStatus, SubTotal"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         vFactorList"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                " (MashinID = @MashinId) AND (SUBSTRING(pDate, 1, 4) = @Year)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MashinId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MashinID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     FactorID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak, NameT"& _ 
                "amirgah, IsProcess, PaymentStatus, SubTotal"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         vFactorList"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                " (IsProcess = 0)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.vFactorListDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.vFactorListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.vFactorListDataTable = New dsTarabari.vFactorListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function FindByFactorID(ByVal FactorID As Integer) As dsTarabari.vFactorListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FactorID,Integer)
            Dim dataTable As dsTarabari.vFactorListDataTable = New dsTarabari.vFactorListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByMashinIdAndYear(ByVal MashinId As Integer, ByVal Year As String) As dsTarabari.vFactorListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(MashinId,Integer)
            If (Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Year")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Year,String)
            End If
            Dim dataTable As dsTarabari.vFactorListDataTable = New dsTarabari.vFactorListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataToTankhah() As dsTarabari.vFactorListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Dim dataTable As dsTarabari.vFactorListDataTable = New dsTarabari.vFactorListDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vFactorSanadTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vFactorSanad"
            tableMapping.ColumnMappings.Add("FS_Type", "FS_Type")
            tableMapping.ColumnMappings.Add("FS_ID", "FS_ID")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("RanandePersonalCode", "RanandePersonalCode")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("MashinID", "MashinID")
            tableMapping.ColumnMappings.Add("Pelak", "Pelak")
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal")
            tableMapping.ColumnMappings.Add("PaymentStatus", "PaymentStatus")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Tarabari.My.MySettings.Default.dbTarabariConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     FS_Type, FS_ID, pDate, RanandePersonalCode, Fullname, MashinID, Pelak,"& _ 
                " SubTotal, PaymentStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         vFactorSanad"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY pDate"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTarabari.vFactorSanadDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTarabari.vFactorSanadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTarabari.vFactorSanadDataTable = New dsTarabari.vFactorSanadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tbl_MahalBargiriTableAdapter As tbl_MahalBargiriTableAdapter
        
        Private _tbl_MabdaTableAdapter As tbl_MabdaTableAdapter
        
        Private _tbl_MaghsadTableAdapter As tbl_MaghsadTableAdapter
        
        Private _tbl_MashinRanandeTableAdapter As tbl_MashinRanandeTableAdapter
        
        Private _tbl_EzamNavganTableAdapter As tbl_EzamNavganTableAdapter
        
        Private _tbl_TamiratTableAdapter As tbl_TamiratTableAdapter
        
        Private _tbl_TamiratJoziyatTableAdapter As tbl_TamiratJoziyatTableAdapter
        
        Private _tbl_SettingTableAdapter As tbl_SettingTableAdapter
        
        Private _tbl_MashinTableAdapter As tbl_MashinTableAdapter
        
        Private _tbl_KafiTableAdapter As tbl_KafiTableAdapter
        
        Private _tbl_RanandeganTableAdapter As tbl_RanandeganTableAdapter
        
        Private _tbl_NavganStatusTableAdapter As tbl_NavganStatusTableAdapter
        
        Private _tbl_SanadTableAdapter As tbl_SanadTableAdapter
        
        Private _tbl_TankhahTableAdapter As tbl_TankhahTableAdapter
        
        Private _tbl_TankhahDetail_FactorTableAdapter As tbl_TankhahDetail_FactorTableAdapter
        
        Private _tbl_TankhahDetail_SanadTableAdapter As tbl_TankhahDetail_SanadTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MahalBargiriTableAdapter() As tbl_MahalBargiriTableAdapter
            Get
                Return Me._tbl_MahalBargiriTableAdapter
            End Get
            Set
                Me._tbl_MahalBargiriTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MabdaTableAdapter() As tbl_MabdaTableAdapter
            Get
                Return Me._tbl_MabdaTableAdapter
            End Get
            Set
                Me._tbl_MabdaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MaghsadTableAdapter() As tbl_MaghsadTableAdapter
            Get
                Return Me._tbl_MaghsadTableAdapter
            End Get
            Set
                Me._tbl_MaghsadTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MashinRanandeTableAdapter() As tbl_MashinRanandeTableAdapter
            Get
                Return Me._tbl_MashinRanandeTableAdapter
            End Get
            Set
                Me._tbl_MashinRanandeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_EzamNavganTableAdapter() As tbl_EzamNavganTableAdapter
            Get
                Return Me._tbl_EzamNavganTableAdapter
            End Get
            Set
                Me._tbl_EzamNavganTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_TamiratTableAdapter() As tbl_TamiratTableAdapter
            Get
                Return Me._tbl_TamiratTableAdapter
            End Get
            Set
                Me._tbl_TamiratTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_TamiratJoziyatTableAdapter() As tbl_TamiratJoziyatTableAdapter
            Get
                Return Me._tbl_TamiratJoziyatTableAdapter
            End Get
            Set
                Me._tbl_TamiratJoziyatTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_SettingTableAdapter() As tbl_SettingTableAdapter
            Get
                Return Me._tbl_SettingTableAdapter
            End Get
            Set
                Me._tbl_SettingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MashinTableAdapter() As tbl_MashinTableAdapter
            Get
                Return Me._tbl_MashinTableAdapter
            End Get
            Set
                Me._tbl_MashinTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_KafiTableAdapter() As tbl_KafiTableAdapter
            Get
                Return Me._tbl_KafiTableAdapter
            End Get
            Set
                Me._tbl_KafiTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_RanandeganTableAdapter() As tbl_RanandeganTableAdapter
            Get
                Return Me._tbl_RanandeganTableAdapter
            End Get
            Set
                Me._tbl_RanandeganTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_NavganStatusTableAdapter() As tbl_NavganStatusTableAdapter
            Get
                Return Me._tbl_NavganStatusTableAdapter
            End Get
            Set
                Me._tbl_NavganStatusTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_SanadTableAdapter() As tbl_SanadTableAdapter
            Get
                Return Me._tbl_SanadTableAdapter
            End Get
            Set
                Me._tbl_SanadTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_TankhahTableAdapter() As tbl_TankhahTableAdapter
            Get
                Return Me._tbl_TankhahTableAdapter
            End Get
            Set
                Me._tbl_TankhahTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_TankhahDetail_FactorTableAdapter() As tbl_TankhahDetail_FactorTableAdapter
            Get
                Return Me._tbl_TankhahDetail_FactorTableAdapter
            End Get
            Set
                Me._tbl_TankhahDetail_FactorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_TankhahDetail_SanadTableAdapter() As tbl_TankhahDetail_SanadTableAdapter
            Get
                Return Me._tbl_TankhahDetail_SanadTableAdapter
            End Get
            Set
                Me._tbl_TankhahDetail_SanadTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MahalBargiriTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MahalBargiriTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MabdaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MabdaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MabdaTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MaghsadTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MaghsadTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MaghsadTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MashinRanandeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MashinRanandeTableAdapter.Connection
                End If
                If ((Not (Me._tbl_EzamNavganTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_EzamNavganTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_EzamNavganTableAdapter.Connection
                End If
                If ((Not (Me._tbl_TamiratTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_TamiratTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_TamiratTableAdapter.Connection
                End If
                If ((Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_TamiratJoziyatTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_TamiratJoziyatTableAdapter.Connection
                End If
                If ((Not (Me._tbl_SettingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_SettingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_SettingTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MashinTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MashinTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MashinTableAdapter.Connection
                End If
                If ((Not (Me._tbl_KafiTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_KafiTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_KafiTableAdapter.Connection
                End If
                If ((Not (Me._tbl_RanandeganTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_RanandeganTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_RanandeganTableAdapter.Connection
                End If
                If ((Not (Me._tbl_NavganStatusTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_NavganStatusTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_NavganStatusTableAdapter.Connection
                End If
                If ((Not (Me._tbl_SanadTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_SanadTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_SanadTableAdapter.Connection
                End If
                If ((Not (Me._tbl_TankhahTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_TankhahTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_TankhahTableAdapter.Connection
                End If
                If ((Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_TankhahDetail_FactorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_TankhahDetail_FactorTableAdapter.Connection
                End If
                If ((Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_TankhahDetail_SanadTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_TankhahDetail_SanadTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MabdaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MaghsadTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_EzamNavganTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_TamiratTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_SettingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MashinTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_KafiTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_RanandeganTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_NavganStatusTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_SanadTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_TankhahTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsTarabari, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_KafiTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Kafi.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_KafiTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MashinTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Mashin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MashinTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_RanandeganTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Ranandegan.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_RanandeganTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_MahalBargiri.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MahalBargiriTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MaghsadTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Maghsad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MaghsadTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MabdaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Mabda.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MabdaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Tankhah.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_TankhahTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_EzamNavganTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_EzamNavgan.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_EzamNavganTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_TamiratTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Tamirat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_TamiratTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_TankhahDetail_Factor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_TankhahDetail_FactorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_SanadTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Sanad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_SanadTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_TankhahDetail_Sanad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_TankhahDetail_SanadTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_MashinRanande.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MashinRanandeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_TamiratJoziyat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_TamiratJoziyatTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_SettingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Setting.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_SettingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_NavganStatusTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_NavganStatus.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_NavganStatusTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsTarabari, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_KafiTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Kafi.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_KafiTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MashinTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Mashin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MashinTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_RanandeganTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Ranandegan.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_RanandeganTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_MahalBargiri.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MahalBargiriTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MaghsadTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Maghsad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MaghsadTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MabdaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Mabda.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MabdaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Tankhah.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_TankhahTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_EzamNavganTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_EzamNavgan.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_EzamNavganTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_TamiratTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Tamirat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_TamiratTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_TankhahDetail_Factor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_TankhahDetail_FactorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_SanadTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Sanad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_SanadTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_TankhahDetail_Sanad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_TankhahDetail_SanadTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_MashinRanande.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MashinRanandeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_TamiratJoziyat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_TamiratJoziyatTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_SettingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Setting.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_SettingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_NavganStatusTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_NavganStatus.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_NavganStatusTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsTarabari, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_NavganStatusTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_NavganStatus.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_NavganStatusTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_SettingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Setting.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_SettingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_TamiratJoziyat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_TamiratJoziyatTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_MashinRanande.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MashinRanandeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_TankhahDetail_Sanad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_TankhahDetail_SanadTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_SanadTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Sanad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_SanadTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_TankhahDetail_Factor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_TankhahDetail_FactorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_TamiratTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Tamirat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_TamiratTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_EzamNavganTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_EzamNavgan.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_EzamNavganTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_TankhahTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Tankhah.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_TankhahTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MabdaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Mabda.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MabdaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MaghsadTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Maghsad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MaghsadTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_MahalBargiri.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MahalBargiriTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_RanandeganTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Ranandegan.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_RanandeganTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MashinTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Mashin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MashinTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_KafiTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Kafi.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_KafiTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsTarabari) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MahalBargiriTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MabdaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MabdaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MaghsadTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MaghsadTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MashinRanandeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_EzamNavganTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_EzamNavganTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_TamiratTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_TamiratTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_TamiratJoziyatTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_SettingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_SettingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MashinTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MashinTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_KafiTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_KafiTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_RanandeganTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_RanandeganTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_NavganStatusTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_NavganStatusTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_SanadTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_SanadTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_TankhahTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_TankhahTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_TankhahDetail_FactorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_TankhahDetail_SanadTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MahalBargiriTableAdapter, Me._tbl_MahalBargiriTableAdapter.Connection)
                    Me._tbl_MahalBargiriTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MahalBargiriTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_MahalBargiriTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MahalBargiriTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MahalBargiriTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MabdaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MabdaTableAdapter, Me._tbl_MabdaTableAdapter.Connection)
                    Me._tbl_MabdaTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MabdaTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_MabdaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MabdaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MabdaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MaghsadTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MaghsadTableAdapter, Me._tbl_MaghsadTableAdapter.Connection)
                    Me._tbl_MaghsadTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MaghsadTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_MaghsadTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MaghsadTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MaghsadTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MashinRanandeTableAdapter, Me._tbl_MashinRanandeTableAdapter.Connection)
                    Me._tbl_MashinRanandeTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MashinRanandeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_MashinRanandeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MashinRanandeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MashinRanandeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_EzamNavganTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_EzamNavganTableAdapter, Me._tbl_EzamNavganTableAdapter.Connection)
                    Me._tbl_EzamNavganTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_EzamNavganTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_EzamNavganTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_EzamNavganTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_EzamNavganTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_TamiratTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_TamiratTableAdapter, Me._tbl_TamiratTableAdapter.Connection)
                    Me._tbl_TamiratTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TamiratTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_TamiratTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_TamiratTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_TamiratTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_TamiratJoziyatTableAdapter, Me._tbl_TamiratJoziyatTableAdapter.Connection)
                    Me._tbl_TamiratJoziyatTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TamiratJoziyatTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_TamiratJoziyatTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_TamiratJoziyatTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_TamiratJoziyatTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_SettingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_SettingTableAdapter, Me._tbl_SettingTableAdapter.Connection)
                    Me._tbl_SettingTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_SettingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_SettingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_SettingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_SettingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MashinTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MashinTableAdapter, Me._tbl_MashinTableAdapter.Connection)
                    Me._tbl_MashinTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MashinTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_MashinTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MashinTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MashinTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_KafiTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_KafiTableAdapter, Me._tbl_KafiTableAdapter.Connection)
                    Me._tbl_KafiTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_KafiTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_KafiTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_KafiTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_KafiTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_RanandeganTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_RanandeganTableAdapter, Me._tbl_RanandeganTableAdapter.Connection)
                    Me._tbl_RanandeganTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_RanandeganTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_RanandeganTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_RanandeganTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_RanandeganTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_NavganStatusTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_NavganStatusTableAdapter, Me._tbl_NavganStatusTableAdapter.Connection)
                    Me._tbl_NavganStatusTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_NavganStatusTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_NavganStatusTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_NavganStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_NavganStatusTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_SanadTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_SanadTableAdapter, Me._tbl_SanadTableAdapter.Connection)
                    Me._tbl_SanadTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_SanadTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_SanadTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_SanadTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_SanadTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_TankhahTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_TankhahTableAdapter, Me._tbl_TankhahTableAdapter.Connection)
                    Me._tbl_TankhahTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TankhahTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_TankhahTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_TankhahTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_TankhahTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_TankhahDetail_FactorTableAdapter, Me._tbl_TankhahDetail_FactorTableAdapter.Connection)
                    Me._tbl_TankhahDetail_FactorTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TankhahDetail_FactorTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_TankhahDetail_FactorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_TankhahDetail_FactorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_TankhahDetail_FactorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_TankhahDetail_SanadTableAdapter, Me._tbl_TankhahDetail_SanadTableAdapter.Connection)
                    Me._tbl_TankhahDetail_SanadTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TankhahDetail_SanadTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_TankhahDetail_SanadTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_TankhahDetail_SanadTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_TankhahDetail_SanadTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tbl_MahalBargiriTableAdapter) Is Nothing) Then
                    Me._tbl_MahalBargiriTableAdapter.Connection = CType(revertConnections(Me._tbl_MahalBargiriTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MahalBargiriTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MabdaTableAdapter) Is Nothing) Then
                    Me._tbl_MabdaTableAdapter.Connection = CType(revertConnections(Me._tbl_MabdaTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MabdaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MaghsadTableAdapter) Is Nothing) Then
                    Me._tbl_MaghsadTableAdapter.Connection = CType(revertConnections(Me._tbl_MaghsadTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MaghsadTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MashinRanandeTableAdapter) Is Nothing) Then
                    Me._tbl_MashinRanandeTableAdapter.Connection = CType(revertConnections(Me._tbl_MashinRanandeTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MashinRanandeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_EzamNavganTableAdapter) Is Nothing) Then
                    Me._tbl_EzamNavganTableAdapter.Connection = CType(revertConnections(Me._tbl_EzamNavganTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_EzamNavganTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_TamiratTableAdapter) Is Nothing) Then
                    Me._tbl_TamiratTableAdapter.Connection = CType(revertConnections(Me._tbl_TamiratTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TamiratTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_TamiratJoziyatTableAdapter) Is Nothing) Then
                    Me._tbl_TamiratJoziyatTableAdapter.Connection = CType(revertConnections(Me._tbl_TamiratJoziyatTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TamiratJoziyatTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_SettingTableAdapter) Is Nothing) Then
                    Me._tbl_SettingTableAdapter.Connection = CType(revertConnections(Me._tbl_SettingTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_SettingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MashinTableAdapter) Is Nothing) Then
                    Me._tbl_MashinTableAdapter.Connection = CType(revertConnections(Me._tbl_MashinTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_MashinTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_KafiTableAdapter) Is Nothing) Then
                    Me._tbl_KafiTableAdapter.Connection = CType(revertConnections(Me._tbl_KafiTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_KafiTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_RanandeganTableAdapter) Is Nothing) Then
                    Me._tbl_RanandeganTableAdapter.Connection = CType(revertConnections(Me._tbl_RanandeganTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_RanandeganTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_NavganStatusTableAdapter) Is Nothing) Then
                    Me._tbl_NavganStatusTableAdapter.Connection = CType(revertConnections(Me._tbl_NavganStatusTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_NavganStatusTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_SanadTableAdapter) Is Nothing) Then
                    Me._tbl_SanadTableAdapter.Connection = CType(revertConnections(Me._tbl_SanadTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_SanadTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_TankhahTableAdapter) Is Nothing) Then
                    Me._tbl_TankhahTableAdapter.Connection = CType(revertConnections(Me._tbl_TankhahTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TankhahTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_TankhahDetail_FactorTableAdapter) Is Nothing) Then
                    Me._tbl_TankhahDetail_FactorTableAdapter.Connection = CType(revertConnections(Me._tbl_TankhahDetail_FactorTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TankhahDetail_FactorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_TankhahDetail_SanadTableAdapter) Is Nothing) Then
                    Me._tbl_TankhahDetail_SanadTableAdapter.Connection = CType(revertConnections(Me._tbl_TankhahDetail_SanadTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_TankhahDetail_SanadTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
